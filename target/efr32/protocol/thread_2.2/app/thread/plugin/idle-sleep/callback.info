#include PLATFORM_HEADER

/** @brief Ok To Sleep
 *
 * This function is called by the Idle/Sleep plugin before sleeping.  It is
 * called with interrupts disabled.  The application should return true if the
 * device may sleep or false otherwise.
 *
 * @param durationMs The maximum duration in milliseconds that the device will
 * sleep.
 */
bool emberAfPluginIdleSleepOkToSleepCallback(uint32_t durationMs)
{
  return true;
}

/** @brief Wake Up
 *
 * This function is called by the Idle/Sleep plugin after sleeping.
 *
 * @param durationMs The duration in milliseconds that the device slept.
 */
void emberAfPluginIdleSleepWakeUpCallback(uint32_t durationMs)
{
}

/** @brief Ok To Idle
 *
 * This function is called by the Idle/Sleep plugin before idling.  It is called
 * with interrupts disabled.  The application should return true if the device
 * may idle or false otherwise.
 *
 * @param durationMs The maximum duration in milliseconds that the device will
 * idle.
 */
bool emberAfPluginIdleSleepOkToIdleCallback(uint32_t durationMs)
{
  return true;
}

/** @brief Active
 *
 * This function is called by the Idle/Sleep plugin after idling.
 *
 * @param durationMs The duration in milliseconds that the device idled.
 */
void emberAfPluginIdleSleepActiveCallback(uint32_t durationMs)
{
}
