name=Polling
description=This plugin will periodically send data poll messages to the parent of the local node.  This plugin is intended for use on sleepy end devices only.
category=Common
quality=production

requiredApis=event,hal,network-management,stack

polling.c

implementedCallbacks=emberPollForDataReturn,emberStackPollForDataReturn
callbacks=callback.info

options=shortPollIntervalS,longPollIntervalS,sleepyChildPollTimeoutS
conditions=pollIntervals,pollTimeout

shortPollIntervalS.name=Short Poll Interval (seconds)
shortPollIntervalS.description=The amount of time (in seconds) the device will wait between MAC data polls when it is expecting data.
shortPollIntervalS.type=NUMBER
shortPollIntervalS.default=1

longPollIntervalS.name=Long Poll Interval (seconds)
longPollIntervalS.description=The amount of time (in seconds) the device will wait between MAC data polls to ensure connectivity with its parent.
longPollIntervalS.type=NUMBER
longPollIntervalS.default=300

sleepyChildPollTimeoutS.name=Sleepy child poll timeout (seconds)
sleepyChildPollTimeoutS.description=The number of seconds after which the parent will time a sleepy end device out of its table if it has not heard a data poll from it.
sleepyChildPollTimeoutS.type=NUMBER
sleepyChildPollTimeoutS.default=330
sleepyChildPollTimeoutS.define=EMBER_SLEEPY_CHILD_POLL_TIMEOUT

pollIntervals.expression=shortPollIntervalS <= longPollIntervalS
pollIntervals.message=The short poll interval must be less than or equal to the long poll interval.

pollTimeout.expression=longPollIntervalS < sleepyChildPollTimeoutS
pollTimeout.message=The long poll interval must be less than the sleepy child poll timeout.

setup(bookkeeping) {
  provides=okToLongPoll

  provides.okToLongPoll=bool emberAfOkToLongPoll(void)
  provides.okToLongPoll.0=emberAfPluginPollingOkToLongPollCallback
  provides.okToLongPoll.type=and

  init=emberAfPluginPollingInitCallback
  tick=emberAfPluginPollingTickCallback
}

setup(eventConfiguration) {
  emberAfPluginPollingEventControl, emberAfPluginPollingEventHandler
}
