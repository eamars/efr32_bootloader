// This file was generated by log-gen.py.  Please do not edit it directly.

enum {
  EM_LOG_JOIN = 0,
  EM_LOG_MAC = 1,
  EM_LOG_NETWORK_DATA = 2,
  EM_LOG_SECURITY = 3,
  EM_LOG_COAP = 4,
  EM_LOG_EXI = 5,
  EM_LOG_SCAN = 6,
  EM_LOG_DROP = 7,
  EM_LOG_IP_MODEM = 8,
  EM_LOG_ASHV3 = 9,
  EM_LOG_RETRY = 10,
  EM_LOG_TCP = 11,
  EM_LOG_TCP_TX = 12,
  EM_LOG_MLE = 13,
  EM_LOG_DISPATCH = 14,
  EM_LOG_TEMP = 15,
  EM_LOG_LOWPAN = 16,
  EM_LOG_UNIT_TEST = 17,
  EM_LOG_NBR_SEL = 18,
  EM_LOG_MDNS = 19,
  EM_LOG_RPL = 20,
  EM_LOG_RIP = 21,
  EM_LOG_WAKEUP = 22,
  EM_LOG_BOOTLOAD = 23,
  EM_LOG_POLL = 24,
  EM_LOG_TOPOLOGY = 25,
  EM_LOG_COMMISSION = 26,
  EM_LOG_SECURITY2 = 27,
  EM_LOG_TYPE_COUNT = 32 // Don't increase without fixing implementation.
};

#define EM_LOG_TYPE_NAMES \
  "join", \
  "mac", \
  "network data", \
  "security", \
  "coap", \
  "exi", \
  "scan", \
  "drop", \
  "ip_modem", \
  "ashv3", \
  "retry", \
  "tcp", \
  "tcp tx", \
  "mle", \
  "dispatch", \
  "temp", \
  "lowpan", \
  "unit test", \
  "nbr sel", \
  "mdns", \
  "rpl", \
  "rip", \
  "wakeup", \
  "bootload", \
  "poll", \
  "topology", \
  "commission", \
  "security2", \

#ifndef EM_LOG_JOIN_ENABLED
  #define EM_LOG_JOIN_ENABLED false
#endif
#ifndef EM_LOG_MAC_ENABLED
  #define EM_LOG_MAC_ENABLED false
#endif
#ifndef EM_LOG_NETWORK_DATA_ENABLED
  #define EM_LOG_NETWORK_DATA_ENABLED false
#endif
#ifndef EM_LOG_SECURITY_ENABLED
  #define EM_LOG_SECURITY_ENABLED false
#endif
#ifndef EM_LOG_COAP_ENABLED
  #define EM_LOG_COAP_ENABLED false
#endif
#ifndef EM_LOG_EXI_ENABLED
  #define EM_LOG_EXI_ENABLED false
#endif
#ifndef EM_LOG_SCAN_ENABLED
  #define EM_LOG_SCAN_ENABLED false
#endif
#ifndef EM_LOG_DROP_ENABLED
  #define EM_LOG_DROP_ENABLED false
#endif
#ifndef EM_LOG_IP_MODEM_ENABLED
  #define EM_LOG_IP_MODEM_ENABLED false
#endif
#ifndef EM_LOG_ASHV3_ENABLED
  #define EM_LOG_ASHV3_ENABLED false
#endif
#ifndef EM_LOG_RETRY_ENABLED
  #define EM_LOG_RETRY_ENABLED false
#endif
#ifndef EM_LOG_TCP_ENABLED
  #define EM_LOG_TCP_ENABLED false
#endif
#ifndef EM_LOG_TCP_TX_ENABLED
  #define EM_LOG_TCP_TX_ENABLED false
#endif
#ifndef EM_LOG_MLE_ENABLED
  #define EM_LOG_MLE_ENABLED false
#endif
#ifndef EM_LOG_DISPATCH_ENABLED
  #define EM_LOG_DISPATCH_ENABLED false
#endif
#ifndef EM_LOG_TEMP_ENABLED
  #define EM_LOG_TEMP_ENABLED false
#endif
#ifndef EM_LOG_LOWPAN_ENABLED
  #define EM_LOG_LOWPAN_ENABLED false
#endif
#ifndef EM_LOG_UNIT_TEST_ENABLED
  #define EM_LOG_UNIT_TEST_ENABLED false
#endif
#ifndef EM_LOG_NBR_SEL_ENABLED
  #define EM_LOG_NBR_SEL_ENABLED false
#endif
#ifndef EM_LOG_MDNS_ENABLED
  #define EM_LOG_MDNS_ENABLED false
#endif
#ifndef EM_LOG_RPL_ENABLED
  #define EM_LOG_RPL_ENABLED false
#endif
#ifndef EM_LOG_RIP_ENABLED
  #define EM_LOG_RIP_ENABLED false
#endif
#ifndef EM_LOG_WAKEUP_ENABLED
  #define EM_LOG_WAKEUP_ENABLED false
#endif
#ifndef EM_LOG_BOOTLOAD_ENABLED
  #define EM_LOG_BOOTLOAD_ENABLED false
#endif
#ifndef EM_LOG_POLL_ENABLED
  #define EM_LOG_POLL_ENABLED false
#endif
#ifndef EM_LOG_TOPOLOGY_ENABLED
  #define EM_LOG_TOPOLOGY_ENABLED false
#endif
#ifndef EM_LOG_COMMISSION_ENABLED
  #define EM_LOG_COMMISSION_ENABLED false
#endif
#ifndef EM_LOG_SECURITY2_ENABLED
  #define EM_LOG_SECURITY2_ENABLED false
#endif

#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_JOIN_MASK (1UL << EM_LOG_JOIN)
#else
  #define EM_LOG_JOIN_MASK ((uint32_t)EM_LOG_JOIN_ENABLED << EM_LOG_JOIN)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_MAC_MASK (1UL << EM_LOG_MAC)
#else
  #define EM_LOG_MAC_MASK ((uint32_t)EM_LOG_MAC_ENABLED << EM_LOG_MAC)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_NETWORK_DATA_MASK (1UL << EM_LOG_NETWORK_DATA)
#else
  #define EM_LOG_NETWORK_DATA_MASK ((uint32_t)EM_LOG_NETWORK_DATA_ENABLED << EM_LOG_NETWORK_DATA)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_SECURITY_MASK (1UL << EM_LOG_SECURITY)
#else
  #define EM_LOG_SECURITY_MASK ((uint32_t)EM_LOG_SECURITY_ENABLED << EM_LOG_SECURITY)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_COAP_MASK (1UL << EM_LOG_COAP)
#else
  #define EM_LOG_COAP_MASK ((uint32_t)EM_LOG_COAP_ENABLED << EM_LOG_COAP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_EXI_MASK (1UL << EM_LOG_EXI)
#else
  #define EM_LOG_EXI_MASK ((uint32_t)EM_LOG_EXI_ENABLED << EM_LOG_EXI)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_SCAN_MASK (1UL << EM_LOG_SCAN)
#else
  #define EM_LOG_SCAN_MASK ((uint32_t)EM_LOG_SCAN_ENABLED << EM_LOG_SCAN)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_DROP_MASK (1UL << EM_LOG_DROP)
#else
  #define EM_LOG_DROP_MASK ((uint32_t)EM_LOG_DROP_ENABLED << EM_LOG_DROP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_IP_MODEM_MASK (1UL << EM_LOG_IP_MODEM)
#else
  #define EM_LOG_IP_MODEM_MASK ((uint32_t)EM_LOG_IP_MODEM_ENABLED << EM_LOG_IP_MODEM)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_ASHV3_MASK (1UL << EM_LOG_ASHV3)
#else
  #define EM_LOG_ASHV3_MASK ((uint32_t)EM_LOG_ASHV3_ENABLED << EM_LOG_ASHV3)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_RETRY_MASK (1UL << EM_LOG_RETRY)
#else
  #define EM_LOG_RETRY_MASK ((uint32_t)EM_LOG_RETRY_ENABLED << EM_LOG_RETRY)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_TCP_MASK (1UL << EM_LOG_TCP)
#else
  #define EM_LOG_TCP_MASK ((uint32_t)EM_LOG_TCP_ENABLED << EM_LOG_TCP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_TCP_TX_MASK (1UL << EM_LOG_TCP_TX)
#else
  #define EM_LOG_TCP_TX_MASK ((uint32_t)EM_LOG_TCP_TX_ENABLED << EM_LOG_TCP_TX)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_MLE_MASK (1UL << EM_LOG_MLE)
#else
  #define EM_LOG_MLE_MASK ((uint32_t)EM_LOG_MLE_ENABLED << EM_LOG_MLE)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_DISPATCH_MASK (1UL << EM_LOG_DISPATCH)
#else
  #define EM_LOG_DISPATCH_MASK ((uint32_t)EM_LOG_DISPATCH_ENABLED << EM_LOG_DISPATCH)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_TEMP_MASK (1UL << EM_LOG_TEMP)
#else
  #define EM_LOG_TEMP_MASK ((uint32_t)EM_LOG_TEMP_ENABLED << EM_LOG_TEMP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_LOWPAN_MASK (1UL << EM_LOG_LOWPAN)
#else
  #define EM_LOG_LOWPAN_MASK ((uint32_t)EM_LOG_LOWPAN_ENABLED << EM_LOG_LOWPAN)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_UNIT_TEST_MASK (1UL << EM_LOG_UNIT_TEST)
#else
  #define EM_LOG_UNIT_TEST_MASK ((uint32_t)EM_LOG_UNIT_TEST_ENABLED << EM_LOG_UNIT_TEST)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_NBR_SEL_MASK (1UL << EM_LOG_NBR_SEL)
#else
  #define EM_LOG_NBR_SEL_MASK ((uint32_t)EM_LOG_NBR_SEL_ENABLED << EM_LOG_NBR_SEL)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_MDNS_MASK (1UL << EM_LOG_MDNS)
#else
  #define EM_LOG_MDNS_MASK ((uint32_t)EM_LOG_MDNS_ENABLED << EM_LOG_MDNS)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_RPL_MASK (1UL << EM_LOG_RPL)
#else
  #define EM_LOG_RPL_MASK ((uint32_t)EM_LOG_RPL_ENABLED << EM_LOG_RPL)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_RIP_MASK (1UL << EM_LOG_RIP)
#else
  #define EM_LOG_RIP_MASK ((uint32_t)EM_LOG_RIP_ENABLED << EM_LOG_RIP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_WAKEUP_MASK (1UL << EM_LOG_WAKEUP)
#else
  #define EM_LOG_WAKEUP_MASK ((uint32_t)EM_LOG_WAKEUP_ENABLED << EM_LOG_WAKEUP)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_BOOTLOAD_MASK (1UL << EM_LOG_BOOTLOAD)
#else
  #define EM_LOG_BOOTLOAD_MASK ((uint32_t)EM_LOG_BOOTLOAD_ENABLED << EM_LOG_BOOTLOAD)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_POLL_MASK (1UL << EM_LOG_POLL)
#else
  #define EM_LOG_POLL_MASK ((uint32_t)EM_LOG_POLL_ENABLED << EM_LOG_POLL)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_TOPOLOGY_MASK (1UL << EM_LOG_TOPOLOGY)
#else
  #define EM_LOG_TOPOLOGY_MASK ((uint32_t)EM_LOG_TOPOLOGY_ENABLED << EM_LOG_TOPOLOGY)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_COMMISSION_MASK (1UL << EM_LOG_COMMISSION)
#else
  #define EM_LOG_COMMISSION_MASK ((uint32_t)EM_LOG_COMMISSION_ENABLED << EM_LOG_COMMISSION)
#endif
#if defined(EMBER_TEST) || defined(UNIX_HOST)
  #define EM_LOG_SECURITY2_MASK (1UL << EM_LOG_SECURITY2)
#else
  #define EM_LOG_SECURITY2_MASK ((uint32_t)EM_LOG_SECURITY2_ENABLED << EM_LOG_SECURITY2)
#endif

#define EM_LOG_ENABLED_MASK (0UL \
  | EM_LOG_JOIN_MASK \
  | EM_LOG_MAC_MASK \
  | EM_LOG_NETWORK_DATA_MASK \
  | EM_LOG_SECURITY_MASK \
  | EM_LOG_COAP_MASK \
  | EM_LOG_EXI_MASK \
  | EM_LOG_SCAN_MASK \
  | EM_LOG_DROP_MASK \
  | EM_LOG_IP_MODEM_MASK \
  | EM_LOG_ASHV3_MASK \
  | EM_LOG_RETRY_MASK \
  | EM_LOG_TCP_MASK \
  | EM_LOG_TCP_TX_MASK \
  | EM_LOG_MLE_MASK \
  | EM_LOG_DISPATCH_MASK \
  | EM_LOG_TEMP_MASK \
  | EM_LOG_LOWPAN_MASK \
  | EM_LOG_UNIT_TEST_MASK \
  | EM_LOG_NBR_SEL_MASK \
  | EM_LOG_MDNS_MASK \
  | EM_LOG_RPL_MASK \
  | EM_LOG_RIP_MASK \
  | EM_LOG_WAKEUP_MASK \
  | EM_LOG_BOOTLOAD_MASK \
  | EM_LOG_POLL_MASK \
  | EM_LOG_TOPOLOGY_MASK \
  | EM_LOG_COMMISSION_MASK \
  | EM_LOG_SECURITY2_MASK \
)

