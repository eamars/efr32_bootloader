name=Micrium RTOS
category=Utility

# Any string is allowable here.  Generally though it is Production Ready, Test Tool, Extension Needed
qualityString=Production Ready
# This is one of the following:  productionReady, testTool, extensionNeeded
quality=production

description=TODO

providedApis=main

requiredApis=idle-sleep

callbacks=callbacks.info

implementedCallbacks=emberAfPluginIdleSleepRtosCallback,emberRtosIdleHandler,emberRtosStackWakeupIsrHandler

sourceFiles=

# Main
micrium-rtos-main.c

# OS application hooks: these could be generated in the future.
os_app_hooks.c

# Micrium generic Silicon Labs BSP files.
$MICRIUM/MicriumOS/bsp/siliconlabs/generic/source/bsp_cpu.c
$MICRIUM/MicriumOS/bsp/siliconlabs/generic/source/bsp_os.c

# Micrium RTOS common files.
$MICRIUM/MicriumOS/rtos/common/source/rtos/rtos_err_str.c

# Micrium RTOS common KAL files.
$MICRIUM/MicriumOS/rtos/common/source/kal/kal_os3.c

# Micrium CPU core files (common to all platforms and compilers)
$MICRIUM/MicriumOS/rtos/cpu/source/cpu_core.c

# Micrium RTOS Kernel files (common to all platforms and compilers)
$MICRIUM/MicriumOS/rtos/kernel/source/os_cfg_app.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_core.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_dbg.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_flag.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_mem.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_mon.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_msg.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_mutex.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_prio.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_q.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_sem.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_stat.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_task.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_tick.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_time.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_tmr.c
$MICRIUM/MicriumOS/rtos/kernel/source/os_var.c

# Micrium RTOS Lib files (common to all platforms and compilers)
$MICRIUM/MicriumOS/rtos/common/source/lib/lib_ascii.c
$MICRIUM/MicriumOS/rtos/common/source/lib/lib_math.c
$MICRIUM/MicriumOS/rtos/common/source/lib/lib_mem.c
$MICRIUM/MicriumOS/rtos/common/source/lib/lib_str.c

# M4 specific CPU files (IAR)
# TODO: these should be (efr32+iar) but it doesn't work.
$MICRIUM/MicriumOS/rtos/cpu/source/ports/armv7-m/iar/cpu_c.c             (efr32)
$MICRIUM/MicriumOS/rtos/cpu/source/ports/armv7-m/iar/cpu_a.asm           (efr32)

# ARMv7-M specific CPU files (IAR)
# TODO: these should be (efr32+iar) but it doesn't work.
$MICRIUM/MicriumOS/rtos/kernel/source/ports/armv7-m/iar/os_cpu_c.c       (efr32)
$MICRIUM/MicriumOS/rtos/kernel/source/ports/armv7-m/iar/os_cpu_a.asm     (efr32)

setup(additionalFiles) {
  # Micrium config headers
  PATH(ABSOLUTE):$FRAMEWORK/plugin-soc/micrium-rtos/config

  PATH(ABSOLUTE):$MICRIUM/MicriumOS/
  PATH(ABSOLUTE):$MICRIUM//MicriumOS/rtos/kernel/include/
}

# TODO: add files for other compilers and platforms.

# Not included by default
includedByDefault=false

# List of required plugins
requiredPlugins=

# List of callbacks implemented by this plugin
implementedCallbacks=

options=roundRobin,roundRobinPeriodMs,zigbeeStackSize,appTask1,appTask1StackSize,appTask1Priority,appTask2,appTask2StackSize,appTask2Priority,appTask3,appTask3StackSize,appTask3Priority

roundRobin.name=Round robin task switch
roundRobin.description=If this option is enabled, the OS will switch between active tasks with the same priority in a round robin fashion
roundRobin.type=BOOLEAN
roundRobin.default=true

roundRobinPeriodMs.name=Round robin period (ms)
roundRobinPeriodMs.description=The time period in millisecond for each round robin task switch
roundRobinPeriodMs.type=NUMBER:100,5000
roundRobinPeriodMs.default=1000
roundRobinPeriodMs.dependsOn=roundRobin

zigbeeStackSize.name=ZigBee stack size
zigbeeStackSize.description=The size in bytes of the ZigBee task memory stack
zigbeeStackSize.type=NUMBER:250,5000
zigbeeStackSize.default=1000

appTask1.name=Application Task (1)
appTask1.description=Enable/disable the Application (1) Task
appTask1.type=BOOLEAN
appTask1.default=false

appTask1StackSize.name=App. Task (1) stack size
appTask1StackSize.description=The size in bytes of the Application (1) Task task memory stack
appTask1StackSize.type=NUMBER:64,5000
appTask1StackSize.default=200
appTask1StackSize.dependsOn=appTask1

appTask1Priority.name=App. Task (1) priority
appTask1Priority.description=The priority of the Application (1) Task
appTask1Priority.type=NUMBER:4,10
appTask1Priority.default=5
appTask1Priority.dependsOn=appTask1

appTask2.name=Application Task (2)
appTask2.description=Enable/disable the Application (2) Task
appTask2.type=BOOLEAN
appTask2.default=false

appTask2StackSize.name=App. Task (2) stack size
appTask2StackSize.description=The size in bytes of the Application (2) Task task memory stack
appTask2StackSize.type=NUMBER:64,5000
appTask2StackSize.default=200
appTask2StackSize.dependsOn=appTask2

appTask2Priority.name=App. Task (2) priority
appTask2Priority.description=The priority of the Application (2) Task
appTask2Priority.type=NUMBER:4,10
appTask2Priority.default=5
appTask2Priority.dependsOn=appTask2

appTask3.name=Application Task (3)
appTask3.description=Enable/disable the Application (3) Task
appTask3.type=BOOLEAN
appTask3.default=false

appTask3StackSize.name=App. Task (3) stack size
appTask3StackSize.description=The size in bytes of the Application (3) Task task memory stack
appTask3StackSize.type=NUMBER:64,5000
appTask3StackSize.default=200
appTask3StackSize.dependsOn=appTask3

appTask3Priority.name=App. Task (3) priority
appTask3Priority.description=The priority of the Application (3) Task
appTask3Priority.type=NUMBER:4,10
appTask3Priority.default=5
appTask3Priority.dependsOn=appTask3