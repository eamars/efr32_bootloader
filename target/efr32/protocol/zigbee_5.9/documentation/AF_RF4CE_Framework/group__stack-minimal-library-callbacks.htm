<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Application Framework API Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Application Framework API Reference
   &#160;<span id="projectnumber">Ember ZigBee RF4CE Application Framework</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__stack-minimal-library-callbacks.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Stack Minimal Library Callbacks</div>  </div>
<div class="ingroups"><a class="el" href="group__callback.htm">Ember RF4CE Application Framework Callbacks</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gacccabdbc4c84f6a3997dd060f6132dfa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#gacccabdbc4c84f6a3997dd060f6132dfa">emberCounterHandler</a> (EmberCounterType type, uint8_t data)</td></tr>
<tr class="separator:gacccabdbc4c84f6a3997dd060f6132dfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d80fd575e35ae22a6ec6e26f9b4ba07"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#ga2d80fd575e35ae22a6ec6e26f9b4ba07">emberRtosIdleHandler</a> (uint32_t *idleTimeMs)</td></tr>
<tr class="separator:ga2d80fd575e35ae22a6ec6e26f9b4ba07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga739cc327ee8ebaeb0585451085b72eaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#ga739cc327ee8ebaeb0585451085b72eaf">emberRtosStackWakeupIsrHandler</a> (void)</td></tr>
<tr class="separator:ga739cc327ee8ebaeb0585451085b72eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#gaac4a45063264fe1b8de41b02f6c3570f">emberStackStatusHandler</a> (EmberStatus status)</td></tr>
<tr class="separator:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga285706805ac0e9be1c8e0ebc238a7e7b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#ga285706805ac0e9be1c8e0ebc238a7e7b">emberEnergyScanResultHandler</a> (uint8_t channel, int8_t maxRssiValue)</td></tr>
<tr class="separator:ga285706805ac0e9be1c8e0ebc238a7e7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81602c711b132feefd4332b03bfe6924"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack-minimal-library-callbacks.htm#ga81602c711b132feefd4332b03bfe6924">emberRadioNeedsCalibratingHandler</a> (void)</td></tr>
<tr class="separator:ga81602c711b132feefd4332b03bfe6924"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>These callbacks are contributed by the Stack Minimal Library plugin. </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gacccabdbc4c84f6a3997dd060f6132dfa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCounterHandler </td>
          <td>(</td>
          <td class="paramtype">EmberCounterType&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked to inform the application of the occurrence of an event defined by ::EmberCounterType, for example, transmissions and receptions at different layers of the stack. </p>
<p>The application must define ::EMBER_APPLICATION_HAS_COUNTER_HANDLER in its CONFIGURATION_HEADER to use this. This function may be called in ISR context, so processing should be kept to a minimum.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of the event. </td></tr>
    <tr><td class="paramname">data</td><td>For transmission events, the number of retries used. For other events, this parameter is unused and is set to zero. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03319">3319</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
<a class="anchor" id="ga2d80fd575e35ae22a6ec6e26f9b4ba07"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberRtosIdleHandler </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>idleTimeMs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback to allow the application to manage idling the MCU. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idleTimeMs</td><td>The time in millisecond the stack is allowed to idle.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the application is managing idling the MCU, false otherise. If this function returns false, the stack will manage idling the MCU. </dd></dl>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03330">3330</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
<a class="anchor" id="ga739cc327ee8ebaeb0585451085b72eaf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberRtosStackWakeupIsrHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback to request the application to wake up the stack task. </p>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03337">3337</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
<a class="anchor" id="gaac4a45063264fe1b8de41b02f6c3570f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackStatusHandler </td>
          <td>(</td>
          <td class="paramtype">EmberStatus&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked when the status of the stack changes. If the status parameter equals ::EMBER_NETWORK_UP, then the ::emberGetNetworkParameters() function can be called to obtain the new network parameters. If any of the parameters are being stored in nonvolatile memory by the application, the stored values should be updated. </p>
<p>The application is free to begin messaging once it receives the ::EMBER_NETWORK_UP status. However, routes discovered immediately after the stack comes up may be suboptimal. This is because the routes are based on the neighbor table's information about two-way links with neighboring nodes, which is obtained from periodic ZigBee Link Status messages. It can take two or three link status exchange periods (of 16 seconds each) before the neighbor table has a good estimate of link quality to neighboring nodes. Therefore, the application may improve the quality of initially discovered routes by waiting after startup to give the neighbor table time to be populated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">status</td><td>Stack status. One of the following:<ul>
<li>::EMBER_NETWORK_UP</li>
<li>::EMBER_NETWORK_DOWN</li>
<li>::EMBER_JOIN_FAILED</li>
<li>::EMBER_MOVE_FAILED</li>
<li>::EMBER_CANNOT_JOIN_AS_ROUTER</li>
<li>::EMBER_NODE_ID_CHANGED</li>
<li>::EMBER_PAN_ID_CHANGED</li>
<li>::EMBER_CHANNEL_CHANGED</li>
<li>::EMBER_NO_BEACONS</li>
<li>::EMBER_RECEIVED_KEY_IN_THE_CLEAR</li>
<li>::EMBER_NO_NETWORK_KEY_RECEIVED</li>
<li>::EMBER_NO_LINK_KEY_RECEIVED</li>
<li>::EMBER_PRECONFIGURED_KEY_REQUIRED </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03375">3375</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
<a class="anchor" id="ga285706805ac0e9be1c8e0ebc238a7e7b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberEnergyScanResultHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>channel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>maxRssiValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports the maximum RSSI value measured on the channel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">channel</td><td>The 802.15.4 channel number on which the RSSI value was measured.</td></tr>
    <tr><td class="paramname">maxRssiValue</td><td>The maximum RSSI value measured (in units of dBm). </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03387">3387</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
<a class="anchor" id="ga81602c711b132feefd4332b03bfe6924"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberRadioNeedsCalibratingHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The radio calibration callback function. </p>
<p>The Voltage Controlled Oscillator (VCO) can drift with temperature changes. During every call to ::emberTick(), the stack will check to see if the VCO has drifted. If the VCO has drifted, the stack will call <a class="el" href="group__stack-minimal-library-callbacks.htm#ga81602c711b132feefd4332b03bfe6924" title="The radio calibration callback function.">emberRadioNeedsCalibratingHandler()</a> to inform the application that it should perform calibration of the current channel as soon as possible. Calibration can take up to 150ms. The default callback function implementation provided here performs calibration immediately. If the application wishes, it can define its own callback by defining ::EMBER_APPLICATION_HAS_CUSTOM_RADIO_CALIBRATION_CALLBACK in its CONFIGURATION_HEADER. It can then failsafe any critical processes or peripherals before calling ::emberCalibrateCurrentChannel(). The application must call ::emberCalibrateCurrentChannel() in response to this callback to maintain expected radio performance. </p>

<p>Definition at line <a class="el" href="callback_8doc_source.htm#l03407">3407</a> of file <a class="el" href="callback_8doc_source.htm">callback.doc</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Application Framework API Reference. Ember ZigBee RF4CE Application Framework.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
