<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cbke-crypto-engine_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">cbke-crypto-engine.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a href="cbke-crypto-engine_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3efb8a9cb70bdb0d3254bd40859416b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga3efb8a9cb70bdb0d3254bd40859416b4">emberGetCertificate</a> (<a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *result)</td></tr>
<tr class="separator:ga3efb8a9cb70bdb0d3254bd40859416b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8952f016f5e33511f30aeef69424d51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gab8952f016f5e33511f30aeef69424d51">emberGenerateCbkeKeys</a> (void)</td></tr>
<tr class="separator:gab8952f016f5e33511f30aeef69424d51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87a8f695a93abdc6093e41f5073ebb68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga87a8f695a93abdc6093e41f5073ebb68">emberCalculateSmacs</a> (bool amInitiator, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *partnerCert, <a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *partnerEphemeralPublicKey)</td></tr>
<tr class="separator:ga87a8f695a93abdc6093e41f5073ebb68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab056dab9f8fb27f0ffaaa8329435e64d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gab056dab9f8fb27f0ffaaa8329435e64d">emberClearTemporaryDataMaybeStoreLinkKey</a> (bool storeLinkKey)</td></tr>
<tr class="separator:gab056dab9f8fb27f0ffaaa8329435e64d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3948efc511fa4fdce242354f04d2a334"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga3948efc511fa4fdce242354f04d2a334">emberDsaSign</a> (<a class="el" href="group__ember__types.htm#gad8cef59e716103f3996ce6cb7e10b017">EmberMessageBuffer</a> messageToSign)</td></tr>
<tr class="separator:ga3948efc511fa4fdce242354f04d2a334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga269e2ce38517a43b32f9f4794636a1fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga269e2ce38517a43b32f9f4794636a1fe">emberGenerateCbkeKeysHandler</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status, <a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *ephemeralPublicKey)</td></tr>
<tr class="separator:ga269e2ce38517a43b32f9f4794636a1fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga186c463a1da518f9b61a80a0417fac1a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga186c463a1da518f9b61a80a0417fac1a">emberCalculateSmacsHandler</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *initiatorSmac, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *responderSmac)</td></tr>
<tr class="separator:ga186c463a1da518f9b61a80a0417fac1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac60166a5cb371cce8b9ff69111198073"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gac60166a5cb371cce8b9ff69111198073">emberDsaSignHandler</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status, <a class="el" href="group__ember__types.htm#gad8cef59e716103f3996ce6cb7e10b017">EmberMessageBuffer</a> signedMessage)</td></tr>
<tr class="separator:gac60166a5cb371cce8b9ff69111198073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fc274a1307fa7440b1b6cd7e1f64932"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga5fc274a1307fa7440b1b6cd7e1f64932">emberSetPreinstalledCbkeData</a> (<a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *caPublic, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *myCert, <a class="el" href="structEmberPrivateKeyData.htm">EmberPrivateKeyData</a> *myKey)</td></tr>
<tr class="separator:ga5fc274a1307fa7440b1b6cd7e1f64932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61d79a1651a9c863f72f8f72d9f0126a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga61d79a1651a9c863f72f8f72d9f0126a">emberGetStackCertificateEui64</a> (<a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> certEui64)</td></tr>
<tr class="separator:ga61d79a1651a9c863f72f8f72d9f0126a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b69802e7375290ee47918eb80b0572a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga4b69802e7375290ee47918eb80b0572a">emberDsaVerify</a> (<a class="el" href="structEmberMessageDigest.htm">EmberMessageDigest</a> *digest, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *signerCertificate, <a class="el" href="structEmberSignatureData.htm">EmberSignatureData</a> *receivedSig)</td></tr>
<tr class="separator:ga4b69802e7375290ee47918eb80b0572a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga758cb85bf29bcd41a7dd79007b2a2b35"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga758cb85bf29bcd41a7dd79007b2a2b35">emberDsaVerifyHandler</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status)</td></tr>
<tr class="separator:ga758cb85bf29bcd41a7dd79007b2a2b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e25a2fbf7df3337e19671783d8bc768"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a7e25a2fbf7df3337e19671783d8bc768">emberGetCertificate283k1</a> (<a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *result)</td></tr>
<tr class="separator:a7e25a2fbf7df3337e19671783d8bc768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7bd8beaec3050955180051d5bad8335"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#aa7bd8beaec3050955180051d5bad8335">emberGenerateCbkeKeys283k1</a> (void)</td></tr>
<tr class="separator:aa7bd8beaec3050955180051d5bad8335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78243f3b98573851fbfd69bcf192f998"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a78243f3b98573851fbfd69bcf192f998">emberCalculateSmacs283k1</a> (bool amInitiator, <a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *partnerCert, <a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *partnerEphemeralPublicKey)</td></tr>
<tr class="separator:a78243f3b98573851fbfd69bcf192f998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d664c658e56a614c72e4cae3411380c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a6d664c658e56a614c72e4cae3411380c">emberClearTemporaryDataMaybeStoreLinkKey283k1</a> (bool storeLinkKey)</td></tr>
<tr class="separator:a6d664c658e56a614c72e4cae3411380c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2d372947c70ffc60f24d1a23558cbda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#aa2d372947c70ffc60f24d1a23558cbda">emberGenerateCbkeKeysHandler283k1</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status, <a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *ephemeralPublicKey)</td></tr>
<tr class="separator:aa2d372947c70ffc60f24d1a23558cbda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99e1e3e360b9fb6344d911f17b19e51a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a99e1e3e360b9fb6344d911f17b19e51a">emberCalculateSmacsHandler283k1</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *initiatorSmac, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *responderSmac)</td></tr>
<tr class="separator:a99e1e3e360b9fb6344d911f17b19e51a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e3d7ee1a59b571a46275080f3fc8992"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a0e3d7ee1a59b571a46275080f3fc8992">emberSetPreinstalledCbkeData283k1</a> (<a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *caPublic, <a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *myCert, <a class="el" href="structEmberPrivateKey283k1Data.htm">EmberPrivateKey283k1Data</a> *myKey)</td></tr>
<tr class="separator:a0e3d7ee1a59b571a46275080f3fc8992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a4766c11970a5c3cfe1cb06d03e586b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cbke-crypto-engine_8h.htm#a0a4766c11970a5c3cfe1cb06d03e586b">emberDsaVerify283k1</a> (<a class="el" href="structEmberMessageDigest.htm">EmberMessageDigest</a> *digest, <a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *signerCertificate, <a class="el" href="structEmberSignature283k1Data.htm">EmberSignature283k1Data</a> *receivedSig)</td></tr>
<tr class="separator:a0a4766c11970a5c3cfe1cb06d03e586b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>EmberZNet Smart Energy security API. See <a class="el" href="group__smart__energy__security.htm">Smart Energy Security</a> for documention. </p>

<p>Definition in file <a class="el" href="cbke-crypto-engine_8h_source.htm">cbke-crypto-engine.h</a>.</p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a7e25a2fbf7df3337e19671783d8bc768"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetCertificate283k1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the implicit certificate stored in the MFG tokens of the device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">result</td><td>A pointer to an <a class="el" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a> structure where the retrieved certificate will be stored.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if the certificate was successfully retrieved. <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> if the token contains uninitialized data. </dd></dl>

</div>
</div>
<a class="anchor" id="aa7bd8beaec3050955180051d5bad8335"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberGenerateCbkeKeys283k1 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function begins the process of generating an ephemeral public/private ECC key pair. </p>
<p>If no other ECC operation is going on, it will immediately return with <a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results will be returned ...">EMBER_OPERATION_IN_PROGRESS</a>. It will delay a period of time to let APS retries take place, but then it will shutdown the radio and consume the CPU processing until the key generation is complete. This may take up to 1 second.</p>
<p>The generated results of the key generation is returned via <a class="el" href="cbke-crypto-engine_8h.htm#aa2d372947c70ffc60f24d1a23558cbda">emberGenerateCbkeKeysHandler283k1()</a>.</p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results will be returned ...">EMBER_OPERATION_IN_PROGRESS</a> if the stack has queued up the operation for execution. </dd></dl>

</div>
</div>
<a class="anchor" id="a78243f3b98573851fbfd69bcf192f998"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberCalculateSmacs283k1 </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>amInitiator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *&#160;</td>
          <td class="paramname"><em>partnerCert</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *&#160;</td>
          <td class="paramname"><em>partnerEphemeralPublicKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function will begin the process of generating the shared secret, the new link key, and the Secured Message Authentication Code (SMAC). </p>
<p>If no other ECC operation is going on, it will immediately return with <a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results will be returned ...">EMBER_OPERATION_IN_PROGRESS</a>. It will delay a period of time to let APS retries take place, but then it will shutdown the radio and consume the CPU processing until SMACs calculations are complete. This may take up to 3.5 seconds.</p>
<p>The calculated SMACS are returned via <a class="el" href="group__smart__energy__security.htm#ga186c463a1da518f9b61a80a0417fac1a">emberCalculateSmacsHandler()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">amInitiator</td><td>This bool indicates whether or not the device is the one that initiated the CBKE with the remote device, or whether it was the responder to the exchange. </td></tr>
    <tr><td class="paramname">partnerCert</td><td>A pointer to an <a class="el" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a> structure that contains the CBKE partner's implicit certificate. </td></tr>
    <tr><td class="paramname">partnerEphemeralPublicKey</td><td>A pointer to an <a class="el" href="structEmberPublicKey283k1Data.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKey283k1Data</a> structure that contains the CBKE partner's ephemeral public key.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results will be returned ...">EMBER_OPERATION_IN_PROGRESS</a> if the stack has queued up the operation for execution. </dd></dl>

</div>
</div>
<a class="anchor" id="a6d664c658e56a614c72e4cae3411380c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberClearTemporaryDataMaybeStoreLinkKey283k1 </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>storeLinkKey</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function should be called when all CBKE 283k1 operations are done. Any temporary data created during calls to <a class="el" href="cbke-crypto-engine_8h.htm#aa7bd8beaec3050955180051d5bad8335" title="This function begins the process of generating an ephemeral public/private ECC key pair...">emberGenerateCbkeKeys283k1()</a> or <a class="el" href="cbke-crypto-engine_8h.htm#a78243f3b98573851fbfd69bcf192f998" title="This function will begin the process of generating the shared secret, the new link key...">emberCalculateSmacs283k1()</a> is wiped out. If the local device has validated that the partner device has generated the same SMACS as itself, it should set 'storeLinkKey' to true. Otherwise it should pass in false. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">storeLinkKey</td><td>This tells the stack whether to store the newly generated link key, or discard it.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If storeLinkkey is false, this function returns <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> always. If storeLinkKey is true, then this function returns the results of whether or not the link key was stored. <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> is returned when key was stored successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="aa2d372947c70ffc60f24d1a23558cbda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberGenerateCbkeKeysHandler283k1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *&#160;</td>
          <td class="paramname"><em>ephemeralPublicKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a99e1e3e360b9fb6344d911f17b19e51a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCalculateSmacsHandler283k1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *&#160;</td>
          <td class="paramname"><em>initiatorSmac</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *&#160;</td>
          <td class="paramname"><em>responderSmac</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0e3d7ee1a59b571a46275080f3fc8992"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetPreinstalledCbkeData283k1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberPublicKey283k1Data.htm">EmberPublicKey283k1Data</a> *&#160;</td>
          <td class="paramname"><em>caPublic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *&#160;</td>
          <td class="paramname"><em>myCert</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPrivateKey283k1Data.htm">EmberPrivateKey283k1Data</a> *&#160;</td>
          <td class="paramname"><em>myKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0a4766c11970a5c3cfe1cb06d03e586b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberDsaVerify283k1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberMessageDigest.htm">EmberMessageDigest</a> *&#160;</td>
          <td class="paramname"><em>digest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificate283k1Data.htm">EmberCertificate283k1Data</a> *&#160;</td>
          <td class="paramname"><em>signerCertificate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSignature283k1Data.htm">EmberSignature283k1Data</a> *&#160;</td>
          <td class="paramname"><em>receivedSig</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
