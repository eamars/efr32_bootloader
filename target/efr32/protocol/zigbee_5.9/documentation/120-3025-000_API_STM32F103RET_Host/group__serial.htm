<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__serial.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">Serial UART Communication</div>  </div>
<div class="ingroups"><a class="el" href="group__peripherals.htm">Sample APIs for Peripheral Access</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__stm32f103ret__uart"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__uart.htm">STM32F103RET Specific UART</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga79e9d2305515318a1ae0ab5aaffd6fcb"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a> { <br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>
<br/>
 }</td></tr>
<tr class="separator:ga79e9d2305515318a1ae0ab5aaffd6fcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ef5202380ba5c66c597f205203ca233"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga2ef5202380ba5c66c597f205203ca233">NameOfType</a> { <br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>, 
<br/>
&#160;&#160;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>
<br/>
 }</td></tr>
<tr class="separator:ga2ef5202380ba5c66c597f205203ca233"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Serial HAL APIs</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp778efa1e462aba92b3616d2c1883aca1"></a> These functions must be implemented by the HAL in order for the serial code to operate. Only the higher-level serial code uses these functions, so they should not be called directly. The HAL should also implement the appropriate interrupt handlers to drain the TX queues and fill the RX FIFO queue, as necessary. </p>
</td></tr>
<tr class="memitem:gaab61a51a0303d086e456010e087d9e3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#gaab61a51a0303d086e456010e087d9e3e">halInternalUartInit</a> (uint8_t port, <a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a> rate, SerialParity parity, uint8_t stopBits)</td></tr>
<tr class="separator:gaab61a51a0303d086e456010e087d9e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38893e14779267d57b23c37c90c44221"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga38893e14779267d57b23c37c90c44221">halInternalPrintfWriteAvailable</a> (void)</td></tr>
<tr class="separator:ga38893e14779267d57b23c37c90c44221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4777019cdc69f43b8fa5e868fe4d099e"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga4777019cdc69f43b8fa5e868fe4d099e">halInternalPrintfReadAvailable</a> (void)</td></tr>
<tr class="separator:ga4777019cdc69f43b8fa5e868fe4d099e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48ce98de27cc6c72c98aa0e3f0179593"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga48ce98de27cc6c72c98aa0e3f0179593">halInternalForcePrintf</a> (bool onOff)</td></tr>
<tr class="separator:ga48ce98de27cc6c72c98aa0e3f0179593"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This API contains the common HAL interfaces that hosts must implement for the high-level serial code. </p>
<p>This header describes the interface between the high-level serial APIs in serial/serial.h and the low level UART implementation.</p>
<p>Some functions in this file return an <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value. See <a class="el" href="error-def_8h.htm" title="Return-code definitions for EmberZNet stack API functions.">error-def.h</a> for definitions of all <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> return values.</p>
<p>See <a class="el" href="serial_8h.htm">serial.h</a> for source code. </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="ga79e9d2305515318a1ae0ab5aaffd6fcb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assign numerical values for variables that hold Baud Rate parameters. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a>DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="serial_8h_source.htm#l00033">33</a> of file <a class="el" href="serial_8h_source.htm">serial.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2ef5202380ba5c66c597f205203ca233"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__serial.htm#ga2ef5202380ba5c66c597f205203ca233">NameOfType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assign numerical values for the types of parity. Use for variables that hold Parity parameters. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a>DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a>DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a>DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="serial_8h_source.htm#l00069">69</a> of file <a class="el" href="serial_8h_source.htm">serial.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaab61a51a0303d086e456010e087d9e3e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> halInternalUartInit </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a>&#160;</td>
          <td class="paramname"><em>rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SerialParity&#160;</td>
          <td class="paramname"><em>parity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>stopBits</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the UART to the given settings (same parameters as ::emberSerialInit() ). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>Serial port number (0 or 1).</td></tr>
    <tr><td class="paramname">rate</td><td>Baud rate (see SerialBaudRate).</td></tr>
    <tr><td class="paramname">parity</td><td>Parity value (see SerialParity).</td></tr>
    <tr><td class="paramname">stopBits</td><td>Number of stop bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An error code if initialization failed (such as invalid baud rate), otherise EMBER_SUCCESS. </dd></dl>

</div>
</div>
<a class="anchor" id="ga38893e14779267d57b23c37c90c44221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t halInternalPrintfWriteAvailable </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number bytes available in the transmit queue when using the EMBER_SERIAL_USE_STDIO variant of the Ember serial library. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes available in the transmit queue. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4777019cdc69f43b8fa5e868fe4d099e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t halInternalPrintfReadAvailable </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number bytes available in the receive queue when using the EMBER_SERIAL_USE_STDIO variant of the Ember serial library. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes available in the receive queue. </dd></dl>

</div>
</div>
<a class="anchor" id="ga48ce98de27cc6c72c98aa0e3f0179593"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalForcePrintf </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>onOff</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function enables/disables EMBER_SERIAL_USE_STDIO printing behavior that is compatible with emberSerialGuaranteedPrintf() and a replacement for halInternalForceWriteUartData(). (blocking, bypass queue, and polling) </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
