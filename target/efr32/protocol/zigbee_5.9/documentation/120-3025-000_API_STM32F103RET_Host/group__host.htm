<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__host.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Microcontroller General Functionality</div>  </div>
<div class="ingroups"><a class="el" href="group__hal.htm">Hardware Abstraction Layer (HAL) API Reference</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__stm32f103ret__host"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__host.htm">STM32F103RET General Functionality</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__stm32f10x__conf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f10x__conf.htm">ST Microcontroller Standard Peripherals Library Inclusions and Definitions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gabb42f7171eba6959a54c6e6d9aeca64e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gabb42f7171eba6959a54c6e6d9aeca64e">MICRO_DISABLE_WATCH_DOG_KEY</a></td></tr>
<tr class="separator:gabb42f7171eba6959a54c6e6d9aeca64e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5dd8297b139a34eb8cc36c68812e46f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gae5dd8297b139a34eb8cc36c68812e46f">MILLISECOND_TICKS_PER_SECOND</a></td></tr>
<tr class="separator:gae5dd8297b139a34eb8cc36c68812e46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca328aa954918afb0299682670477a7b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gaca328aa954918afb0299682670477a7b">MILLISECOND_TICKS_PER_DECISECOND</a></td></tr>
<tr class="separator:gaca328aa954918afb0299682670477a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c6a34653a1277566e0e4ff328dcc3f3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga8c6a34653a1277566e0e4ff328dcc3f3">MILLISECOND_TICKS_PER_QUARTERSECOND</a></td></tr>
<tr class="separator:ga8c6a34653a1277566e0e4ff328dcc3f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab31d7de0f7f17e8e3b8c02ea725dea21"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gab31d7de0f7f17e8e3b8c02ea725dea21">MILLISECOND_TICKS_PER_MINUTE</a></td></tr>
<tr class="separator:gab31d7de0f7f17e8e3b8c02ea725dea21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb2cecba802b2baa133f3ee609dc8b56"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gafb2cecba802b2baa133f3ee609dc8b56">MILLISECOND_TICKS_PER_HOUR</a></td></tr>
<tr class="separator:gafb2cecba802b2baa133f3ee609dc8b56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffd84c88dd3b53b78e8a1b5c8442b91c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gaffd84c88dd3b53b78e8a1b5c8442b91c">MILLISECOND_TICKS_PER_DAY</a></td></tr>
<tr class="separator:gaffd84c88dd3b53b78e8a1b5c8442b91c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gace58749df14c14b64252eb55f40d2c32"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gace58749df14c14b64252eb55f40d2c32">SleepModes</a> { <br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a4b1e70cf7dd0396d75a5ef3bc357694a">SLEEPMODE_RUNNING</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a8dec81d54908044ef56016aee3b1b506">SLEEPMODE_IDLE</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a93af1c45a33be62df00d0ab82ef04128">SLEEPMODE_WAKETIMER</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a4c95cce8a2fe32d302ce3a42a74c58d1">SLEEPMODE_MAINTAINTIMER</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a559adb5abaebc7504743f8684ab16f28">SLEEPMODE_NOTIMER</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a8d06b6cc298a4a34eaca616b86f800d5">SLEEPMODE_RESERVED</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a0f74b29aa0a12fbc2c31db42392101d7">SLEEPMODE_POWERDOWN</a>, 
<br/>
&#160;&#160;<a class="el" href="group__host.htm#ggace58749df14c14b64252eb55f40d2c32a34e3924778494e4fd21702fb4fbed0b2">SLEEPMODE_POWERSAVE</a>
<br/>
 }</td></tr>
<tr class="separator:gace58749df14c14b64252eb55f40d2c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gafd89c1650df524d95aef39b8bc38170d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gafd89c1650df524d95aef39b8bc38170d">halInit</a> (void)</td></tr>
<tr class="separator:gafd89c1650df524d95aef39b8bc38170d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3550a689dc90ddd9d7d973bb154dd909"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga3550a689dc90ddd9d7d973bb154dd909">halReboot</a> (void)</td></tr>
<tr class="separator:ga3550a689dc90ddd9d7d973bb154dd909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga467bf8ac5d5964ca282f332f4e394654"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga467bf8ac5d5964ca282f332f4e394654">halPowerUp</a> (void)</td></tr>
<tr class="separator:ga467bf8ac5d5964ca282f332f4e394654"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae13140ae48ea28772b67717f0d28f5e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gae13140ae48ea28772b67717f0d28f5e9">halPowerDown</a> (void)</td></tr>
<tr class="separator:gae13140ae48ea28772b67717f0d28f5e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ea499662dd11955f9f3cc340e2455b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga7ea499662dd11955f9f3cc340e2455b8">halInternalEnableWatchDog</a> (void)</td></tr>
<tr class="separator:ga7ea499662dd11955f9f3cc340e2455b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga21b247f7a0bd7a5805907850e570f042"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga21b247f7a0bd7a5805907850e570f042">halInternalDisableWatchDog</a> (uint8_t magicKey)</td></tr>
<tr class="separator:ga21b247f7a0bd7a5805907850e570f042"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9786c70c0c1f05fae86b1a399d8dbd6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gab9786c70c0c1f05fae86b1a399d8dbd6">halCommonDelayMicroseconds</a> (uint16_t us)</td></tr>
<tr class="separator:gab9786c70c0c1f05fae86b1a399d8dbd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd0565c99bb9ee46edc1f85d3eabaac1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gacd0565c99bb9ee46edc1f85d3eabaac1">halCommonDelayMilliseconds</a> (uint16_t ms)</td></tr>
<tr class="separator:gacd0565c99bb9ee46edc1f85d3eabaac1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadbd32b4b0ff84671451a4a7ea8dc7a82"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gadbd32b4b0ff84671451a4a7ea8dc7a82">halGetResetInfo</a> (void)</td></tr>
<tr class="separator:gadbd32b4b0ff84671451a4a7ea8dc7a82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e5131c65da9fcf7ab185503f4137799"><td class="memItemLeft" align="right" valign="top">PGM_P&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga7e5131c65da9fcf7ab185503f4137799">halGetResetString</a> (void)</td></tr>
<tr class="separator:ga7e5131c65da9fcf7ab185503f4137799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb8c96432c502d461da567ddc15fd54c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gadb8c96432c502d461da567ddc15fd54c">halStackSeedRandom</a> (uint32_t seed)</td></tr>
<tr class="separator:gadb8c96432c502d461da567ddc15fd54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb94c6571babd7d76305a00a3f09a1f3"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#gadb94c6571babd7d76305a00a3f09a1f3">halCommonGetRandom</a> (void)</td></tr>
<tr class="separator:gadb94c6571babd7d76305a00a3f09a1f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d05736655f1a012dc969d1d912e835b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__host.htm#ga6d05736655f1a012dc969d1d912e835b">halSleep</a> (<a class="el" href="group__host.htm#gace58749df14c14b64252eb55f40d2c32">SleepModes</a> sleepMode)</td></tr>
<tr class="separator:ga6d05736655f1a012dc969d1d912e835b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>HAL functions common across all microcontroller-specific files. </p>
<dl class="section note"><dt>Note</dt><dd>The micro specific definitions, <a class="el" href="group__stm32f103ret__host.htm">STM32F103RET General Functionality</a>, is chosen by the build include path pointing at the appropriate directoy.</dd></dl>
<p>See <a class="el" href="micro-common_8h.htm">micro-common.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="gabb42f7171eba6959a54c6e6d9aeca64e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MICRO_DISABLE_WATCH_DOG_KEY</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The value that must be passed as the single parameter to <a class="el" href="group__host.htm#ga21b247f7a0bd7a5805907850e570f042" title="Disables the watchdog timer, if there is one and it can be disabled.">halInternalDisableWatchDog()</a> in order to sucessfully disable the watchdog timer. </p>

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00041">41</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gae5dd8297b139a34eb8cc36c68812e46f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_SECOND</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00183">183</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaca328aa954918afb0299682670477a7b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_DECISECOND</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00189">189</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8c6a34653a1277566e0e4ff328dcc3f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_QUARTERSECOND</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00193">193</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab31d7de0f7f17e8e3b8c02ea725dea21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_MINUTE</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00197">197</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gafb2cecba802b2baa133f3ee609dc8b56"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_HOUR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00201">201</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaffd84c88dd3b53b78e8a1b5c8442b91c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MILLISECOND_TICKS_PER_DAY</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00205">205</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gace58749df14c14b64252eb55f40d2c32"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__host.htm#gace58749df14c14b64252eb55f40d2c32">SleepModes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enumerations for the possible microcontroller sleep modes. </p>
<p>NOTE: Refer to a specific micro's implementation of <a class="el" href="group__host.htm#ga6d05736655f1a012dc969d1d912e835b" title="Puts the microcontroller to sleep in a specified mode.">halSleep()</a> to see what modes are actually supported.</p>
<ul>
<li>SLEEPMODE_RUNNING Everything is active and running. In practice this mode is not used, but it is defined for completeness of information.</li>
</ul>
<ul>
<li>SLEEPMODE_IDLE Only the CPU is idled. The rest of the chip continues runing normally. The chip will wake from any interrupt.</li>
</ul>
<ul>
<li>SLEEPMODE_WAKETIMER The sleep timer clock sources remain running. The RC is always running and the 32kHz XTAL depends on system timer config. Wakeup is possible from both GPIO and the sleep timer. System time is maintained. The sleep timer is assumed to be configured properly for wake events.</li>
</ul>
<ul>
<li>SLEEPMODE_MAINTAINTIMER The sleep timer clock sources remain running. The RC is always running and the 32kHz XTAL depends on the board header. Wakeup is possible from only GPIO. System time is maintained.</li>
</ul>
<ul>
<li>SLEEPMODE_NOTIMER The sleep timer clock sources (both RC and XTAL) are turned off. Wakeup is possible from only GPIO. System time is lost.</li>
</ul>
<ul>
<li>SLEEPMODE_RESERVED Reserved/Unused</li>
<li>SLEEPMODE_POWERDOWN Deprecated</li>
<li>SLEEPMODE_POWERSAVE Deprecated </li>
</ul>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a4b1e70cf7dd0396d75a5ef3bc357694a"></a>SLEEPMODE_RUNNING</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a8dec81d54908044ef56016aee3b1b506"></a>SLEEPMODE_IDLE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a93af1c45a33be62df00d0ab82ef04128"></a>SLEEPMODE_WAKETIMER</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a4c95cce8a2fe32d302ce3a42a74c58d1"></a>SLEEPMODE_MAINTAINTIMER</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a559adb5abaebc7504743f8684ab16f28"></a>SLEEPMODE_NOTIMER</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a8d06b6cc298a4a34eaca616b86f800d5"></a>SLEEPMODE_RESERVED</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a0f74b29aa0a12fbc2c31db42392101d7"></a>SLEEPMODE_POWERDOWN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggace58749df14c14b64252eb55f40d2c32a34e3924778494e4fd21702fb4fbed0b2"></a>SLEEPMODE_POWERSAVE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="micro-common_8h_source.htm#l00145">145</a> of file <a class="el" href="micro-common_8h_source.htm">micro-common.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gafd89c1650df524d95aef39b8bc38170d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInit </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes microcontroller-specific peripherals. </p>

</div>
</div>
<a class="anchor" id="ga3550a689dc90ddd9d7d973bb154dd909"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halReboot </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Restarts the microcontroller. </p>

</div>
</div>
<a class="anchor" id="ga467bf8ac5d5964ca282f332f4e394654"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halPowerUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Powers up microcontroller peripherals. </p>

</div>
</div>
<a class="anchor" id="gae13140ae48ea28772b67717f0d28f5e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halPowerDown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Powers down microcontroller peripherals. </p>

</div>
</div>
<a class="anchor" id="ga7ea499662dd11955f9f3cc340e2455b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalEnableWatchDog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the watchdog timer, if there is one and it is reasonable to be enabled. </p>

</div>
</div>
<a class="anchor" id="ga21b247f7a0bd7a5805907850e570f042"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalDisableWatchDog </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>magicKey</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables the watchdog timer, if there is one and it can be disabled. </p>
<dl class="section note"><dt>Note</dt><dd>To prevent the watchdog from being disabled accidentally, a magic key must be provided.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">magicKey</td><td>A value (<a class="el" href="group__host.htm#gabb42f7171eba6959a54c6e6d9aeca64e" title="The value that must be passed as the single parameter to halInternalDisableWatchDog() in order to suc...">MICRO_DISABLE_WATCH_DOG_KEY</a>) that enables the function. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab9786c70c0c1f05fae86b1a399d8dbd6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halCommonDelayMicroseconds </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>us</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Blocks the current thread of execution for the specified amount of time, in microseconds. </p>
<p>The function is implemented with either cycle-counted busy loops or a convenient timer. It is intended to create the short blocking delays such as when interfacing with hardware peripherals.</p>
<p>The accuracy of the timing provided by this function is not specified, but a best faith effort is obtain an accurate delay. The implementation may be changed, but this function should be reasonably accurate.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">us</td><td>The specified time, in microseconds. Values should be between 1 and 65535 microseconds. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacd0565c99bb9ee46edc1f85d3eabaac1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halCommonDelayMilliseconds </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>ms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Blocks the current thread of execution for the specified amount of time, in milliseconds.. </p>
<p>This function depends on <a class="el" href="group__host.htm#gab9786c70c0c1f05fae86b1a399d8dbd6" title="Blocks the current thread of execution for the specified amount of time, in microseconds.">halCommonDelayMicroseconds()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ms</td><td>The specified time, in milliseconds. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadbd32b4b0ff84671451a4a7ea8dc7a82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t halGetResetInfo </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets information about what caused the microcontroller to reset. </p>
<dl class="section return"><dt>Returns</dt><dd>A code identifying the cause of the reset. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7e5131c65da9fcf7ab185503f4137799"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PGM_P halGetResetString </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls <a class="el" href="group__host.htm#gadbd32b4b0ff84671451a4a7ea8dc7a82" title="Gets information about what caused the microcontroller to reset.">halGetResetInfo()</a> and supplies a string describing it. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to a program space string. </dd></dl>

</div>
</div>
<a class="anchor" id="gadb8c96432c502d461da567ddc15fd54c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halStackSeedRandom </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>seed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Seeds the <a class="el" href="group__host.htm#gadb94c6571babd7d76305a00a3f09a1f3" title="Generate pseudorandom numbers. Implementation is host specific.">halCommonGetRandom()</a> pseudorandom number generator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">seed</td><td>A seed for the pseudorandom number generator. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadb94c6571babd7d76305a00a3f09a1f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t halCommonGetRandom </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generate pseudorandom numbers. Implementation is host specific. </p>

</div>
</div>
<a class="anchor" id="ga6d05736655f1a012dc969d1d912e835b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halSleep </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__host.htm#gace58749df14c14b64252eb55f40d2c32">SleepModes</a>&#160;</td>
          <td class="paramname"><em>sleepMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Puts the microcontroller to sleep in a specified mode. </p>
<dl class="section note"><dt>Note</dt><dd>This routine always enables interrupts.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sleepMode</td><td>A microcontroller sleep mode </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
