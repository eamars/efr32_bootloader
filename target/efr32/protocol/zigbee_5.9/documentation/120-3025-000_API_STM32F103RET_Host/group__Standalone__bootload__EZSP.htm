<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__Standalone__bootload__EZSP.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Stand-Alone Bootloader for EZSP</div>  </div>
<div class="ingroups"><a class="el" href="group__util__bootload.htm">Bootloading</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga1f77ea6a4a58164fd5c6c7946f85c884"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga1f77ea6a4a58164fd5c6c7946f85c884">TICKS_PER_QUARTER_SECOND</a></td></tr>
<tr class="separator:ga1f77ea6a4a58164fd5c6c7946f85c884"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaac9a687131fcd22cc9d6bf88933e6062"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#gaac9a687131fcd22cc9d6bf88933e6062">hostBootloadUtilLaunchRequestHandler</a> (uint8_t lqi, int8_t rssi, uint16_t manufacturerId, uint8_t *hardwareTag, <a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> sourceEui)</td></tr>
<tr class="separator:gaac9a687131fcd22cc9d6bf88933e6062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4eff7bca55fdcd2c70ec622956b0357c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga4eff7bca55fdcd2c70ec622956b0357c">hostBootloadUtilQueryResponseHandler</a> (uint8_t lqi, int8_t rssi, bool bootloaderActive, uint16_t manufacturerId, uint8_t *hardwareTag, <a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> targetEui, uint8_t bootloaderCapabilities, uint8_t platform, uint8_t micro, uint8_t phy, uint16_t blVersion)</td></tr>
<tr class="separator:ga4eff7bca55fdcd2c70ec622956b0357c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5239eabe3a5792b5af0c1e4bf0ca1e13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga5239eabe3a5792b5af0c1e4bf0ca1e13">hostBootloadReinitHandler</a> (void)</td></tr>
<tr class="separator:ga5239eabe3a5792b5af0c1e4bf0ca1e13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41de1f57b0dd635393090bb3efba472b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga41de1f57b0dd635393090bb3efba472b">isTheSameEui64</a> (<a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> sourceEui, <a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> targetEui)</td></tr>
<tr class="separator:ga41de1f57b0dd635393090bb3efba472b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga627c5f0fb5cab3d4933e28eb5357aabb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga627c5f0fb5cab3d4933e28eb5357aabb">printLittleEndianEui64</a> (uint8_t port, <a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> eui64)</td></tr>
<tr class="separator:ga627c5f0fb5cab3d4933e28eb5357aabb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb03b15606c34904b86d180173b6ba3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#gafb03b15606c34904b86d180173b6ba3a">printBigEndianEui64</a> (uint8_t port, <a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> eui64)</td></tr>
<tr class="separator:gafb03b15606c34904b86d180173b6ba3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae14d05864786218958c7c1fc51110359"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#gae14d05864786218958c7c1fc51110359">debugPrintf</a> (uint8_t port, PGM_P formatString,...)</td></tr>
<tr class="separator:gae14d05864786218958c7c1fc51110359"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gaf2e4e0306a9273017dcf87eb34ce0506"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#gaf2e4e0306a9273017dcf87eb34ce0506">nodeBlVersion</a></td></tr>
<tr class="separator:gaf2e4e0306a9273017dcf87eb34ce0506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1ad67b8f2b6f3b86948e9bac00de133"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#gaf1ad67b8f2b6f3b86948e9bac00de133">nodePlat</a></td></tr>
<tr class="separator:gaf1ad67b8f2b6f3b86948e9bac00de133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b9437fd4fd80a2befd4f9a825692a85"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga0b9437fd4fd80a2befd4f9a825692a85">nodeMicro</a></td></tr>
<tr class="separator:ga0b9437fd4fd80a2befd4f9a825692a85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13cb347c1cbbda387aa7cde2eecd25d0"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga13cb347c1cbbda387aa7cde2eecd25d0">nodePhy</a></td></tr>
<tr class="separator:ga13cb347c1cbbda387aa7cde2eecd25d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8af92775d78500a8a811193f55838f46"><td class="memItemLeft" align="right" valign="top">EzspStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga8af92775d78500a8a811193f55838f46">bootloadEzspLastError</a></td></tr>
<tr class="separator:ga8af92775d78500a8a811193f55838f46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84f28d5ce3160eac013882ed0bc56a66"><td class="memItemLeft" align="right" valign="top">EzspStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Standalone__bootload__EZSP.htm#ga84f28d5ce3160eac013882ed0bc56a66">ignoreNextEzspError</a></td></tr>
<tr class="separator:ga84f28d5ce3160eac013882ed0bc56a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>All functions and variables defined here can be used by applications. See <a class="el" href="bootload-ezsp-utils_8h.htm" title="Utilities used for performing stand-alone bootloading over EZSP. See Bootloading for documentation...">bootload-ezsp-utils.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga1f77ea6a4a58164fd5c6c7946f85c884"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TICKS_PER_QUARTER_SECOND</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="bootload-ezsp-utils_8h_source.htm#l00023">23</a> of file <a class="el" href="bootload-ezsp-utils_8h_source.htm">bootload-ezsp-utils.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaac9a687131fcd22cc9d6bf88933e6062"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool hostBootloadUtilLaunchRequestHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>lqi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>rssi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>manufacturerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>hardwareTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>sourceEui</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback function invoked by bootload-ezsp-utils when a bootload launch request message is received. </p>
<p>The application may choose whether or not to enter the bootloader by checking the manufacturerId, hardwareTag, and sourceEui. If the application chooses to launch the bootloader, the bootloader will launch after successful completion of the bootloader launch authentication protocol.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lqi</td><td>The link quality from the node that generated this bootload launch request.</td></tr>
    <tr><td class="paramname">rssi</td><td>The energy level (in units of dBm) observed during the reception.</td></tr>
    <tr><td class="paramname">manufacturerId</td><td>The manufacturer specification (vendor specific) of the sending node.</td></tr>
    <tr><td class="paramname">hardwareTag</td><td>The hardware specification (vendor specific) of the sending node.</td></tr>
    <tr><td class="paramname">sourceEui</td><td>The EUI64 of the sending node.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the application wishes to launch the bootloader, false if the application does not wish to launch the bootloader. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4eff7bca55fdcd2c70ec622956b0357c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hostBootloadUtilQueryResponseHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>lqi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>rssi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bootloaderActive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>manufacturerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>hardwareTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>targetEui</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bootloaderCapabilities</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>platform</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>micro</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>phy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>blVersion</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback function invoked by bootload-ezsp-utils when a bootload query response message is received. </p>
<p>This is particularly useful when the application needs to decide which node to bootload. Several attributes of the responding node are provided to the application. The application can use these attributes to decide whether to bootload or how to bootload a given node.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lqi</td><td>The link quality from the node that generated this bootload query response.</td></tr>
    <tr><td class="paramname">rssi</td><td>The energy level (in units of dBm) observed during the reception.</td></tr>
    <tr><td class="paramname">bootloaderActive</td><td>true if the responding node is running the bootloader, false if not.</td></tr>
    <tr><td class="paramname">manufacturerId</td><td>The manufacturer specification (vendor specific) of the responding node.</td></tr>
    <tr><td class="paramname">hardwareTag</td><td>The hardware specification (vendor specific) of the responding node.</td></tr>
    <tr><td class="paramname">targetEui</td><td>The EUI64 of the responding node.</td></tr>
    <tr><td class="paramname">bootloaderCapabilities</td><td>If the lsb is 1, the bootloader on the responding node supports encrypted bootloader message payloads.</td></tr>
    <tr><td class="paramname">platform</td><td>The type of platform of the responding node. 1 is avr-atmega, 2 is xap2b.</td></tr>
    <tr><td class="paramname">micro</td><td>The type of microcontroller on the responding node. Value depends on platform. 1 is the avr-atmega 64, 2 is the avr-atmega 128, 1 is the xap2b em250.</td></tr>
    <tr><td class="paramname">phy</td><td>The type of phy of the responding node. 1 is em2420, 2 is em250.</td></tr>
    <tr><td class="paramname">blVersion</td><td>The version of standalone bootloader of the responding node. This is a 2 byte field. The high byte is the version and the low byte is the build. A value of 0xFFFF means unknown. For example, a version field of 0x1234 is version 1.2, build 34. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5239eabe3a5792b5af0c1e4bf0ca1e13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hostBootloadReinitHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback function invoked by bootload-ezsp-utils when a NCP has finished being bootloaded. </p>
<p>The application can handle this as simply as calling on <a class="el" href="group__host.htm#ga3550a689dc90ddd9d7d973bb154dd909" title="Restarts the microcontroller.">halReboot()</a> or as complex as needed. </p>

</div>
</div>
<a class="anchor" id="ga41de1f57b0dd635393090bb3efba472b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isTheSameEui64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>sourceEui</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>targetEui</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A function to compare EUI64s. </p>
<p>Compare two EUI64s.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sourceEui</td><td>The EUI64 of the sending node.</td></tr>
    <tr><td class="paramname">targetEui</td><td>The EUI64 of the responding node.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the EUI64s are the same. false if the EUI64s are different. </dd></dl>

</div>
</div>
<a class="anchor" id="ga627c5f0fb5cab3d4933e28eb5357aabb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void printLittleEndianEui64 </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>eui64</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A function to display an EUI64. </p>
<p>Display an EUI64 in little endian format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The serial port to use. 0 for Mega128 port. 0 or 1 for Linux ports.</td></tr>
    <tr><td class="paramname">eui64</td><td>The EUI64 to display. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafb03b15606c34904b86d180173b6ba3a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void printBigEndianEui64 </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>eui64</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A function to display an EUI64. </p>
<p>Display an EUI64 in big endian format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The serial port to use. 0 for Mega128 port. 0 or 1 for Linux ports.</td></tr>
    <tr><td class="paramname">eui64</td><td>The EUI64 to display. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae14d05864786218958c7c1fc51110359"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> debugPrintf </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&#160;</td>
          <td class="paramname"><em>formatString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A function to simular to emberSerialPrintf(). </p>
<p>Output to local ports.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>The serial port to use. 0 for Mega128 port. 0 or 1 for Linux ports.</td></tr>
    <tr><td class="paramname">formatString</td><td>The string to print.</td></tr>
    <tr><td class="paramname">...</td><td>Format specifiers.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>One of the following (see the Main Page):<ul>
<li>EMBER_SERIAL_TX_OVERFLOW indicates that data was dropped.</li>
<li>EMBER_NO_BUFFERS indicates that there was an insufficient number of available stack buffers.</li>
<li>EMBER_SUCCESS. </li>
</ul>
</dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="gaf2e4e0306a9273017dcf87eb34ce0506"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t nodeBlVersion</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf1ad67b8f2b6f3b86948e9bac00de133"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t nodePlat</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga0b9437fd4fd80a2befd4f9a825692a85"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t nodeMicro</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga13cb347c1cbbda387aa7cde2eecd25d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t nodePhy</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga8af92775d78500a8a811193f55838f46"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus bootloadEzspLastError</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga84f28d5ce3160eac013882ed0bc56a66"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ignoreNextEzspError</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
