<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('iar-st_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">iar-st.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;stm32f10x.h&quot;</code><br/>
<code>#include &lt;stddef.h&gt;</code><br/>
<code>#include &lt;stdarg.h&gt;</code><br/>
<code>#include &lt;stdint.h&gt;</code><br/>
<code>#include &lt;stdbool.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="platform-common_8h_source.htm">hal/host/generic/compiler/platform-common.h</a>&quot;</code><br/>
</div>
<p><a href="iar-st_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga12ef4b3c98231a44d2c2cd3b04cec5a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga12ef4b3c98231a44d2c2cd3b04cec5a4">halResetWatchdog</a>()</td></tr>
<tr class="separator:ga12ef4b3c98231a44d2c2cd3b04cec5a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac90cd47ca2b08382baa48d854d9acc38"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gac90cd47ca2b08382baa48d854d9acc38">SIGNED_ENUM</a></td></tr>
<tr class="separator:gac90cd47ca2b08382baa48d854d9acc38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf947e7d809d6ff89fe93f6367c20f4c6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gaf947e7d809d6ff89fe93f6367c20f4c6">_HAL_USE_COMMON_DIVMOD_</a></td></tr>
<tr class="separator:gaf947e7d809d6ff89fe93f6367c20f4c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cd18da9b188103037c75e5ed623b136"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga5cd18da9b188103037c75e5ed623b136">_HAL_USE_COMMON_PGM_</a></td></tr>
<tr class="separator:ga5cd18da9b188103037c75e5ed623b136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6e2cc702734ab195fc0bdfedcacd1d3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gac6e2cc702734ab195fc0bdfedcacd1d3">PLATCOMMONOKTOINCLUDE</a></td></tr>
<tr class="separator:gac6e2cc702734ab195fc0bdfedcacd1d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Global Interrupt Manipulation Macros</div></td></tr>
<tr class="memitem:gac136489c5ba4794566532004267967f8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gac136489c5ba4794566532004267967f8">DISABLE_INTERRUPTS</a>()</td></tr>
<tr class="separator:gac136489c5ba4794566532004267967f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad247197cbbb31c7a56bb7e6b97386c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gaad247197cbbb31c7a56bb7e6b97386c4">RESTORE_INTERRUPTS</a>()</td></tr>
<tr class="separator:gaad247197cbbb31c7a56bb7e6b97386c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7710527473136ee906c491bb5e0761a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga7710527473136ee906c491bb5e0761a1">INTERRUPTS_ON</a>()</td></tr>
<tr class="separator:ga7710527473136ee906c491bb5e0761a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga600e3cb6d6691dd6e04ecafef528ce47"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga600e3cb6d6691dd6e04ecafef528ce47">INTERRUPTS_OFF</a>()</td></tr>
<tr class="separator:ga600e3cb6d6691dd6e04ecafef528ce47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae06b01c7d430e4e94819568ad1404f1d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gae06b01c7d430e4e94819568ad1404f1d">INTERRUPTS_ARE_OFF</a>()</td></tr>
<tr class="separator:gae06b01c7d430e4e94819568ad1404f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0674197dbd97cc7b9457e76aa55da102"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga0674197dbd97cc7b9457e76aa55da102">INTERRUPTS_WERE_ON</a>()</td></tr>
<tr class="separator:ga0674197dbd97cc7b9457e76aa55da102"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb86d22878544b15c38b727363ecb8b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gadb86d22878544b15c38b727363ecb8b7">ATOMIC</a>(blah)</td></tr>
<tr class="separator:gadb86d22878544b15c38b727363ecb8b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga445de09810ada0d167d34c8222f86a81"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga445de09810ada0d167d34c8222f86a81">HANDLE_PENDING_INTERRUPTS</a>()</td></tr>
<tr class="separator:ga445de09810ada0d167d34c8222f86a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic Types</div></td></tr>
<tr class="memitem:ga070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td></tr>
<tr class="separator:ga070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Master Variable Types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These are a set of typedefs to make the size of all variable declarations explicitly known. Since the IAR host code links against the ST Standard peripheral library, we need to map Ember's variable types to ST's variable types. </p>
<dl class="section note"><dt>Note</dt><dd>ST uses IAR's variable types, found in stdint.h. </dd></dl>
</div></td></tr>
<tr class="memitem:gaf29b166bf5fea7f0bbc07f7014a8c6b5"><td class="memItemLeft" align="right" valign="top">typedef bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gaf29b166bf5fea7f0bbc07f7014a8c6b5">boolean</a></td></tr>
<tr class="separator:gaf29b166bf5fea7f0bbc07f7014a8c6b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29edc2328533c8dbc46be2d7b654c749"><td class="memItemLeft" align="right" valign="top">typedef uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a></td></tr>
<tr class="separator:ga29edc2328533c8dbc46be2d7b654c749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2017492c2bef74dd69c73d0c3452222"><td class="memItemLeft" align="right" valign="top">typedef int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222">int8s</a></td></tr>
<tr class="separator:gac2017492c2bef74dd69c73d0c3452222"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40790a257990626db514387099889f37"><td class="memItemLeft" align="right" valign="top">typedef uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a></td></tr>
<tr class="separator:ga40790a257990626db514387099889f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36cdc07bf51be91bc9d92735b6c6695f"><td class="memItemLeft" align="right" valign="top">typedef int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga36cdc07bf51be91bc9d92735b6c6695f">int16s</a></td></tr>
<tr class="separator:ga36cdc07bf51be91bc9d92735b6c6695f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05aebcd1ffd9d69bda7b936f0cbd64b5"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga05aebcd1ffd9d69bda7b936f0cbd64b5">int32u</a></td></tr>
<tr class="separator:ga05aebcd1ffd9d69bda7b936f0cbd64b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae8b7a95dfed4e452d1416a9151be88c7"><td class="memItemLeft" align="right" valign="top">typedef int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gae8b7a95dfed4e452d1416a9151be88c7">int32s</a></td></tr>
<tr class="separator:gae8b7a95dfed4e452d1416a9151be88c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebe77f625f69d309d618b3c7afcaee5e"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gaebe77f625f69d309d618b3c7afcaee5e">PointerType</a></td></tr>
<tr class="separator:gaebe77f625f69d309d618b3c7afcaee5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga8a39a028776dc2065aa3f02c2a1fd1d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga8a39a028776dc2065aa3f02c2a1fd1d6">halInternalResetWatchDog</a> (void)</td></tr>
<tr class="separator:ga8a39a028776dc2065aa3f02c2a1fd1d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Miscellaneous Macros</h2></td></tr>
<tr class="memitem:gad94ab8d3445144ef6d9c928764cdb938"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gad94ab8d3445144ef6d9c928764cdb938">simulatedSerialTimePasses</a>()</td></tr>
<tr class="separator:gad94ab8d3445144ef6d9c928764cdb938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e71cc0eb54b859562fb1463dcce4f6f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga7e71cc0eb54b859562fb1463dcce4f6f">BIGENDIAN_CPU</a></td></tr>
<tr class="separator:ga7e71cc0eb54b859562fb1463dcce4f6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabeeaa7d8b7d869f7e45b793b43b0b737"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gabeeaa7d8b7d869f7e45b793b43b0b737">MAIN_FUNCTION_PARAMETERS</a></td></tr>
<tr class="separator:gabeeaa7d8b7d869f7e45b793b43b0b737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab15d5c759bdf4d50157e73caff40ad6f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gab15d5c759bdf4d50157e73caff40ad6f">MAIN_FUNCTION_ARGUMENTS</a></td></tr>
<tr class="separator:gab15d5c759bdf4d50157e73caff40ad6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c59e137842a414e665008da08ce7f34"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga2c59e137842a414e665008da08ce7f34">__SOURCEFILE__</a></td></tr>
<tr class="separator:ga2c59e137842a414e665008da08ce7f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdcc5aaebf3f273c1762f24a6ece2e5e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e">assert</a>(condition)</td></tr>
<tr class="separator:gacdcc5aaebf3f273c1762f24a6ece2e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19793103eca86def2c5b82c213096974"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga19793103eca86def2c5b82c213096974">simulatedTimePasses</a>()</td></tr>
<tr class="separator:ga19793103eca86def2c5b82c213096974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf72385043d62eb5c6da466c3b5b326c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gabf72385043d62eb5c6da466c3b5b326c">simulatedTimePassesMs</a>(x)</td></tr>
<tr class="separator:gabf72385043d62eb5c6da466c3b5b326c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad94ab8d3445144ef6d9c928764cdb938"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gad94ab8d3445144ef6d9c928764cdb938">simulatedSerialTimePasses</a>()</td></tr>
<tr class="separator:gad94ab8d3445144ef6d9c928764cdb938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9ac3d6162a4c18e51a0852093eab9bd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#gad9ac3d6162a4c18e51a0852093eab9bd">STRINGIZE</a>(X)</td></tr>
<tr class="separator:gad9ac3d6162a4c18e51a0852093eab9bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54cb903718e9e698f95e6a19c98db412"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga54cb903718e9e698f95e6a19c98db412">ALIGNMENT</a>(X)</td></tr>
<tr class="separator:ga54cb903718e9e698f95e6a19c98db412"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a08dd8589c7ca238328322d0e00560f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__iar__config.htm#ga3a08dd8589c7ca238328322d0e00560f">halInternalAssertFailed</a> (const char *filename, int linenumber)</td></tr>
<tr class="separator:ga3a08dd8589c7ca238328322d0e00560f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>See <a class="el" href="group__platform__common.htm">Common PLATFORM_HEADER Configuration</a> and <a class="el" href="group__stm32f103ret__iar__config.htm">STM32F103RET IAR Specific PLATFORM_HEADER Configuration</a> for documentation. </p>

<p>Definition in file <a class="el" href="iar-st_8h_source.htm">iar-st.h</a>.</p>
</div></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
