<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__button.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Button Control</div>  </div>
<div class="ingroups"><a class="el" href="group__peripherals.htm">Sample APIs for Peripheral Access</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__stm32f103ret__button"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__button.htm">STM32F103RET Specific Button</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac39d4a62f8c5ba064fb676378552feb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#gac39d4a62f8c5ba064fb676378552feb3">halInternalInitButton</a> (void)</td></tr>
<tr class="separator:gac39d4a62f8c5ba064fb676378552feb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91fcc39d9a211cc0db7e43aeaf91b374"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#ga91fcc39d9a211cc0db7e43aeaf91b374">halButtonState</a> (uint8_t button)</td></tr>
<tr class="separator:ga91fcc39d9a211cc0db7e43aeaf91b374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga853cd16de3b14d3d7bc81698b9b442a0"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#ga853cd16de3b14d3d7bc81698b9b442a0">halButtonPinState</a> (uint8_t button)</td></tr>
<tr class="separator:ga853cd16de3b14d3d7bc81698b9b442a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb599d6f104dafd102231c8839562070"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#gadb599d6f104dafd102231c8839562070">halButtonIsr</a> (uint8_t button, uint8_t state)</td></tr>
<tr class="separator:gadb599d6f104dafd102231c8839562070"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Button State Definitions</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp78c6b77f093e915e378266f6bc34baeb"></a> A set of numerical definitions for use with the button APIs indicating the state of a button. </p>
</td></tr>
<tr class="memitem:ga666f4a9872b7185170dd9318ceff91c6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#ga666f4a9872b7185170dd9318ceff91c6">BUTTON_PRESSED</a></td></tr>
<tr class="separator:ga666f4a9872b7185170dd9318ceff91c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd02c108ba5abc6ddc9b17b6a3348880"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__button.htm#gafd02c108ba5abc6ddc9b17b6a3348880">BUTTON_RELEASED</a></td></tr>
<tr class="separator:gafd02c108ba5abc6ddc9b17b6a3348880"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Sample generic API funtions for using push-buttons. </p>
<dl class="section note"><dt>Note</dt><dd>The micro specific definitions, <a class="el" href="group__stm32f103ret__button.htm">STM32F103RET Specific Button</a>, is chosen by the build include path pointing at the appropriate directoy.</dd></dl>
<p>See <a class="el" href="button-common_8h.htm">button-common.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga666f4a9872b7185170dd9318ceff91c6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUTTON_PRESSED</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Button state is pressed. </p>

<p>Definition at line <a class="el" href="button-common_8h_source.htm#l00029">29</a> of file <a class="el" href="button-common_8h_source.htm">button-common.h</a>.</p>

</div>
</div>
<a class="anchor" id="gafd02c108ba5abc6ddc9b17b6a3348880"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUTTON_RELEASED</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Button state is released. </p>

<p>Definition at line <a class="el" href="button-common_8h_source.htm#l00033">33</a> of file <a class="el" href="button-common_8h_source.htm">button-common.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gac39d4a62f8c5ba064fb676378552feb3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalInitButton </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the buttons. Must be called before the buttons can be used. </p>

</div>
</div>
<a class="anchor" id="ga91fcc39d9a211cc0db7e43aeaf91b374"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t halButtonState </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>button</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current state (pressed or released) of a button. </p>
<dl class="section note"><dt>Note</dt><dd>This function is correlated with <a class="el" href="group__button.htm#gadb599d6f104dafd102231c8839562070" title="A callback called in interrupt context whenever a button changes its state.">halButtonIsr()</a> and so returns the shadow state rather than reading the actual state of the pin.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">button</td><td>The button being queried, either BUTTON0 or BUTTON1 as defined in <a class="el" href="button-specific_8h.htm">button-specific.h</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__button.htm#ga666f4a9872b7185170dd9318ceff91c6" title="Button state is pressed.">BUTTON_PRESSED</a> if the button is pressed or <a class="el" href="group__button.htm#gafd02c108ba5abc6ddc9b17b6a3348880" title="Button state is released.">BUTTON_RELEASED</a> if the button is not pressed. </dd></dl>

</div>
</div>
<a class="anchor" id="ga853cd16de3b14d3d7bc81698b9b442a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t halButtonPinState </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>button</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current state (pressed or released) of the pin associated with a button. </p>
<p>This reads the actual state of the pin and can be used on startup to determine the initial position of the buttons.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">button</td><td>The button being queried, either BUTTON0 or BUTTON1 as defined in <a class="el" href="button-specific_8h.htm">button-specific.h</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__button.htm#ga666f4a9872b7185170dd9318ceff91c6" title="Button state is pressed.">BUTTON_PRESSED</a> if the button is pressed or <a class="el" href="group__button.htm#gafd02c108ba5abc6ddc9b17b6a3348880" title="Button state is released.">BUTTON_RELEASED</a> if the button is not pressed. </dd></dl>

</div>
</div>
<a class="anchor" id="gadb599d6f104dafd102231c8839562070"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halButtonIsr </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>button</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback called in interrupt context whenever a button changes its state. </p>
<dl class="section user"><dt>Application Usage:</dt><dd>Must be implemented by the application. This function should contain the functionality to be executed in response to changes of state in each of the buttons, or callbacks to the appropriate functionality.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">button</td><td>The button which has changed state, either BUTTON0 or BUTTON1 as defined in <a class="el" href="button-specific_8h.htm">button-specific.h</a>.</td></tr>
    <tr><td class="paramname">state</td><td>The new state of the button referenced by the button parameter, either <a class="el" href="group__button.htm#ga666f4a9872b7185170dd9318ceff91c6" title="Button state is pressed.">BUTTON_PRESSED</a> if the button has been pressed or <a class="el" href="group__button.htm#gafd02c108ba5abc6ddc9b17b6a3348880" title="Button state is released.">BUTTON_RELEASED</a> if the button has been released. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
