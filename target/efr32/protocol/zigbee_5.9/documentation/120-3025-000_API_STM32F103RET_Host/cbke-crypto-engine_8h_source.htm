<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the STM32F103RET Host platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the STM32F103RET Host platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cbke-crypto-engine_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">cbke-crypto-engine.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cbke-crypto-engine_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#ga3efb8a9cb70bdb0d3254bd40859416b4" title="Retrieves the implicit certificate stored in the MFG tokens of the device.">emberGetCertificate</a>(<a class="code" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificateData</a>* result);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#gab8952f016f5e33511f30aeef69424d51" title="This function begins the process of generating an ephemeral public/private ECC key pair...">emberGenerateCbkeKeys</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#ga87a8f695a93abdc6093e41f5073ebb68" title="This function will begin the process of generating the shared secret, the new link key...">emberCalculateSmacs</a>(<span class="keywordtype">bool</span> amInitiator,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                <a class="code" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificateData</a>* partnerCert, </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                <a class="code" href="structEmberPublicKeyData.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKeyData</a>* partnerEphemeralPublicKey);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#gab056dab9f8fb27f0ffaaa8329435e64d" title="This function should be called when all CBKE operations are done. Any temporary data created during c...">emberClearTemporaryDataMaybeStoreLinkKey</a>(<span class="keywordtype">bool</span> storeLinkKey);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">/* @brief LEGACY FUNCTION:  This functionality has been replaced by a single</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> * bit in the ::EmberApsFrame, ::EMBER_APS_OPTION_DSA_SIGN.  Devices wishing</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> * to send signed messages should use that as it requires fewer function calls</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> * and message buffering.  emberDsaSignHandler() is still called when using</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * ::EMBER_APS_OPTION_DSA_SIGN.  However, this function is still supported.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * This function begins the process of signing the passed message</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> * contained within the buffer.  If no other ECC operation is going on,</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> * it will immediately return with ::EMBER_OPERATION_IN_PROGRESS.  </span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"> * It will delay a period of time to let APS retries take place, but then it </span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"> * will shutdown the radio and consume the CPU processing until the signing </span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"> * is complete.  This may take up to 1 second.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"> * The signed message will be returned in ::emberDsaSignHandler().</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"> * Note that the last byte of the buffer contents passed to this function has</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * special significance.  As the typical use case for DSA signing is to sign the</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> * ZCL payload of a DRLC Report Event Status message in SE 1.0, there is often</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> * both a signed portion (ZCL payload) and an unsigned portion (ZCL header).</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> * The last byte in the content of messageToSign is therefore used as a </span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> * special indicator to signify how many bytes of leading data in the buffer</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"> * should be excluded from consideration during the signing process.  If the</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"> * signature needs to cover the entire buffer (all bytes except last one), </span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"> * the caller should ensure that the last byte of the buffer contents is 0. </span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"> * When the signature operation is complete, this final byte will be replaced</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> * by the signature type indicator (0x01 for ECDSA signatures), and the </span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> * actual signature will be appended to the buffer after this byte.</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"> * @param messageToSign The message buffer containing the complete message,</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"> *   both the to-be-signed portion as well as any leading data excluded from</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"> *   the signing operation.  See note above regarding special requirements</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> *   for this buffer.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"> * </span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"> * @return ::EMBER_OPERATION_IN_PROGRESS if the stack has queued up the</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"> *   operation for execution.  ::EMBER_INVALID_CALL if the operation can&#39;t be</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"> *   performed in this context (possibly because another ECC operation is</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"> *   pending.)</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#ga3948efc511fa4fdce242354f04d2a334">emberDsaSign</a>(<a class="code" href="group__ember__types.htm#gad8cef59e716103f3996ce6cb7e10b017" title="Incoming and outgoing messages are stored in buffers. These buffers are allocated and freed as needed...">EmberMessageBuffer</a> messageToSign);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">/* @brief This function is an application callback that must be defined</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"> * when using CBKE.  It is called when the ephemeral key generation operation</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"> * is complete.  The newly generated public key is passed back to the </span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"> * application to be sent to the CBKE partner over-the-air.  Internally</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"> * the stack saves the public and private key pair until it the function</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"> * ::emberClearTemporaryDataMaybeStoreLinkKey() is called by the application.</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"> * @param status This is the ::EmberStatus value indicating the success or </span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"> *   failure of the operation.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"> * @param ephemeralPublicKey A pointer to an ::EmberPublicKeyData structure</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> *   containing the newly generated public key.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__smart__energy__security.htm#ga269e2ce38517a43b32f9f4794636a1fe">emberGenerateCbkeKeysHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status,</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                  <a class="code" href="structEmberPublicKeyData.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKeyData</a>* ephemeralPublicKey);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">/* @brief This function is an application callback that must be defined</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> * when using CBKE.  It is called when the shared secret generation is</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"> * complete and the link key and SMACs have been derived.  The link key is</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"> * stored in a temporary location until the application decides to</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"> * store or discard the key by calling</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"> * ::emberClearTemporaryDataMaybeStoreLinkKey().  </span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"> * @param status This is the ::EmberStatus value indicating the success or </span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"> *   failure of the operation.</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"> * @param initiatorSmac This is a pointer to the ::EmberSmacData structure</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"> *   to the initiator&#39;s version of the SMAC.</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> * @param responderSmac This is a pointer to the ::EmberSmacData structure</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> *   to the responder&#39;s version of the SMAC.</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__smart__energy__security.htm#ga186c463a1da518f9b61a80a0417fac1a">emberCalculateSmacsHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                <a class="code" href="structEmberSmacData.htm" title="This data structure contains the Shared Message Authentication Code (SMAC) data that is used for Cert...">EmberSmacData</a>* initiatorSmac,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                <a class="code" href="structEmberSmacData.htm" title="This data structure contains the Shared Message Authentication Code (SMAC) data that is used for Cert...">EmberSmacData</a>* responderSmac);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">/* @brief This function is an application callback that must be defined</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> * when using CBKE.  This callback is provided to the application to let</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> * it know that the ECC operations have completed and the radio has been turned</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> * back on.  When using the sign-and-send option of the ::EmberApsFrame, </span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"> * ::EMBER_APS_OPTION_DSA_SIGN, the handler will NOT return the complete</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"> * signed message.  This callback is merely informative.  If ::emberDsaSign() </span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"> * has been called, the message plus signature will be returned to the caller</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> * and it must be sent separately by one of the message send primitives</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> * (such as ::emberSendUnicast()).</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> * </span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> * @param status This is the ::EmberStatus value indicating the success or </span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> *   failure of the operation.</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> * @param signedMessage This is the ::EmberMessageBuffer indicating the newly</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> *   signed message, if ::emberDsaSign() was called.  If message was signed</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"> *   using ::EMBER_APS_OPTION_DSA_SIGN then this will be</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"> *    ::EMBER_NULL_MESSAGE_BUFFER.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__smart__energy__security.htm#gac60166a5cb371cce8b9ff69111198073">emberDsaSignHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status, </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                         <a class="code" href="group__ember__types.htm#gad8cef59e716103f3996ce6cb7e10b017" title="Incoming and outgoing messages are stored in buffers. These buffers are allocated and freed as needed...">EmberMessageBuffer</a> signedMessage);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">/* @brief This function is used to update the Smart Energy certificate,</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> * CA public key, and local private key that the device uses for CBKE.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * The preferred method for adding certificates is to pre-install them</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * in MFG tokens when the chip is manufactured.  However this function</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * allows the certificate to be updated at runtime after the device has</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * been deployed.  </span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> *   The behavior of this function differs based on the hardware platform.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> * </span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> * For the 2xx:</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> * To use this functionality the application must also set</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"> * the stack configuration value ::EMBER_CERTIFICATE_TABLE_SIZE to 1.</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"> * Attempts to call this function with ::EMBER_CERTIFICATE_TABLE_SIZE of 0</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"> * will return ::EMBER_SECURITY_CONFIGURATION_INVALID.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> * The passed security data will be persistently stored in stack tokens.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> * The certificate contains the EUI64 it is associated with.  If that</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"> * EUI64 matches the EUI64 currently in use by the device, this</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"> * function may be called at any time, even while running in a network.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> * If the EUI64 does not match, this function may only be called when the</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> * network is in a state of ::EMBER_NO_NETWORK.  Attempts to do otherwise</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> * will result in a return value of ::EMBER_INVALID_CALL.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"> * For the 3xx:</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"> * This function allows a one-time write of the MFG token if it has not</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> * already been set.  It does NOT utilize the ::EMBER_CERTIFICATE_TABLE_SIZE</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * so that should remain set at 0.  Attempts to write the certificate that</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> * has already been written will return a result of</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"> * ::EMBER_ERR_FLASH_WRITE_INHIBITED.  If the EUI64 in the certificate is</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"> * the same as the current EUI of the device then this function may be called</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"> * while the stack is up.  If the EUI in the certificate is different than</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"> * the current value, this function may only be called when the network is in</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"> * a state of ::EMBER_NO_NETWORK.  Attempts to do otherwise will result in a</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"> * return value of ::EMBER_INVALID_CALL.  If the EUI in the certificate is</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"> * different than the current value this function will also write the </span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"> * Custom EUI64 MFG token.  If that token has already been written the operation</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"> * will fail and return a result of ::EMBER_BAD_ARGUMENT.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment"> * If all the above criteria is met the token will be written and </span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment"> * ::EMBER_SUCCESS will be returned.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment"> * </span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"> * @note The device will immediately and persistently &lt;b&gt;change its EUI64</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"> * to match the value in the certificate&lt;/b&gt;. </span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment"> * @param caPublic A pointer to the CA public key data that will be stored</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment"> *   in stack tokens.</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"> * @param myCert A pointer to the certificate data that will be stored in</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment"> *   stack tokens.</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"> * @param mykey A pointer to the private key data that will be stored in</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment"> *   stack tokens.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment"> * @return The ::EmberStatus value indicating success or failure of the </span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment"> *   operation.</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#ga5fc274a1307fa7440b1b6cd7e1f64932">emberSetPreinstalledCbkeData</a>(<a class="code" href="structEmberPublicKeyData.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKeyData</a>* caPublic,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                         <a class="code" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificateData</a>* myCert,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                         <a class="code" href="structEmberPrivateKeyData.htm" title="This data structure contains the private key data that is used for Certificate Based Key Exchange (CB...">EmberPrivateKeyData</a>* myKey);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">/* @brief This function retrieves the EUI64 from the stack token </span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment"> * Smart Energy Certificate (it does not examine the MFG token certificate)</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"> * and returns the value in the &quot;Subject&quot; field (the EUI64) to the caller.</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"> * If no stack token is set, the ::EMBER_CERTIFICATE_TABLE_SIZE is zero</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment"> * or if the CBKE library is not present, this function returns false</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"> * and the EUI64 for the return value is not set.</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"> * @param certEui64 The location of the return value for the EUI64.</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"> * @return true if the stack token certificate is set and the EUI64</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"> *   return value is valid.  false otherwise.</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__smart__energy__security.htm#ga61d79a1651a9c863f72f8f72d9f0126a">emberGetStackCertificateEui64</a>(<a class="code" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> certEui64);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">/* @brief This function verifies the ECDSA signature of the</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"> * calculated digest and the associated received signature, using</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"> * the signerCertificate passed in.  It is expected that the application</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"> * obtains the signerCertificate and performs the message digest calculation</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"> * on its own.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="group__smart__energy__security.htm#ga4b69802e7375290ee47918eb80b0572a">emberDsaVerify</a>(<a class="code" href="structEmberMessageDigest.htm" title="This data structure contains an AES-MMO Hash (the message digest).">EmberMessageDigest</a>* digest,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                           <a class="code" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificateData</a>* signerCertificate,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                           <a class="code" href="structEmberSignatureData.htm" title="This data structure contains a DSA signature. It is the bit concatenation of the &#39;r&#39; and &#39;s&#39; componen...">EmberSignatureData</a>* receivedSig);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">/* @brief This callback is executed by the stack when the DSA verification</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment"> * has completed and has a result.  If the result is EMBER_SUCCESS, the </span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"> * signature is valid.  If the result is EMBER_SIGNATURE_VERIFY_FAILURE</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment"> * then the signature is invalid.  If the result is anything else then the</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment"> * signature verify operation failed and the validity is unknown.</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__smart__energy__security.htm#ga758cb85bf29bcd41a7dd79007b2a2b35">emberDsaVerifyHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">// Start of 283k1 Curve Defintions</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#a7e25a2fbf7df3337e19671783d8bc768" title="Retrieves the implicit certificate stored in the MFG tokens of the device.">emberGetCertificate283k1</a>(<a class="code" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a>* result);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#aa7bd8beaec3050955180051d5bad8335" title="This function begins the process of generating an ephemeral public/private ECC key pair...">emberGenerateCbkeKeys283k1</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#a78243f3b98573851fbfd69bcf192f998" title="This function will begin the process of generating the shared secret, the new link key...">emberCalculateSmacs283k1</a>(<span class="keywordtype">bool</span> amInitiator,</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                     <a class="code" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a>* partnerCert,</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                     <a class="code" href="structEmberPublicKey283k1Data.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKey283k1Data</a>* partnerEphemeralPublicKey);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#a6d664c658e56a614c72e4cae3411380c" title="This function should be called when all CBKE 283k1 operations are done. Any temporary data created du...">emberClearTemporaryDataMaybeStoreLinkKey283k1</a>(<span class="keywordtype">bool</span> storeLinkKey);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">/* @brief This function is an application callback that must be defined</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"> * when using the CBKE 283k1 Library.  It is called when the ephemeral key </span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment"> * generation operation is complete.  The newly generated public key is passed </span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"> * back to the application to be sent to the CBKE partner over-the-air. Internally</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment"> * the stack saves the public and private key pair until it the function</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment"> * ::emberClearTemporaryDataMaybeStoreLinkKey283k1() is called by the application.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment"> * @param status This is the ::EmberStatus value indicating the success or </span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment"> *   failure of the operation.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment"> * @param ephemeralPublicKey A pointer to an ::EmberPublicKeyData structure</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment"> *   containing the newly generated public key.</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordtype">void</span> <a class="code" href="cbke-crypto-engine_8h.htm#aa2d372947c70ffc60f24d1a23558cbda">emberGenerateCbkeKeysHandler283k1</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status,</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                       <a class="code" href="structEmberPublicKey283k1Data.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKey283k1Data</a>* ephemeralPublicKey);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">/* @brief This function is an application callback that must be defined</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"> * when using CBKE.  It is called when the shared secret generation is</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment"> * complete and the link key and SMACs have been derived.  The link key is</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment"> * stored in a temporary location until the application decides to</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment"> * store or discard the key by calling</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment"> * ::emberClearTemporaryDataMaybeStoreLinkKey283k1().  </span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment"> * @param status This is the ::EmberStatus value indicating the success or </span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment"> *   failure of the operation.</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment"> * @param initiatorSmac This is a pointer to the ::EmberSmacData structure</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment"> *   to the initiator&#39;s version of the SMAC.</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment"> * @param responderSmac This is a pointer to the ::EmberSmacData structure</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment"> *   to the responder&#39;s version of the SMAC.</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keywordtype">void</span> <a class="code" href="cbke-crypto-engine_8h.htm#a99e1e3e360b9fb6344d911f17b19e51a">emberCalculateSmacsHandler283k1</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> status,</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                     <a class="code" href="structEmberSmacData.htm" title="This data structure contains the Shared Message Authentication Code (SMAC) data that is used for Cert...">EmberSmacData</a>* initiatorSmac,</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                     <a class="code" href="structEmberSmacData.htm" title="This data structure contains the Shared Message Authentication Code (SMAC) data that is used for Cert...">EmberSmacData</a>* responderSmac);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; <span class="comment">/* This function allows a one-time write of the MFG token if it has not</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment"> * already been set.  It does NOT utilize the ::EMBER_CERTIFICATE_TABLE_SIZE</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment"> * so that should remain set at 0.  Attempts to write the certificate that</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment"> * has already been written will return a result of</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment"> * ::EMBER_ERR_FLASH_WRITE_INHIBITED.  If the EUI64 in the certificate is</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment"> * the same as the current EUI of the device then this function may be called</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment"> * while the stack is up.  If the EUI in the certificate is different than</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment"> * the current value, this function may only be called when the network is in</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment"> * a state of ::EMBER_NO_NETWORK.  Attempts to do otherwise will result in a</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment"> * return value of ::EMBER_INVALID_CALL.  If the EUI in the certificate is</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"> * different than the current value this function will also write the </span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment"> * Custom EUI64 MFG token.  If that token has already been written the operation</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment"> * will fail and return a result of ::EMBER_BAD_ARGUMENT.</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment"> * If all the above criteria is met the token will be written and </span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment"> * ::EMBER_SUCCESS will be returned.</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment"> * </span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment"> * @note The device will immediately and persistently &lt;b&gt;change its EUI64</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment"> * to match the value in the certificate&lt;/b&gt;. </span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment"> * @param caPublic A pointer to the 283k1 CA public key data that will be stored</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"> *   in stack tokens.</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment"> * @param myCert A pointer to the 283k1 certificate data that will be stored in</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment"> *   stack tokens.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"> * @param mykey A pointer to the 283k1 private key data that will be stored in</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment"> *   stack tokens.</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment"> * @return The ::EmberStatus value indicating success or failure of the </span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment"> *   operation.</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#a0e3d7ee1a59b571a46275080f3fc8992">emberSetPreinstalledCbkeData283k1</a>(<a class="code" href="structEmberPublicKey283k1Data.htm" title="This data structure contains the public key data that is used for Certificate Based Key Exchange (CBK...">EmberPublicKey283k1Data</a>* caPublic,</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                              <a class="code" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a>* myCert,</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                              <a class="code" href="structEmberPrivateKey283k1Data.htm" title="This data structure contains the private key data that is used for Certificate Based Key Exchange (CB...">EmberPrivateKey283k1Data</a>* myKey);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">/* @brief This function verifies the ECDSA signature of the</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment"> * calculated digest and the associated received signature, using</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment"> * the signerCertificate passed in.  It is expected that the application</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment"> * obtains the signerCertificate and performs the message digest calculation</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment"> * on its own.</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> <a class="code" href="cbke-crypto-engine_8h.htm#a0a4766c11970a5c3cfe1cb06d03e586b">emberDsaVerify283k1</a>(<a class="code" href="structEmberMessageDigest.htm" title="This data structure contains an AES-MMO Hash (the message digest).">EmberMessageDigest</a>* digest,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                <a class="code" href="structEmberCertificate283k1Data.htm" title="This data structure contains the certificate data that is used for Certificate Based Key Exchange (CB...">EmberCertificate283k1Data</a>* signerCertificate,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                <a class="code" href="structEmberSignature283k1Data.htm" title="This data structure contains a DSA signature used in SECT283k1 Elliptical Cryptography. It is the bit concatenation of the &#39;r&#39; and &#39;s&#39; components of the signature.">EmberSignature283k1Data</a>* receivedSig);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the STM32F103RET Host platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
