<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('em__usbd_8c_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">em_usbd.c</div>  </div>
</div><!--header-->
<div class="contents">
<a href="em__usbd_8c.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**************************************************************************/</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include PLATFORM_HEADER</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;stack/include/ember.h&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="hal_8h.htm" title="Generic set of HAL includes for all platforms.">hal/hal.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#if CORTEXM3_EM35X_USB</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="em__usb_8h.htm" title="USB protocol stack library API for EFM32.">em_usb.h</a>&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="em__usbhal_8h.htm" title="USB protocol stack library, low level USB peripheral access.">em_usbhal.h</a>&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="em__usbtypes_8h.htm" title="USB protocol stack library, internal type definitions.">em_usbtypes.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="em__usbd_8h.htm" title="USB protocol stack library API for EFM32.">em_usbd.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;serial/serial.h&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">static</span> USBD_Device_TypeDef device;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;USBD_Device_TypeDef *dev = &amp;device;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *stateNames[] =</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a>       ] = <span class="stringliteral">&quot;NONE      &quot;</span>,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da01e32e620c7692ea767d99bb4120940b">USBD_STATE_ATTACHED</a>   ] = <span class="stringliteral">&quot;ATTACHED  &quot;</span>,</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da47b9228ad86b300416ed28d2c2b7e5d3">USBD_STATE_POWERED</a>    ] = <span class="stringliteral">&quot;POWERED   &quot;</span>,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da978c707d313eb49b70bc62dfae304048">USBD_STATE_DEFAULT</a>    ] = <span class="stringliteral">&quot;DEFAULT   &quot;</span>,</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be">USBD_STATE_ADDRESSED</a>  ] = <span class="stringliteral">&quot;ADDRESSED &quot;</span>,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a> ] = <span class="stringliteral">&quot;CONFIGURED&quot;</span>,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a>  ] = <span class="stringliteral">&quot;SUSPENDED &quot;</span>,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  [ <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a> ] = <span class="stringliteral">&quot;UNDEFINED &quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga325117af9b3a9ad1df068cf3b19dc1ba">   56</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#ga325117af9b3a9ad1df068cf3b19dc1ba" title="Abort all pending transfers.">USBD_AbortAllTransfers</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  ATOMIC(</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  USBDHAL_AbortAllTransfers( <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7">USB_STATUS_EP_ABORTED</a> );</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  )</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga83f32dfa4f6a5d010e413967850c52b2">   70</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga83f32dfa4f6a5d010e413967850c52b2" title="Abort a pending transfer on a specific endpoint.">USBD_AbortTransfer</a>( <span class="keywordtype">int</span> epAddr )</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <a class="code" href="group__USB__COMMON.htm#ga521fe3060be2a8de6fdd5ee01193958b" title="USB transfer callback function.">USB_XferCompleteCb_TypeDef</a> callback;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">// nUSBD_AbortTransfer(), Illegal request</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="comment">//cstat !PTR-null-cmp-bef !PTR-null-assign-pos</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="comment">// nUSBD_AbortTransfer(), Illegal endpoint</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep-&gt;num!=0);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  DECLARE_INTERRUPT_STATE;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  DISABLE_INTERRUPTS();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;state == D_EP_IDLE )</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="comment">// USBD_AbortEp( ep );</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  ep-&gt;state = D_EP_IDLE;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;xferCompleteCb )</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    callback = ep-&gt;xferCompleteCb;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    ep-&gt;xferCompleteCb = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> ( ( dev-&gt;lastState == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a> ) &amp;&amp;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;         ( dev-&gt;state     == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be">USBD_STATE_ADDRESSED</a>  )    )</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="comment">//cstat !PTR-null-assign-fun-pos</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      USBDHAL_DeactivateEp( ep );</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// DEBUG_TRACE_ABORT( USB_STATUS_EP_ABORTED );</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    callback( <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7">USB_STATUS_EP_ABORTED</a>, ep-&gt;xferred, ep-&gt;remaining );</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga71b9264662d74666e4b058984e3346e5">  126</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#ga71b9264662d74666e4b058984e3346e5" title="Start USB device operation.">USBD_Connect</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  ATOMIC(</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  USBDHAL_Connect();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  )</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga2d952f8cf9bde552cfd5559ae47e70fc">  141</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#ga2d952f8cf9bde552cfd5559ae47e70fc" title="Stop USB device operation.">USBD_Disconnect</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  ATOMIC(</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  USBDHAL_Disconnect();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  )</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keywordtype">void</span> USBD_SetUsbState( <a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d" title="USB device state enumerator.">USBD_State_TypeDef</a> newState )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d" title="USB device state enumerator.">USBD_State_TypeDef</a> currentState;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  currentState = dev-&gt;state;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">if</span> ( newState == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a> )</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    dev-&gt;savedState = currentState;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  dev-&gt;lastState = dev-&gt;state;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  dev-&gt;state = newState;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">if</span> ( ( dev-&gt;callbacks-&gt;usbStateChange ) &amp;&amp;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;       ( currentState != newState       )    )</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    dev-&gt;callbacks-&gt;usbStateChange( currentState, newState );</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f">  177</a></span>&#160;<a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d" title="USB device state enumerator.">USBD_State_TypeDef</a> <a class="code" href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f" title="Get current USB device state.">USBD_GetUsbState</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordflow">return</span> dev-&gt;state;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga1796a832b3ff75580451818ae2e64000">  192</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="group__USB__DEVICE.htm#ga1796a832b3ff75580451818ae2e64000" title="Get a string naming a device USB state.">USBD_GetUsbStateName</a>( <a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d" title="USB device state enumerator.">USBD_State_TypeDef</a> state )</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">if</span> ( state &gt; <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a> )</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    state = <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordflow">return</span> stateNames[ state ];</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f">  211</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f" title="Check if an endpoint is busy doing a transfer.">USBD_EpIsBusy</a>( <span class="keywordtype">int</span> epAddr )</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;{</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="comment">// USBD_EpIsBusy(), Illegal endpoint</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">//cstat !PTR-null-cmp-bef !PTR-null-assign-pos</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;state == D_EP_IDLE )</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga9bf435e62169bfb3ee0a43ef0e9d009d">  236</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga9bf435e62169bfb3ee0a43ef0e9d009d" title="Set an endpoint in the stalled (halted) state.">USBD_StallEp</a>( <span class="keywordtype">int</span> epAddr )</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <a class="code" href="group__USB__COMMON.htm#ga889b575b566a663621c33eebf46272c1" title="USB transfer status enumerator.">USB_Status_TypeDef</a> retVal;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_STALL</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;Stalling EP%d&quot;</span>,ep-&gt;num);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">if</span> (ep-&gt;in)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;in\r\n&quot;</span>);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;out\r\n&quot;</span>);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="comment">// USBD_StallEp(), Illegal request</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="comment">// USBD_StallEp(), Illegal endpoint</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="comment">// assert (ep-&gt;num!=0);</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="comment">//cstat !PTR-null-cmp-bef-fun !PTR-null-assign-fun-pos</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  ATOMIC(</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    retVal = USBDHAL_StallEp( ep );</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  )</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keywordflow">if</span> ( retVal != <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a> )</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    retVal = <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keywordflow">return</span> retVal;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#gacb0ed1c21fd4aecfe96060ea87a617a8">  281</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#gacb0ed1c21fd4aecfe96060ea87a617a8" title="Reset stall state on a stalled (halted) endpoint.">USBD_UnStallEp</a>( <span class="keywordtype">int</span> epAddr )</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <a class="code" href="group__USB__COMMON.htm#ga889b575b566a663621c33eebf46272c1" title="USB transfer status enumerator.">USB_Status_TypeDef</a> retVal;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_STALL</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;Unstalling EP%d&quot;</span>,ep-&gt;num);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">if</span> (ep-&gt;in)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;in\r\n&quot;</span>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;out\r\n&quot;</span>);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="comment">// USBD_StallEp(), Illegal request</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="comment">// USBD_StallEp(), Illegal endpoint</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="comment">// assert (ep-&gt;num!=0);</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="comment">//cstat !PTR-null-cmp-bef-fun !PTR-null-assign-fun-pos</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  ATOMIC(</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    retVal = USBDHAL_UnStallEp( ep );</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  )</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keywordflow">if</span> ( retVal != <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a> )</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    retVal = <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <span class="keywordflow">return</span> retVal;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#gae26fedf61e90eb1e50ae5d24cd65d0b8">  323</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#gae26fedf61e90eb1e50ae5d24cd65d0b8" title="Stop USB device stack operation.">USBD_Stop</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="group__USB__DEVICE.htm#ga2d952f8cf9bde552cfd5559ae47e70fc" title="Stop USB device operation.">USBD_Disconnect</a>();</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  USBHAL_DisableGlobalInt();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  USBD_SetUsbState( <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a> );</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00347"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga0e5f5bd847e7cc1c4c384bb6b7f0ce77">  347</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga0e5f5bd847e7cc1c4c384bb6b7f0ce77" title="Initializes USB device hardware and internal protocol stack data structures, then connects the data-l...">USBD_Init</a>( <span class="keyword">const</span> <a class="code" href="structUSBD__Init__TypeDef.htm" title="USB Device stack initialization structure.">USBD_Init_TypeDef</a> *p )</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;{</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <span class="keywordtype">int</span> numEps;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  USBD_Ep_TypeDef *ep;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  uint8_t txFifoNum;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  uint8_t *conf, *confEnd;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm" title="USB Endpoint Descriptor.">USB_EndpointDescriptor_TypeDef</a> *epd;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  uint32_t totalRxFifoSize, totalTxFifoSize, numInEps, numOutEps;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <a class="code" href="group__USB__COMMON.htm#ga21c87b800d87fd731173dd4f48f23c28">USBTIMER_Init</a>();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <a class="code" href="group__platform__common.htm#gad7795912037ecd3781859d0895f051a8" title="Friendly convenience macro pointing to the C Stdlib functions.">MEMSET</a>( dev, 0, <span class="keyword">sizeof</span>( USBD_Device_TypeDef ) );</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  dev-&gt;setup                = dev-&gt;setupPkt;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  dev-&gt;deviceDescriptor     = p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#a9b34de34ccc1726c268b646419f5a1b4">deviceDescriptor</a>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  dev-&gt;configDescriptor     = (<a class="code" href="structUSB__ConfigurationDescriptor__TypeDef.htm" title="USB Configuration Descriptor.">USB_ConfigurationDescriptor_TypeDef</a>*)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                              p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#a0a79a532500f7d8618fdcf491a5a7b13">configDescriptor</a>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  dev-&gt;stringDescriptors    = p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#add4d80f6bf26ff2fe67485ec12284a4c">stringDescriptors</a>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  dev-&gt;numberOfStrings      = p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#a7dffaf3d3163e86be4304269d89047a1">numberOfStrings</a>;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  dev-&gt;state                = <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  dev-&gt;savedState           = <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  dev-&gt;lastState            = <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  dev-&gt;callbacks            = p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#ab7362b4c08a63e16e79e5dab224331c8">callbacks</a>;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  #<span class="keywordflow">if</span> <a class="code" href="group__board.htm#ga647bc93bcc6d8107a4aaccd0da9aa59f" title="USB Remote Wakeup Enable.">USB_REMOTEWKUPEN_STATE</a></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  dev-&gt;remoteWakeupEnabled  = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  #<span class="keywordflow">else</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  dev-&gt;remoteWakeupEnabled  = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  #endif</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="comment">/* Initialize EP0 */</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  ep                 = &amp;dev-&gt;ep[ 0 ];</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  ep-&gt;in             = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  ep-&gt;buf            = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  ep-&gt;num            = 0;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  ep-&gt;mask           = 1;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  ep-&gt;addr           = 0;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  ep-&gt;type           = <a class="code" href="group__USB__COMMON.htm#ga95b74d966c16ae5fec01e0d6cd26fdac">USB_EPTYPE_CTRL</a>;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  ep-&gt;txFifoNum      = 0;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  ep-&gt;packetSize     = <a class="code" href="group__USB__COMMON.htm#gadf89a62ea2fad945456130a90ebfcc91">USB_EP0_SIZE</a>;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  ep-&gt;remaining      = 0;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  ep-&gt;xferred        = 0;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  ep-&gt;state          = D_EP_IDLE;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  ep-&gt;xferCompleteCb = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  ep-&gt;fifoSize       = <a class="code" href="group__USB__COMMON.htm#gadf89a62ea2fad945456130a90ebfcc91">USB_EP0_SIZE</a> / 4;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  totalTxFifoSize = ep-&gt;fifoSize * p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#adac2ad6ec2b476697054bf4d442d2e61">bufferingMultiplier</a>[ 0 ];</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  totalRxFifoSize = (ep-&gt;fifoSize + 1) * p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#adac2ad6ec2b476697054bf4d442d2e61">bufferingMultiplier</a>[ 0 ];</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  <span class="comment">/* Parse configuration decriptor */</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  numEps = 0;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  numInEps  = 0;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  numOutEps = 0;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  conf = (uint8_t*)dev-&gt;configDescriptor;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  confEnd = conf + dev-&gt;configDescriptor-&gt;wTotalLength;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  txFifoNum = 1;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  #ifdef USB_DEBUG</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="comment">// DEBUG_BUFFER += sprintf(DEBUG_BUFFER,&quot;ep--&gt;\tin\ttype\tpacketSize\r\n&quot;);</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  #endif</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  while ( conf &lt; confEnd )</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  {</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="comment">// USBD_Init(), Illegal configuration descriptor</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (*conf);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">if</span> ( *(conf + 1) == <a class="code" href="group__USB__COMMON.htm#ga01c697098d067b7a297bdaf2e3e2a8a5">USB_ENDPOINT_DESCRIPTOR</a> )</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;      numEps++;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;      epd = (<a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm" title="USB Endpoint Descriptor.">USB_EndpointDescriptor_TypeDef</a>*)conf;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      ep                 = &amp;dev-&gt;ep[ numEps ];</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      ep-&gt;in             = ( epd-&gt;<a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm#a75d10250f7655c93e0425bbeff65b595">bEndpointAddress</a> &amp; <a class="code" href="group__USB__COMMON.htm#gaacee2775597edddc9d4ba5dee2024395">USB_SETUP_DIR_MASK</a> ) != 0;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;      ep-&gt;buf            = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      ep-&gt;addr           = epd-&gt;<a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm#a75d10250f7655c93e0425bbeff65b595">bEndpointAddress</a>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      ep-&gt;num            = ep-&gt;addr &amp; <a class="code" href="group__USB__COMMON.htm#ga06cd3bc995e8bf1d1b4d6958323c98d8">USB_EPNUM_MASK</a>;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      ep-&gt;mask           = 1 &lt;&lt; ep-&gt;num;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      ep-&gt;type           = epd-&gt;<a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm#acd16c673693929a051c5996527c5782a">bmAttributes</a> &amp; <a class="code" href="group__USB__COMMON.htm#ga37edda82028e35831f6b321d57eb6c6c">CONFIG_DESC_BM_TRANSFERTYPE</a>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;      ep-&gt;packetSize     = epd-&gt;<a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm#acbc03e1419bc9b2bc449e8ffff75aac4">wMaxPacketSize</a>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      ep-&gt;remaining      = 0;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      ep-&gt;xferred        = 0;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      ep-&gt;state          = D_EP_IDLE;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      ep-&gt;xferCompleteCb = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      <span class="keywordflow">if</span> ( ep-&gt;in )</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        numInEps++;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        ep-&gt;txFifoNum = txFifoNum++;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        ep-&gt;fifoSize = (ep-&gt;packetSize/4) * p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#adac2ad6ec2b476697054bf4d442d2e61">bufferingMultiplier</a>[ numEps ];</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        dev-&gt;inEpAddr2EpIndex[ ep-&gt;num ] = numEps;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        totalTxFifoSize += ep-&gt;fifoSize;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="comment">// USBD_Init(), Illegal IN EP address</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep-&gt;num &lt; MAX_NUM_IN_EPS);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      }</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        numOutEps++;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        ep-&gt;fifoSize = (ep-&gt;packetSize/4 + 1) * p-&gt;<a class="code" href="structUSBD__Init__TypeDef.htm#adac2ad6ec2b476697054bf4d442d2e61">bufferingMultiplier</a>[ numEps ];</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        dev-&gt;outEpAddr2EpIndex[ ep-&gt;num ] = numEps;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        totalRxFifoSize += ep-&gt;fifoSize;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="comment">// USBD_Init(), Illegal OUT EP address</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep-&gt;num &lt; MAX_NUM_OUT_EPS);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    conf += *conf;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  }</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="comment">/* Rx-FIFO size: SETUP packets : 4*n + 6    n=#CTRL EP&#39;s</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">   *               GOTNAK        : 1</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">   *               Status info   : 2*n        n=#OUT EP&#39;s (EP0 included) in HW</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  totalRxFifoSize += 10 + 1 + ( 2 * (MAX_NUM_OUT_EPS + 1) );</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;  <span class="comment">// USBD_Init(), Illegal EP count</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a>(numEps == NUM_EP_USED);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <span class="comment">// USBD_Init(), Illegal IN EP count</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (numInEps &lt; MAX_NUM_IN_EPS);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  <span class="comment">// USBD_Init(), Illegal OUT EP count</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (numOutEps &lt; MAX_NUM_OUT_EPS);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  DECLARE_INTERRUPT_STATE;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  DISABLE_INTERRUPTS();</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  USBHAL_DisableGlobalInt();</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="keywordflow">if</span> ( USBDHAL_CoreInit( 1, 1 ) == <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a> )</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  {</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    USBDHAL_EnableUsbResetInt();</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    USBHAL_EnableGlobalInt();</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="comment">// NVIC_ClearPendingIRQ( USB_IRQn );</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="comment">// NVIC_EnableIRQ( USB_IRQn );</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;  }</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="comment">//   USBD_Init(), FIFO setup error</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a>(0);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  <span class="comment">/* Enable EPs */</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  uint8_t i;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keywordflow">for</span> (i=1;i&lt;=numEps;i++)</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="preprocessor"></span>    <span class="comment">// DEBUG_BUFFER += sprintf(DEBUG_BUFFER,&quot;EP%d\t%d\t%d\t%d\r\n&quot;,i,ep-&gt;in,ep-&gt;type,ep-&gt;packetSize);</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="preprocessor"></span>    ep = &amp;dev-&gt;ep[ i ];</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">if</span> (ep-&gt;in)</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;      USB_ENABLEIN  |= USB_ENABLEINEP0 &lt;&lt; ep-&gt;num;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      INT_USBCFG    |= INT_USBTXACTIVEEP0 &lt;&lt; ep-&gt;num;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    }</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      USB_ENABLEOUT |= USB_ENABLEOUTEP0 &lt;&lt; ep-&gt;num;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      INT_USBCFG    |= INT_USBRXVALIDEP0 &lt;&lt; ep-&gt;num;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;  <span class="comment">/* Connect USB */</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;  USBDHAL_Connect();</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00549"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee">  549</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee" title="Start a write (IN) transfer on an endpoint.">USBD_Write</a>( <span class="keywordtype">int</span> epAddr, <span class="keywordtype">void</span> *data, <span class="keywordtype">int</span> byteCount,</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <a class="code" href="group__USB__COMMON.htm#ga521fe3060be2a8de6fdd5ee01193958b" title="USB transfer callback function.">USB_XferCompleteCb_TypeDef</a> callback )</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_WRITE</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="preprocessor"></span>  DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Write:%d\r\n&quot;</span>,byteCount);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <span class="keywordflow">if</span> ( ep == <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a> )</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_WRITE</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Write(), Illegal endpoint\r\n&quot;</span>);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="preprocessor"></span>    <span class="comment">// USBD_Write(), Illegal endpoint</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a>( 0 );</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;  <span class="comment">// USBD_Write(), Illegal transfer size</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  <span class="comment">// assert ((byteCount &lt; MAX_XFER_LEN) &amp;&amp; ((byteCount / ep-&gt;packetSize) &lt; MAX_PACKETS_PR_XFER));</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;  <span class="comment">// USBD_Write(), Misaligned data buffer</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="keywordflow">if</span> (data!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;   <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a>(!((uint32_t)data &amp; 3));</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  DECLARE_INTERRUPT_STATE;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  DISABLE_INTERRUPTS();</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;  <span class="keywordflow">if</span> ( USBDHAL_EpIsStalled( ep ) )</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;  {</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="comment">// INT_Enable();</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="comment">// USBD_Write(), Endpoint is halted</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_WRITE</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Write(), Endpoint is halted\r\n&quot;</span> );</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56">USB_STATUS_EP_STALLED</a>;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;  }</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;state != D_EP_IDLE )</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;  {</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_WRITE</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Write(), Endpoint is busy\r\n&quot;</span>);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;ep-&gt;state = %d\r\n&quot;</span>,ep-&gt;state);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176">USB_STATUS_EP_BUSY</a>;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  }</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;  <span class="keywordflow">if</span> ( ( ep-&gt;num &gt; 0 ) &amp;&amp; ( <a class="code" href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f" title="Get current USB device state.">USBD_GetUsbState</a>() != <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a> ) )</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  {</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_WRITE</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Write(), Device not configured\r\n&quot;</span>);</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="preprocessor"></span>    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58">USB_STATUS_DEVICE_UNCONFIGURED</a>;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;  }</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  <span class="comment">//if data is null, this is a zero length packet</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  <span class="keywordflow">if</span> (data == <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  {</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    ep-&gt;buf = <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;  }</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;  {</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    ep-&gt;buf = (uint8_t*)data;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;  }</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;  ep-&gt;remaining = byteCount;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  ep-&gt;xferred   = 0;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;num == 0 )</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  {</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    ep-&gt;in = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  }</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  <span class="comment">// USBD_Write(), Illegal EP direction</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep-&gt;in == <span class="keyword">true</span>);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;  ep-&gt;state          = D_EP_TRANSMITTING;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;  ep-&gt;xferCompleteCb = callback;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;  <span class="comment">// kickoff USB transfer</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;  USBD_ArmEp( ep );</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;  RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;}</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00668"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga9e0a1cf705301d9e035feff27ea41cda">  668</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga9e0a1cf705301d9e035feff27ea41cda" title="Start a read (OUT) transfer on an endpoint.">USBD_Read</a>( <span class="keywordtype">int</span> epAddr, <span class="keywordtype">void</span> *data, <span class="keywordtype">int</span> byteCount,</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;               <a class="code" href="group__USB__COMMON.htm#ga521fe3060be2a8de6fdd5ee01193958b" title="USB transfer callback function.">USB_XferCompleteCb_TypeDef</a> callback )</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;{</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;  USBD_Ep_TypeDef *ep = USBD_GetEpFromAddr( epAddr );</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_READ</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="preprocessor"></span>  DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Read:%X - %d\r\nep-&gt;in=%d\r\n&quot;</span>, epAddr, ep-&gt;num, ep-&gt;in);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (ep!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>);</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  <span class="comment">// assert ((byteCount &lt; MAX_XFER_LEN) &amp;&amp; ((byteCount/ep-&gt;packetSize) &lt; MAX_PACKETS_PR_XFER));</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  <span class="keywordflow">if</span> (data!=<a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a>)</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a> (!((uint32_t)data &amp; 3));</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;  DECLARE_INTERRUPT_STATE;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;  DISABLE_INTERRUPTS();</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;  <span class="comment">//cstat !PTR-null-assign-fun-pos</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;  <span class="keywordflow">if</span> ( USBDHAL_EpIsStalled( ep ) )</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;  {</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_READ</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Read(), Endpoint is halted\r\n&quot;</span> );</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56">USB_STATUS_EP_STALLED</a>;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  }</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;  <span class="comment">// Assert above prevents dereferencing null pointer</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;  <span class="comment">//cstat !PTR-null-cmp-bef !PTR-null-assign-pos</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;state == D_EP_TRANSMITTING )</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;  {</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_READ</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;USBD_Read(), Endpoint is busy\r\n&quot;</span> );</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176">USB_STATUS_EP_BUSY</a>;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  }</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;  <span class="keywordflow">if</span> ( ( ep-&gt;num &gt; 0 ) &amp;&amp; ( <a class="code" href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f" title="Get current USB device state.">USBD_GetUsbState</a>() != <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a> ) )</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;  {</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_READ</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER, <span class="stringliteral">&quot;\nUSBD_Read(), Device not configured&quot;</span> );</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58">USB_STATUS_DEVICE_UNCONFIGURED</a>;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;  }</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  ep-&gt;buf       = (uint8_t*)data;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;  ep-&gt;remaining = byteCount;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;  ep-&gt;xferred   = 0;</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  <span class="keywordflow">if</span> ( ep-&gt;num == 0 )</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;  {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    ep-&gt;in = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;  }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;  <span class="comment">// USBD_Read(), Illegal EP direction</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;  <a class="code" href="group__iar.htm#gacdcc5aaebf3f273c1762f24a6ece2e5e" title="A custom implementation of the C language assert macro. This macro implements the conditional evaluat...">assert</a>(ep-&gt;in == <span class="keyword">false</span>);</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  ep-&gt;state          = D_EP_RECEIVING;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;  ep-&gt;xferCompleteCb = callback;</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;  <span class="comment">// kickoff USB transfer</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;  USBD_ArmEp( ep );</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;  RESTORE_INTERRUPTS();</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;}</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00754"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga0e896f37e57c345c199d6e955b946c15">  754</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#ga0e896f37e57c345c199d6e955b946c15" title="USB suspend delayed service routine.">usbSuspendDsr</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;{</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;  <span class="keywordflow">if</span>(dev-&gt;state == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a>) {</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="preprocessor">    #ifndef EMBER_NO_STACK</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="preprocessor"></span>    emberStackPowerDown();</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="preprocessor">    #endif // EMBER_NO_STACK</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="preprocessor"></span>    <span class="comment">// halPowerDown();</span></div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    halSuspendCallback();</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="comment">//Turn idle sleep into USB sleep which divides down all the chip clocks,</span></div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="comment">//by 4, except system timer.</span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    CPU_CLKSEL |= USBSUSP_CLKSEL_FIELD;</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <a class="code" href="group__micro.htm#ga6d05736655f1a012dc969d1d912e835b" title="Puts the microcontroller to sleep in a specified mode.">halSleep</a>(<a class="code" href="group__micro.htm#ggace58749df14c14b64252eb55f40d2c32a8dec81d54908044ef56016aee3b1b506">SLEEPMODE_IDLE</a>);</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;  }</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;}</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00785"></a><span class="lineno"><a class="code" href="group__USB__DEVICE.htm#ga9fb12718f509c578656e4fc08bc40f69">  785</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="group__USB__DEVICE.htm#ga9fb12718f509c578656e4fc08bc40f69" title="Perform a remote wakeup signalling sequence.">USBD_RemoteWakeup</a>( <span class="keywordtype">void</span> )</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;{</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_SUSPEND</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;RemoteWakeup...&quot;</span>);</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;  <span class="keywordflow">if</span> ( ( dev-&gt;state != <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a> ) ||</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;       ( dev-&gt;remoteWakeupEnabled == <span class="keyword">false</span>  ) )</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;  {</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="comment">// Not suspend or remote wakeup not enabled</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_SUSPEND</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="preprocessor"></span>      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;illegal\r\n&quot;</span>);</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;  }</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;  USBDHAL_SetRemoteWakeup();</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;  uint16_t timeout = 4; <span class="comment">// Set for 4 ms. Host should take over within 1 ms</span></div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;  <span class="comment">//store start time, compare difference with current time with timeout period</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;  uint16_t startTime = <a class="code" href="group__system__timer.htm#gaa4ce0f9db9c950bd2272a9e743e77b2a" title="Returns the current system time in system ticks, as a 16-bit value.">halCommonGetInt16uMillisecondTick</a>();</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;  uint16_t curTime = <a class="code" href="group__system__timer.htm#gaa4ce0f9db9c950bd2272a9e743e77b2a" title="Returns the current system time in system ticks, as a 16-bit value.">halCommonGetInt16uMillisecondTick</a>();</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;  <span class="keywordflow">while</span> ((<a class="code" href="group__platform__common.htm#gab728801c3fb8c18040ae604170773f9e" title="Returns the elapsed time between two 16 bit values. Result may not be valid if the time samples diffe...">elapsedTimeInt16u</a>(startTime, curTime) &lt;= timeout)</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;         &amp;&amp; (dev-&gt;state == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a>)) { <span class="comment">//exit if USB resumes</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    curTime = <a class="code" href="group__system__timer.htm#gaa4ce0f9db9c950bd2272a9e743e77b2a" title="Returns the current system time in system ticks, as a 16-bit value.">halCommonGetInt16uMillisecondTick</a>();</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;  }</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;  <span class="keywordflow">if</span> (dev-&gt;state == <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a>) { <span class="comment">//record failure if USB fails to resume</span></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="preprocessor">    #ifdef USB_DEBUG_SUSPEND</span></div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="preprocessor"></span>      DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;timed out\r\n&quot;</span>);</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a69c65b08dff316759c941351aa70a905">USB_STATUS_TIMEOUT</a>;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;  }</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="preprocessor">  #ifdef USB_DEBUG_SUSPEND</span></div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="preprocessor"></span>    DEBUG_BUFFER += sprintf(DEBUG_BUFFER,<span class="stringliteral">&quot;succeeded\r\n&quot;</span>);</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>;</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment">// DEBUG buffer with printout function, note buffer has no overflow protection</span></div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="preprocessor">#ifdef USB_DEBUG</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="preprocessor"></span><span class="keyword">static</span> <span class="keywordtype">char</span> debugbuffer[4000];</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="keywordtype">char</span> *DEBUG_BUFFER = debugbuffer;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keywordtype">void</span> USBD_PrintDebug(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;{</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;  debugbuffer[3999] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  emberSerialGuaranteedPrintf(SER232,debugbuffer);</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;  <a class="code" href="group__platform__common.htm#gad7795912037ecd3781859d0895f051a8" title="Friendly convenience macro pointing to the C Stdlib functions.">MEMSET</a>(debugbuffer, 0, 4000);</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;  DEBUG_BUFFER = debugbuffer;</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;}</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="preprocessor">#if EM_SERIAL3_ENABLED</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="preprocessor"></span><span class="comment">// interface with serial/uart queues. Enables emberserialprintf</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;uint8_t dequeueTxIntoBuffer(uint8_t *data)</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;{</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;  EmSerialFifoQueue *q = (EmSerialFifoQueue *)emSerialTxQueues[3];</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;  uint8_t txSize=0;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;  <span class="comment">//If there are bytes in the Q and txSize hasn&#39;t maxed out, pull more</span></div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;  <span class="comment">//bytes off the Q into the DMA buffer</span></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;  <span class="keywordflow">while</span>((q-&gt;used &gt; 0) &amp;&amp; (txSize &lt; EP5_SIZE)) {</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    *data = <a class="code" href="group__serial.htm#gaa9ed21755e12d502f03e0fa08618618c" title="Macro that de-queues a byte of data from a FIFO queue.">FIFO_DEQUEUE</a>(q, emSerialTxQueueWraps[3]);</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    data++;</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    txSize++;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;  }</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;  <span class="keywordflow">return</span> txSize;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;}</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="comment">// interface with serial/uart queues. Enables emberSerialPrintf.</span></div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment">// EP_IN must be defined. Assumes EP1 size, 8 bytes, which may be larger</span></div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="comment">// depending on endpoint.</span></div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keywordtype">void</span> <a class="code" href="em__usb_8h.htm#ad49474dc47128a70257cebad8e99a5eb">usbTxData</a> ()</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;{</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f" title="Check if an endpoint is busy doing a transfer.">USBD_EpIsBusy</a>(CDC_EP_IN))</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;  {</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    uint8_t data[EP5_SIZE];</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    uint8_t txSize = dequeueTxIntoBuffer(data);</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordflow">if</span> (txSize&gt;0)</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    {</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;      <a class="code" href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee" title="Start a write (IN) transfer on an endpoint.">USBD_Write</a>(CDC_EP_IN, data, txSize, <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a> );</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    }</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  }</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;}</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment">// interface with serial/uart library. Enables emberSerialGuaranteedPrintf</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="keywordtype">void</span> <a class="code" href="em__usb_8h.htm#a13e133a619141c4be22d126832c963d6">usbForceTxData</a> (uint8_t *data, uint8_t length)</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;{</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;  <span class="keywordflow">while</span> (<a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f" title="Check if an endpoint is busy doing a transfer.">USBD_EpIsBusy</a>(CDC_EP_IN)) {}</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;  <a class="code" href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee" title="Start a write (IN) transfer on an endpoint.">USBD_Write</a>(CDC_EP_IN, data, length, <a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a> );</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;  <span class="keywordflow">while</span> (<a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f" title="Check if an endpoint is busy doing a transfer.">USBD_EpIsBusy</a>(CDC_EP_IN)) {}</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;}</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="preprocessor">#endif //EM_SERIAL3_ENABLED</span></div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;<span class="comment">/******** THE REST OF THE FILE IS DOCUMENTATION ONLY !**********************/</span></div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="preprocessor">#endif //CORTEXM3_EM35X_USB</span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
