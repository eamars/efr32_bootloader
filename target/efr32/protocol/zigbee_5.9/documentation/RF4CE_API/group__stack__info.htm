<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__stack__info.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Stack Information</div>  </div>
<div class="ingroups"><a class="el" href="group__ember__rf4ce.htm">Ember ZigBee RF4CE Stack API Reference</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structEmberEndpointDescription.htm">EmberEndpointDescription</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoint information (a ZigBee Simple Descriptor).  <a href="structEmberEndpointDescription.htm#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structEmberEndpoint.htm">EmberEndpoint</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives the endpoint information for a particular endpoint.  <a href="structEmberEndpoint.htm#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga67722344faf6b73623d39006fdd75e47"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga67722344faf6b73623d39006fdd75e47">EMBER_MAJOR_VERSION</a></td></tr>
<tr class="separator:ga67722344faf6b73623d39006fdd75e47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga721290f3b6b381b90e70870497fedf4a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga721290f3b6b381b90e70870497fedf4a">EMBER_MINOR_VERSION</a></td></tr>
<tr class="separator:ga721290f3b6b381b90e70870497fedf4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94e29d949eab8ad3c62bc0405d035581"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga94e29d949eab8ad3c62bc0405d035581">EMBER_PATCH_VERSION</a></td></tr>
<tr class="separator:ga94e29d949eab8ad3c62bc0405d035581"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2903d49031b7b78584e4c4c60ea82fd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad2903d49031b7b78584e4c4c60ea82fd">EMBER_SPECIAL_VERSION</a></td></tr>
<tr class="separator:gad2903d49031b7b78584e4c4c60ea82fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3a7ed4280ce14df4fae62bc6db3def1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gab3a7ed4280ce14df4fae62bc6db3def1">EMBER_BUILD_NUMBER</a></td></tr>
<tr class="separator:gab3a7ed4280ce14df4fae62bc6db3def1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb23dc37816d5e346e41a1f3492a5b89"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaeb23dc37816d5e346e41a1f3492a5b89">EMBER_FULL_VERSION</a></td></tr>
<tr class="separator:gaeb23dc37816d5e346e41a1f3492a5b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga371990989af594576d3d1d0071583f9a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga371990989af594576d3d1d0071583f9a">EMBER_VERSION_TYPE</a></td></tr>
<tr class="separator:ga371990989af594576d3d1d0071583f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0da03efb4b5b70a36c8d72b0bb213a50"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga0da03efb4b5b70a36c8d72b0bb213a50">SOFTWARE_VERSION</a></td></tr>
<tr class="separator:ga0da03efb4b5b70a36c8d72b0bb213a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaac4a45063264fe1b8de41b02f6c3570f">emberStackStatusHandler</a> (<a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> status)</td></tr>
<tr class="separator:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79b3b8e6f806d28cb8232f87970796c4"><td class="memItemLeft" align="right" valign="top">EmberNetworkStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga79b3b8e6f806d28cb8232f87970796c4">emberNetworkState</a> (void)</td></tr>
<tr class="separator:ga79b3b8e6f806d28cb8232f87970796c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99be01cc2a17d218fe4979cbcf0ea9a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga99be01cc2a17d218fe4979cbcf0ea9a6">emberStackIsUp</a> (void)</td></tr>
<tr class="separator:ga99be01cc2a17d218fe4979cbcf0ea9a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaddede602404ede006c2e7a2315662973"><td class="memItemLeft" align="right" valign="top">EmberEUI64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaddede602404ede006c2e7a2315662973">emberGetEui64</a> (void)</td></tr>
<tr class="separator:gaddede602404ede006c2e7a2315662973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fbbf2e1908fdc715b10af33d86bb955"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3fbbf2e1908fdc715b10af33d86bb955">emberIsLocalEui64</a> (EmberEUI64 eui64)</td></tr>
<tr class="separator:ga3fbbf2e1908fdc715b10af33d86bb955"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0070e7ae7c9f1f5642fdf2c8596c2b45"><td class="memItemLeft" align="right" valign="top">EmberNodeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga0070e7ae7c9f1f5642fdf2c8596c2b45">emberGetNodeId</a> (void)</td></tr>
<tr class="separator:ga0070e7ae7c9f1f5642fdf2c8596c2b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8662255fb70ca28197372642f1af6d02"><td class="memItemLeft" align="right" valign="top">EmberNodeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga8662255fb70ca28197372642f1af6d02">emberRadioGetNodeId</a> (void)</td></tr>
<tr class="separator:ga8662255fb70ca28197372642f1af6d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad462f12d9711102d339716e6b20dcfd0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad462f12d9711102d339716e6b20dcfd0">emberSetManufacturerCode</a> (uint16_t code)</td></tr>
<tr class="separator:gad462f12d9711102d339716e6b20dcfd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05afea032301edc4141ca6301f53d9d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga05afea032301edc4141ca6301f53d9d5">emberSetPowerDescriptor</a> (uint16_t descriptor)</td></tr>
<tr class="separator:ga05afea032301edc4141ca6301f53d9d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga702c8ca04a32101ce02dc3e4b705c9e1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga702c8ca04a32101ce02dc3e4b705c9e1">emberSetMaximumIncomingTransferSize</a> (uint16_t size)</td></tr>
<tr class="separator:ga702c8ca04a32101ce02dc3e4b705c9e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7df31307645a14d6ef00632a392cd9cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga7df31307645a14d6ef00632a392cd9cc">emberSetMaximumOutgoingTransferSize</a> (uint16_t size)</td></tr>
<tr class="separator:ga7df31307645a14d6ef00632a392cd9cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4a5577e83d72e7a74de678d91b2e76f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga4a5577e83d72e7a74de678d91b2e76f5">emberSetDescriptorCapability</a> (uint8_t capability)</td></tr>
<tr class="separator:ga4a5577e83d72e7a74de678d91b2e76f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b7e64e0849e760ab8c7f594c54a3c1b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga2b7e64e0849e760ab8c7f594c54a3c1b">emberGetNetworkParameters</a> (EmberNetworkParameters *parameters)</td></tr>
<tr class="separator:ga2b7e64e0849e760ab8c7f594c54a3c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad80295d98d1dec413d405d94dd290025"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad80295d98d1dec413d405d94dd290025">emberGetNodeType</a> (EmberNodeType *resultLocation)</td></tr>
<tr class="separator:gad80295d98d1dec413d405d94dd290025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0b4f2d07170321aace9b7e3397bf5f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gac0b4f2d07170321aace9b7e3397bf5f3">emberSetRadioChannel</a> (uint8_t channel)</td></tr>
<tr class="separator:gac0b4f2d07170321aace9b7e3397bf5f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga704a7af18cf000d5c76287acf226bdbb"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga704a7af18cf000d5c76287acf226bdbb">emberGetRadioChannel</a> (void)</td></tr>
<tr class="separator:ga704a7af18cf000d5c76287acf226bdbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3522b6c55e505708085de92d36dcc90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaf3522b6c55e505708085de92d36dcc90">emberSetRadioPower</a> (int8_t power)</td></tr>
<tr class="separator:gaf3522b6c55e505708085de92d36dcc90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd1e4636a9ebc47b4920d93d9147c81f"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gacd1e4636a9ebc47b4920d93d9147c81f">emberGetRadioPower</a> (void)</td></tr>
<tr class="separator:gacd1e4636a9ebc47b4920d93d9147c81f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3eb87e0c3d904c2d077aaacde1b60844"><td class="memItemLeft" align="right" valign="top">EmberPanId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3eb87e0c3d904c2d077aaacde1b60844">emberGetPanId</a> (void)</td></tr>
<tr class="separator:ga3eb87e0c3d904c2d077aaacde1b60844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab36ce066012a12ddd57f8a43888fa3f8"><td class="memItemLeft" align="right" valign="top">EmberPanId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gab36ce066012a12ddd57f8a43888fa3f8">emberRadioGetPanId</a> (void)</td></tr>
<tr class="separator:gab36ce066012a12ddd57f8a43888fa3f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e265c3d073776e3ce42c834d37e41b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga5e265c3d073776e3ce42c834d37e41b1">emberGetExtendedPanId</a> (uint8_t *resultLocation)</td></tr>
<tr class="separator:ga5e265c3d073776e3ce42c834d37e41b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga817c784921252a85bb589430f9aed282"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga817c784921252a85bb589430f9aed282">emberGetEndpoint</a> (uint8_t index)</td></tr>
<tr class="separator:ga817c784921252a85bb589430f9aed282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10d78f4c55f385a2c61b3cef620d7425"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga10d78f4c55f385a2c61b3cef620d7425">emberGetEndpointDescription</a> (uint8_t endpoint, <a class="el" href="structEmberEndpointDescription.htm">EmberEndpointDescription</a> *result)</td></tr>
<tr class="separator:ga10d78f4c55f385a2c61b3cef620d7425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga029793a3c6502a8b0e8ceaf710c80536"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga029793a3c6502a8b0e8ceaf710c80536">emberGetEndpointCluster</a> (uint8_t endpoint, EmberClusterListId listId, uint8_t listIndex)</td></tr>
<tr class="separator:ga029793a3c6502a8b0e8ceaf710c80536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga634754c88494814dd0c0e1a71a69d4f5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga634754c88494814dd0c0e1a71a69d4f5">emberIsNodeIdValid</a> (EmberNodeId nodeId)</td></tr>
<tr class="separator:ga634754c88494814dd0c0e1a71a69d4f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac181ef1cc5374cedae3f9bb78e8d105f"><td class="memItemLeft" align="right" valign="top">EmberNodeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gac181ef1cc5374cedae3f9bb78e8d105f">emberLookupNodeIdByEui64</a> (EmberEUI64 eui64)</td></tr>
<tr class="separator:gac181ef1cc5374cedae3f9bb78e8d105f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5dbcdc1778dca355ad1e2e74b1c2da01"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga5dbcdc1778dca355ad1e2e74b1c2da01">emberLookupEui64ByNodeId</a> (EmberNodeId nodeId, EmberEUI64 eui64Return)</td></tr>
<tr class="separator:ga5dbcdc1778dca355ad1e2e74b1c2da01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacccabdbc4c84f6a3997dd060f6132dfa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gacccabdbc4c84f6a3997dd060f6132dfa">emberCounterHandler</a> (EmberCounterType type, uint8_t data)</td></tr>
<tr class="separator:gacccabdbc4c84f6a3997dd060f6132dfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ddaad09a511d721c12b18460d070adb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga6ddaad09a511d721c12b18460d070adb">emberStackTokenChangedHandler</a> (uint16_t tokenAddress)</td></tr>
<tr class="separator:ga6ddaad09a511d721c12b18460d070adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d80fd575e35ae22a6ec6e26f9b4ba07"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga2d80fd575e35ae22a6ec6e26f9b4ba07">emberRtosIdleHandler</a> (uint32_t *idleTimeMs)</td></tr>
<tr class="separator:ga2d80fd575e35ae22a6ec6e26f9b4ba07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga739cc327ee8ebaeb0585451085b72eaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga739cc327ee8ebaeb0585451085b72eaf">emberRtosStackWakeupIsrHandler</a> (void)</td></tr>
<tr class="separator:ga739cc327ee8ebaeb0585451085b72eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7dc3030a1f008cc75ecb772159e0828"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gab7dc3030a1f008cc75ecb772159e0828">emberGetNeighbor</a> (uint8_t index, EmberNeighborTableEntry *result)</td></tr>
<tr class="separator:gab7dc3030a1f008cc75ecb772159e0828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad56949ec48dfe6592794101571d33619"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad56949ec48dfe6592794101571d33619">emberGetRouteTableEntry</a> (uint8_t index, EmberRouteTableEntry *result)</td></tr>
<tr class="separator:gad56949ec48dfe6592794101571d33619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3ea381bad65ba1e2da36bb21b3dd284"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad3ea381bad65ba1e2da36bb21b3dd284">emberStackProfile</a> (void)</td></tr>
<tr class="separator:gad3ea381bad65ba1e2da36bb21b3dd284"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad854fee601b059e5a54edc870d8b6840"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad854fee601b059e5a54edc870d8b6840">emberTreeDepth</a> (void)</td></tr>
<tr class="separator:gad854fee601b059e5a54edc870d8b6840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68a393e8c045b9dba2a0e67afaff8acb"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga68a393e8c045b9dba2a0e67afaff8acb">emberNeighborCount</a> (void)</td></tr>
<tr class="separator:ga68a393e8c045b9dba2a0e67afaff8acb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga878c657111bdf4d1eacb93326358f1eb"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga878c657111bdf4d1eacb93326358f1eb">emberRouteTableSize</a> (void)</td></tr>
<tr class="separator:ga878c657111bdf4d1eacb93326358f1eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a64574a01006e5ac8042ec6e620aac7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga6a64574a01006e5ac8042ec6e620aac7">emberNextZigbeeSequenceNumber</a> (void)</td></tr>
<tr class="separator:ga6a64574a01006e5ac8042ec6e620aac7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga0d1cff99f42d0e083a9be708e52c00c8"><td class="memItemLeft" align="right" valign="top">PGM uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga0d1cff99f42d0e083a9be708e52c00c8">emberStackProfileId</a> []</td></tr>
<tr class="separator:ga0d1cff99f42d0e083a9be708e52c00c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f96eb82b228b665be0bba3e401dd53c"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga5f96eb82b228b665be0bba3e401dd53c">emberEndpointCount</a></td></tr>
<tr class="separator:ga5f96eb82b228b665be0bba3e401dd53c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga285d6ad4564ab624915479c4d801b414"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structEmberEndpoint.htm">EmberEndpoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga285d6ad4564ab624915479c4d801b414">emberEndpoints</a> []</td></tr>
<tr class="separator:ga285d6ad4564ab624915479c4d801b414"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Radio-specific Functions</h2></td></tr>
<tr class="memitem:ga3fae59632845191f7e032faf5f8e9b51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3fae59632845191f7e032faf5f8e9b51">emberSetTxPowerMode</a> (uint16_t txPowerMode)</td></tr>
<tr class="separator:ga3fae59632845191f7e032faf5f8e9b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b29c70339992e1cdeff3d5953150696"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3b29c70339992e1cdeff3d5953150696">emberGetTxPowerMode</a> (void)</td></tr>
<tr class="separator:ga3b29c70339992e1cdeff3d5953150696"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d7582c490fd8105dddccbb5e31f2a8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga5d7582c490fd8105dddccbb5e31f2a8a">emberSetNodeId</a> (EmberNodeId nodeId)</td></tr>
<tr class="separator:ga5d7582c490fd8105dddccbb5e31f2a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81602c711b132feefd4332b03bfe6924"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga81602c711b132feefd4332b03bfe6924">emberRadioNeedsCalibratingHandler</a> (void)</td></tr>
<tr class="separator:ga81602c711b132feefd4332b03bfe6924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44b8ccea75771c4e4895d6c2ff7e2d5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga44b8ccea75771c4e4895d6c2ff7e2d5e">emberCalibrateCurrentChannel</a> (void)</td></tr>
<tr class="separator:ga44b8ccea75771c4e4895d6c2ff7e2d5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>See also <a class="el" href="config_8h.htm">config.h</a>.</p>
<p>This documentation was produced from the following software release and build. </p>
<table  border="1">
<tr>
<td>SOFTWARE_VERSION</td><td>0x4700</td><td>High byte = release number, low byte = patch number </td></tr>
</table>
<p>See <a class="el" href="stack-info_8h.htm" title="EmberZNet API for accessing and setting stack information. See Stack Information for documentation...">stack-info.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga67722344faf6b73623d39006fdd75e47"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_MAJOR_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00019">19</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga721290f3b6b381b90e70870497fedf4a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_MINOR_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00020">20</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga94e29d949eab8ad3c62bc0405d035581"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_PATCH_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00021">21</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="gad2903d49031b7b78584e4c4c60ea82fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_SPECIAL_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00022">22</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab3a7ed4280ce14df4fae62bc6db3def1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_BUILD_NUMBER</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00025">25</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaeb23dc37816d5e346e41a1f3492a5b89"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_FULL_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00026">26</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga371990989af594576d3d1d0071583f9a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_VERSION_TYPE</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="config_8h_source.htm#l00031">31</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga0da03efb4b5b70a36c8d72b0bb213a50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SOFTWARE_VERSION</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Software version. High byte = release number, low byte = patch number. </p>

<p>Definition at line <a class="el" href="config_8h_source.htm#l00036">36</a> of file <a class="el" href="config_8h_source.htm">config.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaac4a45063264fe1b8de41b02f6c3570f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackStatusHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked when the status of the stack changes. If the status parameter equals <a class="el" href="group__status__codes.htm#gae94efecd4265d484f7b01e56cce08356" title="The stack software has completed initialization and is ready to send and receive packets over the air...">EMBER_NETWORK_UP</a>, then the <a class="el" href="group__stack__info.htm#ga2b7e64e0849e760ab8c7f594c54a3c1b" title="Copies the current network parameters into the structure provided by the caller.">emberGetNetworkParameters()</a> function can be called to obtain the new network parameters. If any of the parameters are being stored in nonvolatile memory by the application, the stored values should be updated. </p>
<p>The application is free to begin messaging once it receives the <a class="el" href="group__status__codes.htm#gae94efecd4265d484f7b01e56cce08356" title="The stack software has completed initialization and is ready to send and receive packets over the air...">EMBER_NETWORK_UP</a> status. However, routes discovered immediately after the stack comes up may be suboptimal. This is because the routes are based on the neighbor table's information about two-way links with neighboring nodes, which is obtained from periodic ZigBee Link Status messages. It can take two or three link status exchange periods (of 16 seconds each) before the neighbor table has a good estimate of link quality to neighboring nodes. Therefore, the application may improve the quality of initially discovered routes by waiting after startup to give the neighbor table time to be populated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">status</td><td>Stack status. One of the following:<ul>
<li><a class="el" href="group__status__codes.htm#gae94efecd4265d484f7b01e56cce08356" title="The stack software has completed initialization and is ready to send and receive packets over the air...">EMBER_NETWORK_UP</a></li>
<li><a class="el" href="group__status__codes.htm#gadf8c20e0884530dcb19bd659378efd79" title="The network is not operating.">EMBER_NETWORK_DOWN</a></li>
<li><a class="el" href="group__status__codes.htm#ga32e6f68e6013827c3f426a17d92e2015" title="An attempt to join a network failed.">EMBER_JOIN_FAILED</a></li>
<li><a class="el" href="group__status__codes.htm#ga11c3ec3388ae7cc407545e654947c935" title="After moving, a mobile node&#39;s attempt to re-establish contact with the network failed.">EMBER_MOVE_FAILED</a></li>
<li><a class="el" href="group__status__codes.htm#gae0dfc750a76e1996e963dda59729be68" title="An attempt to join as a router failed due to a ZigBee versus ZigBee Pro incompatibility. ZigBee devices joining ZigBee Pro networks (or vice versa) must join as End Devices, not Routers.">EMBER_CANNOT_JOIN_AS_ROUTER</a></li>
<li><a class="el" href="group__status__codes.htm#ga6c1d49de7fbf18110b7176aa121e7268" title="The local node ID has changed. The application can obtain the new node ID by calling emberGetNodeId()...">EMBER_NODE_ID_CHANGED</a></li>
<li><a class="el" href="group__status__codes.htm#ga35dab0ab987c2ef84390f1fef8b13f71" title="The local PAN ID has changed. The application can obtain the new PAN ID by calling emberGetPanId()...">EMBER_PAN_ID_CHANGED</a></li>
<li><a class="el" href="group__status__codes.htm#ga59c5655bc09b28608695e214a2ce3e8a" title="The channel has changed.">EMBER_CHANNEL_CHANGED</a></li>
<li><a class="el" href="group__status__codes.htm#ga07732016572fd7a279ce33424af1a010" title="An attempt to join or rejoin the network failed because no router beacons could be heard by the joini...">EMBER_NO_BEACONS</a></li>
<li><a class="el" href="group__status__codes.htm#ga0bd0903cb4b1bb18b9776054dc972286" title="An attempt was made to join a Secured Network using a pre-configured key, but the Trust Center sent b...">EMBER_RECEIVED_KEY_IN_THE_CLEAR</a></li>
<li><a class="el" href="group__status__codes.htm#gada4c6b8ca26c013305207488310079eb" title="An attempt was made to join a Secured Network, but the device did not receive a Network Key...">EMBER_NO_NETWORK_KEY_RECEIVED</a></li>
<li><a class="el" href="group__status__codes.htm#gade57ded18a03caef55e31d04b09ccbdb" title="After a device joined a Secured Network, a Link Key was requested (::EMBER_GET_LINK_KEY_WHEN_JOINING)...">EMBER_NO_LINK_KEY_RECEIVED</a></li>
<li><a class="el" href="group__status__codes.htm#gad297080e4a535e7285e3882604990da2" title="An attempt was made to join a Secured Network without a pre-configured key, but the Trust Center sent...">EMBER_PRECONFIGURED_KEY_REQUIRED</a> </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga79b3b8e6f806d28cb8232f87970796c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberNetworkStatus emberNetworkState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current join status. </p>
<p>Returns a value indicating whether the node is joining, joined to, or leaving a network.</p>
<dl class="section return"><dt>Returns</dt><dd>An ::EmberNetworkStatus value indicating the current join status. </dd></dl>

</div>
</div>
<a class="anchor" id="ga99be01cc2a17d218fe4979cbcf0ea9a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberStackIsUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack is currently up. </p>
<p>Returns true if the stack is joined to a network and ready to send and receive messages. This reflects only the state of the local node; it does not indicate whether or not other nodes are able to communicate with this node.</p>
<dl class="section return"><dt>Returns</dt><dd>True if the stack is up, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gaddede602404ede006c2e7a2315662973"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberEUI64 emberGetEui64 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the EUI64 ID of the local node. </p>
<dl class="section return"><dt>Returns</dt><dd>The 64-bit ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3fbbf2e1908fdc715b10af33d86bb955"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberIsLocalEui64 </td>
          <td>(</td>
          <td class="paramtype">EmberEUI64&#160;</td>
          <td class="paramname"><em>eui64</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines whether <code>eui64</code> is the local node's EUI64 ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eui64</td><td>An EUI64 ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if <code>eui64</code> is the local node's ID, otherwise false. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0070e7ae7c9f1f5642fdf2c8596c2b45"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberNodeId emberGetNodeId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the 16-bit node ID of local node on the current logical network. </p>
<dl class="section return"><dt>Returns</dt><dd>The 16-bit ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8662255fb70ca28197372642f1af6d02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberNodeId emberRadioGetNodeId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the 16-bit node ID of local node on the network it is currently tuned on. </p>
<dl class="section return"><dt>Returns</dt><dd>The 16-bit ID. </dd></dl>

</div>
</div>
<a class="anchor" id="gad462f12d9711102d339716e6b20dcfd0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetManufacturerCode </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the manufacturer code to the specified value. The manufacturer code is one of the fields of the node descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">code</td><td>The manufacturer code for the local node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga05afea032301edc4141ca6301f53d9d5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetPowerDescriptor </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>descriptor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the power descriptor to the specified value. The power descriptor is a dynamic value, therefore you should call this function whenever the value changes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">descriptor</td><td>The new power descriptor for the local node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga702c8ca04a32101ce02dc3e4b705c9e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetMaximumIncomingTransferSize </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the maximum incoming transfer size to the specified value. The maximum incoming transfer size is one of the fields of the node descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>The maximum incoming transfer size for the local node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga7df31307645a14d6ef00632a392cd9cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetMaximumOutgoingTransferSize </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the maximum outgoing transfer size to the specified value. The maximum outgoing transfer size is one of the fields of the node descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>The maximum outgoing transfer size for the local node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4a5577e83d72e7a74de678d91b2e76f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetDescriptorCapability </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>capability</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the descriptor capability field of the node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">capability</td><td>The descriptor capability of the local node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2b7e64e0849e760ab8c7f594c54a3c1b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetNetworkParameters </td>
          <td>(</td>
          <td class="paramtype">EmberNetworkParameters *&#160;</td>
          <td class="paramname"><em>parameters</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the current network parameters into the structure provided by the caller. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>A pointer to an EmberNetworkParameters value into which the current network parameters will be copied.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating the success or failure of the command. </dd></dl>

</div>
</div>
<a class="anchor" id="gad80295d98d1dec413d405d94dd290025"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetNodeType </td>
          <td>(</td>
          <td class="paramtype">EmberNodeType *&#160;</td>
          <td class="paramname"><em>resultLocation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the current node type into the location provided by the caller. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">resultLocation</td><td>A pointer to an EmberNodeType value into which the current node type will be copied.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value that indicates the success or failure of the command. </dd></dl>

</div>
</div>
<a class="anchor" id="gac0b4f2d07170321aace9b7e3397bf5f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetRadioChannel </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>channel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the channel to use for sending and receiving messages on the current logical network. For a list of available radio channels, see the technical specification for the RF communication module in your Developer Kit. </p>
<p>Note: Care should be taken when using this API, as all devices on a network must use the same channel.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">channel</td><td>Desired radio channel.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating the success or failure of the command. </dd></dl>

</div>
</div>
<a class="anchor" id="ga704a7af18cf000d5c76287acf226bdbb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberGetRadioChannel </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the radio channel to which a node is set on the current logical network. The possible return values depend on the radio in use. For a list of available radio channels, see the technical specification for the RF communication module in your Developer Kit. </p>
<dl class="section return"><dt>Returns</dt><dd>Current radio channel. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf3522b6c55e505708085de92d36dcc90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetRadioPower </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the radio output power at which a node is to operate for the current logical network. Ember radios have discrete power settings. For a list of available power settings, see the technical specification for the RF communication module in your Developer Kit. Note: Care should be taken when using this API on a running network, as it will directly impact the established link qualities neighboring nodes have with the node on which it is called. This can lead to disruption of existing routes and erratic network behavior. Note: If the requested power level is not available on a given radio, this function will use the next higher available power level. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">power</td><td>Desired radio output power, in dBm.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating the success or failure of the command. Failure indicates that the requested power level is out of range. </dd></dl>

</div>
</div>
<a class="anchor" id="gacd1e4636a9ebc47b4920d93d9147c81f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8_t emberGetRadioPower </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the radio output power of the current logical network at which a node is operating. Ember radios have discrete power settings. For a list of available power settings, see the technical specification for the RF communication module in your Developer Kit. </p>
<dl class="section return"><dt>Returns</dt><dd>Current radio output power, in dBm. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3eb87e0c3d904c2d077aaacde1b60844"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberPanId emberGetPanId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the local node's PAN ID of the current logical network. </p>
<dl class="section return"><dt>Returns</dt><dd>A PAN ID. </dd></dl>

</div>
</div>
<a class="anchor" id="gab36ce066012a12ddd57f8a43888fa3f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberPanId emberRadioGetPanId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the local node's PAN ID of the current radio network. </p>
<dl class="section return"><dt>Returns</dt><dd>A PAN ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5e265c3d073776e3ce42c834d37e41b1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberGetExtendedPanId </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>resultLocation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fetches a node's 8 byte Extended PAN identifier. If this is called when a device is not currently on a network (see <a class="el" href="group__stack__info.htm#ga79b3b8e6f806d28cb8232f87970796c4" title="Returns the current join status.">emberNetworkState</a>), then the Extended PAN ID returned will be an invalid value. </p>

</div>
</div>
<a class="anchor" id="ga817c784921252a85bb589430f9aed282"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberGetEndpoint </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the endpoint number for the index'th endpoint. <code> index </code> must be less than the value of emberEndpointCount. </p>
<p>This function is provided by the stack, using the data from emberEndpoints, unless the application defines EMBER_APPLICATION_HAS_GET_ENDPOINT in its CONFIGURATION_HEADER.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of an endpoint (as distinct from its endpoint number). This must be less than the value of emberEndpointCount.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The endpoint number for the index'th endpoint. </dd></dl>

</div>
</div>
<a class="anchor" id="ga10d78f4c55f385a2c61b3cef620d7425"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberGetEndpointDescription </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberEndpointDescription.htm">EmberEndpointDescription</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the endpoint description for the given endpoint. </p>
<p>This function is provided by the stack, using the data from emberEndpoints, unless the application defines ::EMBER_APPLICATION_HAS_GET_ENDPOINT in its ::CONFIGURATION_HEADER.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpoint</td><td>The endpoint whose description is to be returned.</td></tr>
    <tr><td class="paramname">result</td><td>A pointer to the location to which to copy the endpoint description.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the description was copied to result or false if the endpoint is not active. </dd></dl>

</div>
</div>
<a class="anchor" id="ga029793a3c6502a8b0e8ceaf710c80536"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t emberGetEndpointCluster </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EmberClusterListId&#160;</td>
          <td class="paramname"><em>listId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>listIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves a cluster ID from one of the cluster lists associated with the given endpoint. </p>
<p>This function is provided by the stack, using the data from emberEndpoints, unless the application defines ::EMBER_APPLICATION_HAS_GET_ENDPOINT in its CONFIGURATION_HEADER.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">endpoint</td><td>The endpoint from which the cluster ID is to be read.</td></tr>
    <tr><td class="paramname">listId</td><td>The list from which the cluster ID is to be read.</td></tr>
    <tr><td class="paramname">listIndex</td><td>The index of the desired cluster ID in the list. This value must be less than the length of the list. The length can be found in the <a class="el" href="structEmberEndpointDescription.htm" title="Endpoint information (a ZigBee Simple Descriptor).">EmberEndpointDescription</a> for this endpoint.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The cluster ID at position listIndex in the specified endpoint cluster list. </dd></dl>

</div>
</div>
<a class="anchor" id="ga634754c88494814dd0c0e1a71a69d4f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberIsNodeIdValid </td>
          <td>(</td>
          <td class="paramtype">EmberNodeId&#160;</td>
          <td class="paramname"><em>nodeId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines whether <code>nodeId</code> is valid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nodeId</td><td>A node ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if <code>nodeId</code> is valid, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gac181ef1cc5374cedae3f9bb78e8d105f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EmberNodeId emberLookupNodeIdByEui64 </td>
          <td>(</td>
          <td class="paramtype">EmberEUI64&#160;</td>
          <td class="paramname"><em>eui64</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the node ID that corresponds to the specified EUI64. The node ID is found by searching through all stack tables for the specified EUI64. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eui64</td><td>The EUI64 of the node to look up.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The short ID of the node or ::EMBER_NULL_NODE_ID if the short ID is not known. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5dbcdc1778dca355ad1e2e74b1c2da01"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberLookupEui64ByNodeId </td>
          <td>(</td>
          <td class="paramtype">EmberNodeId&#160;</td>
          <td class="paramname"><em>nodeId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EmberEUI64&#160;</td>
          <td class="paramname"><em>eui64Return</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the EUI64 that corresponds to the specified node ID. The EUI64 is found by searching through all stack tables for the specified node ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nodeId</td><td>The short ID of the node to look up.</td></tr>
    <tr><td class="paramname">eui64Return</td><td>The EUI64 of the node is copied here if it is known.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value:<br/>
<br/>
<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> - eui64Return has been set to the EUI64 of the node.</li>
<li><a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> - The EUI64 of the node is not known. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gacccabdbc4c84f6a3997dd060f6132dfa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCounterHandler </td>
          <td>(</td>
          <td class="paramtype">EmberCounterType&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked to inform the application of the occurrence of an event defined by ::EmberCounterType, for example, transmissions and receptions at different layers of the stack. </p>
<p>The application must define ::EMBER_APPLICATION_HAS_COUNTER_HANDLER in its CONFIGURATION_HEADER to use this. This function may be called in ISR context, so processing should be kept to a minimum.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of the event. </td></tr>
    <tr><td class="paramname">data</td><td>For transmission events, the number of retries used. For other events, this parameter is unused and is set to zero. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6ddaad09a511d721c12b18460d070adb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackTokenChangedHandler </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>tokenAddress</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked to inform the application that a stack token has changed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tokenAddress</td><td>The address of the stack token that has changed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2d80fd575e35ae22a6ec6e26f9b4ba07"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberRtosIdleHandler </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>idleTimeMs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback to allow the application to manage idling the MCU. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idleTimeMs</td><td>The time in millisecond the stack is allowed to idle.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the application is managing idling the MCU, false otherise. If this function returns false, the stack will manage idling the MCU. </dd></dl>

</div>
</div>
<a class="anchor" id="ga739cc327ee8ebaeb0585451085b72eaf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberRtosStackWakeupIsrHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback to request the application to wake up the stack task. </p>

</div>
</div>
<a class="anchor" id="gab7dc3030a1f008cc75ecb772159e0828"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetNeighbor </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EmberNeighborTableEntry *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies a neighbor table entry to the structure that <code>result</code> points to. Neighbor table entries are stored in ascending order by node id, with all unused entries at the end of the table. The number of active neighbors can be obtained using <a class="el" href="group__stack__info.htm#ga68a393e8c045b9dba2a0e67afaff8acb" title="Returns the number of active entries in the neighbor table.">emberNeighborCount()</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of a neighbor table entry.</td></tr>
    <tr><td class="paramname">result</td><td>A pointer to the location to which to copy the neighbor table entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> if the index is greater or equal to the number of active neighbors, or if the device is an end device. Returns <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gad56949ec48dfe6592794101571d33619"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetRouteTableEntry </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EmberRouteTableEntry *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies a route table entry to the structure that <code>result</code> points to. Unused route table entries have destination 0xFFFF. The route table size can be obtained via <a class="el" href="group__stack__info.htm#ga878c657111bdf4d1eacb93326358f1eb" title="Returns the size of the route table.">emberRouteTableSize()</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of a route table entry.</td></tr>
    <tr><td class="paramname">result</td><td>A pointer to the location to which to copy the route table entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> if the index is out of range or the device is an end device, and <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gad3ea381bad65ba1e2da36bb21b3dd284"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberStackProfile </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the stack profile of the network which the node has joined. </p>
<dl class="section return"><dt>Returns</dt><dd>stack profile </dd></dl>

</div>
</div>
<a class="anchor" id="gad854fee601b059e5a54edc870d8b6840"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberTreeDepth </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the depth of the node in the network. </p>
<dl class="section return"><dt>Returns</dt><dd>current depth </dd></dl>

</div>
</div>
<a class="anchor" id="ga68a393e8c045b9dba2a0e67afaff8acb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberNeighborCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of active entries in the neighbor table. </p>
<dl class="section return"><dt>Returns</dt><dd>number of active entries in the neighbor table </dd></dl>

</div>
</div>
<a class="anchor" id="ga878c657111bdf4d1eacb93326358f1eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberRouteTableSize </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the size of the route table. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the route table </dd></dl>

</div>
</div>
<a class="anchor" id="ga6a64574a01006e5ac8042ec6e620aac7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberNextZigbeeSequenceNumber </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Increments and returns the ZigBee sequence number. </p>
<dl class="section return"><dt>Returns</dt><dd>the next ZigBee sequence number </dd></dl>

</div>
</div>
<a class="anchor" id="ga3fae59632845191f7e032faf5f8e9b51"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetTxPowerMode </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>txPowerMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables boost power mode and/or the alternate transmit path. </p>
<p>Boost power mode is a high performance radio mode which offers increased transmit power and receive sensitivity at the cost of an increase in power consumption. The alternate transmit output path allows for simplified connection to an external power amplifier via the RF_TX_ALT_P and RF_TX_ALT_N pins on the em250. ::emberInit() calls this function using the power mode and transmitter output settings as specified in the MFG_PHY_CONFIG token (with each bit inverted so that the default token value of 0xffff corresponds to normal power mode and bi-directional RF transmitter output). The application only needs to call <a class="el" href="group__stack__info.htm#ga3fae59632845191f7e032faf5f8e9b51" title="Enables boost power mode and/or the alternate transmit path.">emberSetTxPowerMode()</a> if it wishes to use a power mode or transmitter output setting different from that specified in the MFG_PHY_CONFIG token. After this initial call to <a class="el" href="group__stack__info.htm#ga3fae59632845191f7e032faf5f8e9b51" title="Enables boost power mode and/or the alternate transmit path.">emberSetTxPowerMode()</a>, the stack will automatically maintain the specified power mode configuration across sleep/wake cycles.</p>
<dl class="section note"><dt>Note</dt><dd>This function does not alter the MFG_PHY_CONFIG token. The MFG_PHY_CONFIG token must be properly configured to ensure optimal radio performance when the standalone bootloader runs in recovery mode. The MFG_PHY_CONFIG can only be set using external tools. IF YOUR PRODUCT USES BOOST MODE OR THE ALTERNATE TRANSMITTER OUTPUT AND THE STANDALONE BOOTLOADER YOU MUST SET THE PHY_CONFIG TOKEN INSTEAD OF USING THIS FUNCTION. Contact <a href="#" onclick="location.href='mai'+'lto:'+'sup'+'po'+'rt@'+'em'+'ber'+'.c'+'om'; return false;">suppo<span style="display: none;">.nosp@m.</span>rt@e<span style="display: none;">.nosp@m.</span>mber.<span style="display: none;">.nosp@m.</span>com</a> for instructions on how to set the MFG_PHY_CONFIG token appropriately.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">txPowerMode</td><td>Specifies which of the transmit power mode options are to be activated. This parameter should be set to one of the literal values described in stack/include/ember-types.h. Any power option not specified in the txPowerMode parameter will be deactivated.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if successful; an error code otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3b29c70339992e1cdeff3d5953150696"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t emberGetTxPowerMode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current configuration of boost power mode and alternate transmitter output. </p>
<dl class="section return"><dt>Returns</dt><dd>the current tx power mode. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5d7582c490fd8105dddccbb5e31f2a8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetNodeId </td>
          <td>(</td>
          <td class="paramtype">EmberNodeId&#160;</td>
          <td class="paramname"><em>nodeId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>It allows to set the short node ID of the node. Notice that it can only be set if the stack is in the INITAL state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nodeId</td><td>Specifies the short ID to be assigned to the node.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if successful; an error code otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga81602c711b132feefd4332b03bfe6924"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberRadioNeedsCalibratingHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The radio calibration callback function. </p>
<p>The Voltage Controlled Oscillator (VCO) can drift with temperature changes. During every call to ::emberTick(), the stack will check to see if the VCO has drifted. If the VCO has drifted, the stack will call <a class="el" href="group__stack__info.htm#ga81602c711b132feefd4332b03bfe6924" title="The radio calibration callback function.">emberRadioNeedsCalibratingHandler()</a> to inform the application that it should perform calibration of the current channel as soon as possible. Calibration can take up to 150ms. The default callback function implementation provided here performs calibration immediately. If the application wishes, it can define its own callback by defining ::EMBER_APPLICATION_HAS_CUSTOM_RADIO_CALIBRATION_CALLBACK in its CONFIGURATION_HEADER. It can then failsafe any critical processes or peripherals before calling <a class="el" href="group__stack__info.htm#ga44b8ccea75771c4e4895d6c2ff7e2d5e" title="Calibrates the current channel. The stack will notify the application of the need for channel calibra...">emberCalibrateCurrentChannel()</a>. The application must call <a class="el" href="group__stack__info.htm#ga44b8ccea75771c4e4895d6c2ff7e2d5e" title="Calibrates the current channel. The stack will notify the application of the need for channel calibra...">emberCalibrateCurrentChannel()</a> in response to this callback to maintain expected radio performance. </p>

</div>
</div>
<a class="anchor" id="ga44b8ccea75771c4e4895d6c2ff7e2d5e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCalibrateCurrentChannel </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calibrates the current channel. The stack will notify the application of the need for channel calibration via the <a class="el" href="group__stack__info.htm#ga81602c711b132feefd4332b03bfe6924" title="The radio calibration callback function.">emberRadioNeedsCalibratingHandler()</a> callback function during ::emberTick(). This function should only be called from within the context of the <a class="el" href="group__stack__info.htm#ga81602c711b132feefd4332b03bfe6924" title="The radio calibration callback function.">emberRadioNeedsCalibratingHandler()</a> callback function. Calibration can take up to 150ms. Note if this function is called when the radio is off, it will turn the radio on and leave it on. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="ga0d1cff99f42d0e083a9be708e52c00c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PGM uint8_t emberStackProfileId[]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The application must provide a definition for this variable. </p>

</div>
</div>
<a class="anchor" id="ga5f96eb82b228b665be0bba3e401dd53c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberEndpointCount</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The application must provide a definition for this variable. </p>

</div>
</div>
<a class="anchor" id="ga285d6ad4564ab624915479c4d801b414"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structEmberEndpoint.htm">EmberEndpoint</a> emberEndpoints[]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If emberEndpointCount is nonzero, the application must provide descriptions for each endpoint. </p>
<p>This can be done either by providing a definition of emberEndpoints or by providing definitions of <a class="el" href="group__stack__info.htm#ga817c784921252a85bb589430f9aed282" title="Retrieves the endpoint number for the index&#39;th endpoint.  index  must be less than the value of ember...">emberGetEndpoint()</a>, <a class="el" href="group__stack__info.htm#ga10d78f4c55f385a2c61b3cef620d7425" title="Retrieves the endpoint description for the given endpoint.">emberGetEndpointDescription()</a> and <a class="el" href="group__stack__info.htm#ga029793a3c6502a8b0e8ceaf710c80536" title="Retrieves a cluster ID from one of the cluster lists associated with the given endpoint.">emberGetEndpointCluster()</a>. Using the array is often simpler, but consumes large amounts of memory if emberEndpointCount is large.</p>
<p>If the application provides definitions for the three functions, it must define EMBER_APPLICATION_HAS_GET_ENDPOINT in its CONFIGURATION_HEADER. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
