<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('event_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">event.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="event_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#ifdef EZSP_HOST</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor"></span>  <span class="comment">// Hosts do not support processor idling</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">  #define EMBER_NO_IDLE_SUPPORT</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">// Controlling events</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">// Possible event status values.  Having zero as the &#39;inactive&#39; value</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">// causes events to initially be inactive.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#ifndef __EVENT_H__</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="group__event.htm#ga3f7e34a400a7bcf19b89a84bfa472341">  125</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __EVENT_H__</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="group__event.htm#ga9764d829050abac40ea539ae562bb737">  129</a></span>&#160;<span class="preprocessor">#define emberEventControlSetInactive(control)    \</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">  do { (control).status = EMBER_EVENT_INACTIVE; } while(0)</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="group__event.htm#ga938b500c98f94e0ab786a17d7ac4bb70">  134</a></span>&#160;<span class="preprocessor">#define emberEventControlGetActive(control)      \</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">  ((control).status != EMBER_EVENT_INACTIVE)</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="group__event.htm#ga5ef5dfd98efd8145d725eb23bfa536b1">  140</a></span>&#160;<span class="preprocessor">#define emberEventControlSetActive(control)               \</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">  do { emEventControlSetActive(&amp;(control)); } while(0)</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga56e2fc7169795d5aaef49b4806a5d2f9" title="Sets this EmberEventControl to run at the next available opportunity.">emEventControlSetActive</a>(<a class="code" href="structEmberEventControl.htm" title="Control structure for events.">EmberEventControl</a> *event);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="code" href="group__event.htm#gac1d415796017a64597148fda27dc6e96">  151</a></span>&#160;<span class="preprocessor">#define EMBER_MAX_EVENT_CONTROL_DELAY_MS (HALF_MAX_INT32U_VALUE - 1)</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="group__event.htm#ga2bf80e03518490122929a73cf9e1da08">  157</a></span>&#160;<span class="preprocessor">#define emberEventControlSetDelayMS(control, delay)        \</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">  do { emEventControlSetDelayMS(&amp;(control), (delay)); } while(0)</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga94f414082d88b985afefd16ed1a9ed90" title="Sets this EmberEventControl to run &quot;delay&quot; milliseconds in the future. NOTE: To avoid rollover errors...">emEventControlSetDelayMS</a>(<a class="code" href="structEmberEventControl.htm" title="Control structure for events.">EmberEventControl</a>*event, uint32_t delay);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="group__event.htm#ga52627f4ee5f3642567d6d6c7d7847378">  169</a></span>&#160;<span class="preprocessor">#define EMBER_MAX_EVENT_CONTROL_DELAY_QS (EMBER_MAX_EVENT_CONTROL_DELAY_MS &gt;&gt; 8)</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="code" href="group__event.htm#gaac5ababc065fdf5352adf218cda15359">  176</a></span>&#160;<span class="preprocessor">#define emberEventControlSetDelayQS(control, delay)             \</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">  do { emEventControlSetDelayMS(&amp;(control), (delay) &lt;&lt; 8); } while(0)</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="code" href="group__event.htm#gab1d007b534d5dd92c8c281244980c8c9">  182</a></span>&#160;<span class="preprocessor">#define EMBER_MAX_EVENT_CONTROL_DELAY_MINUTES (EMBER_MAX_EVENT_CONTROL_DELAY_MS &gt;&gt; 16)</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="group__event.htm#ga85e3ef34f55e67596b1eba75b8217b0f">  189</a></span>&#160;<span class="preprocessor">#define emberEventControlSetDelayMinutes(control, delay)        \</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">  do { emEventControlSetDelayMS(&amp;(control), (delay) &lt;&lt; 16); } while(0)</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="group__event.htm#ga9f12c0178814483483661bffac2ae04b">  195</a></span>&#160;<span class="preprocessor">#define emberEventControlGetRemainingMS(control)        \</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">  (emEventControlGetRemainingMS(&amp;(control)))</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;uint32_t <a class="code" href="group__event.htm#gac15268abbacd8f7f8500440525b13570" title="Returns The amount of milliseconds remaining before the event is scheduled to run. If the event is inactive, MAX_INT32U_VALUE is returned.">emEventControlGetRemainingMS</a>(<a class="code" href="structEmberEventControl.htm" title="Control structure for events.">EmberEventControl</a> *event);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">// Running events</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga68d31d86ea5d311f51d42201b4934278" title="An application typically creates an array of events along with their handlers.">emberRunEvents</a>(<a class="code" href="group__ember__types.htm#ga006f933a73c67719c043bb47ce1d6df3">EmberEventData</a> *events);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga9e752c841f15aa04cc907e2570a777cd" title="If an application has initialized a task via emberTaskInit, to run the events associated with that ta...">emberRunTask</a>(<a class="code" href="group__ember__types.htm#ga183b60090c9d6b20ccf26cf3ec529145">EmberTaskId</a> taskid);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;uint32_t <a class="code" href="group__event.htm#gaaf6894d37f4447ffc058fcbcfa901baf" title="Returns the number of milliseconds before the next event is scheduled to expire, or maxMs if no event...">emberMsToNextEvent</a>(<a class="code" href="group__ember__types.htm#ga006f933a73c67719c043bb47ce1d6df3">EmberEventData</a> *events, uint32_t maxMs);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;uint32_t <a class="code" href="group__event.htm#gafc4c9680fa360efdfd09f372115c64e1" title="This function does the same as emberMsToNextEvent() with the following addition. If the returnIndex i...">emberMsToNextEventExtended</a>(<a class="code" href="group__ember__types.htm#ga006f933a73c67719c043bb47ce1d6df3">EmberEventData</a> *events, uint32_t maxMs, uint8_t* returnIndex);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;uint32_t <a class="code" href="group__event.htm#ga1a12c3492a8c1df1150241119b5480f6" title="Returns the number of milliseconds before the next stack event is scheduled to expire.">emberMsToNextStackEvent</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<a class="code" href="group__ember__types.htm#ga183b60090c9d6b20ccf26cf3ec529145">EmberTaskId</a> <a class="code" href="group__event.htm#gaa858c97ced566a96908601313ec9ecd1" title="Initializes a task to be used for managing events and processor idling state. Returns the EmberTaskId...">emberTaskInit</a>(<a class="code" href="group__ember__types.htm#ga006f933a73c67719c043bb47ce1d6df3">EmberEventData</a> *events);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__event.htm#ga06971bb35e6fd2d31a76c20919ab5265" title="Indicates that a task has nothing to do (unless any events are pending) and that it would be safe to ...">emberMarkTaskIdle</a>(<a class="code" href="group__ember__types.htm#ga183b60090c9d6b20ccf26cf3ec529145">EmberTaskId</a> taskid);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#ifndef EMBER_NO_IDLE_SUPPORT</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="code" href="group__event.htm#gada393c01ccb8311361d51b004d419eaa">  261</a></span>&#160;<span class="preprocessor">  #define emberTaskEnableIdling(allow)  \</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor">    do { emTaskEnableIdling((allow)); } while(0)</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga5a48519da2679c305767868b1e63b85f">emTaskEnableIdling</a>(<span class="keywordtype">bool</span> allow);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="code" href="group__event.htm#gab0545d131bdbc62113a57331099afb74">  269</a></span>&#160;<span class="preprocessor">  #define emberMarkTaskActive(taskid)  \</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">    do { emMarkTaskActive((taskid)); } while(0)</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="group__event.htm#ga16b8274c85aad72c807244694af669ce">emMarkTaskActive</a>(<a class="code" href="group__ember__types.htm#ga183b60090c9d6b20ccf26cf3ec529145">EmberTaskId</a> taskid);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberTaskEnableIdling(allow)  do {} while(0)</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberMarkTaskActive(taskid)   do {} while(0)</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif // EMBER_NO_IDLE_SUPPORT</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">#endif // __EVENT_H__</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">// @} END addtogroup</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
