<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 5.9.2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('ember-debug_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ember-debug.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ember-debug_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef __EMBER_DEBUG_H__</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __EMBER_DEBUG_H__</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">// Define the values for DEBUG_LEVEL</span></div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="code" href="group__debug.htm#ga424f1b989129c5519f4df8f61ad6dcaf">   20</a></span>&#160;<span class="preprocessor">#define NO_DEBUG    0</span></div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="code" href="group__debug.htm#ga58a368314c1eab28f1a632a09b3f4324">   21</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BASIC_DEBUG 1</span></div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="code" href="group__debug.htm#ga132c290e35b442326bf7c88815ac6d8c">   22</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FULL_DEBUG  2</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="code" href="group__debug.htm#gaa90b4e5cbe1d116e26a033b44dd3835b">   31</a></span>&#160;<span class="preprocessor">#define emberDebugInit(port) do {} while(false)</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#if (DEBUG_LEVEL &gt;= BASIC_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; <span class="keywordtype">void</span> <a class="code" href="group__debug.htm#gaa0ee18c07ba9b61f0f42d8449204c101" title="Prints the filename and line number to the debug serial port.">emberDebugAssert</a>(PGM_P filename, <span class="keywordtype">int</span> linenumber);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; <span class="keywordtype">void</span> <a class="code" href="group__debug.htm#gada920f8f2589c56cebbb0291dd61827a" title="Prints the contents of RAM to the debug serial port.">emberDebugMemoryDump</a>(uint8_t *start, uint8_t *end);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__debug.htm#ga0e571e2c620a521441280bb092ab827e" title="Prints binary data to the debug channel.">emberDebugBinaryPrintf</a>(PGM_P formatString, ...);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; <span class="keywordtype">void</span> <a class="code" href="group__debug.htm#gaf6354116de7820a06d2d3743ccf1fc78" title="internal debug command used by the HAL to send vuart data out the the debug channel">emDebugSendVuartMessage</a>(uint8_t *buff, uint8_t len);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">//#if (DEBUG_LEVEL == FULL_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span> <span class="keywordtype">void</span> <a class="code" href="group__debug.htm#gaad5a7a4b525a978ffc9f2fa93b535e33" title="Prints an EmberStatus return code to the serial port.">emberDebugError</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8" title="EmberReleaseTypeStruct Data that relates release type to the correct string.">EmberStatus</a> code);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; <span class="keywordtype">bool</span> <a class="code" href="group__debug.htm#gab7c3d0a8e890eead220b90d72f59cf76" title="Turns off all debug output.">emberDebugReportOff</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; <span class="keywordtype">void</span> <a class="code" href="group__debug.htm#ga8e6688ef7b5ecc9fdf9bc6614bdf01c5" title="Restores the state of the debug output.">emberDebugReportRestore</a>(<span class="keywordtype">bool</span> state);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">// Format: Same as emberSerialPrintf</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">// emberDebugPrintf(&quot;format string&quot;[, parameters ...])</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span><span class="keywordtype">void</span> <a class="code" href="group__debug.htm#ga8ed5653fc2665481496e39b5961f12af" title="Prints text debug messages.">emberDebugPrintf</a>(PGM_P formatString, ...);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#else // (DEBUG_LEVEL &gt;= BASIC_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugAssert(filename, linenumber) do {} while(false)</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugMemoryDump(start, end) do {} while(false)</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugBinaryPrintf(formatstring, ...) do {} while(false)</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emDebugSendVuartMessage(buff, len) do {} while(false)</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugError(code) do {} while(false)</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor"></span>  <span class="comment">// Note the following doesn&#39;t have a do{}while(false) </span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">//   because it has a return value</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">  #define emberDebugReportOff() (false)</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugReportRestore(state) do {} while(false)</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #define emberDebugPrintf(...) do {} while(false)</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif // (DEBUG_LEVEL &gt;= BASIC_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">//#else // (DEBUG_LEVEL == FULL_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">//#endif // (DEBUG_LEVEL == FULL_DEBUG) || defined(DOXYGEN_SHOULD_SKIP_THIS)</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif // __EMBER_DEBUG_H__</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 5.9.2.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
