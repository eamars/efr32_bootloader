# Internal Test Application

mustang {
  name=Connect (SoC): Mustang Sample Application
  dir=mustang-app/
  isc=mustang-app/mustang-app.isc
  architecture=efr32,ezr32,simulation
  include=simulation/flex-callbacks.c
  Flex: This is a Silicon Labs Connect internal test application.
  It runs on EZR32 and EFR32.
}


# SoC Applications

commissioned-direct-device {
  name=Connect (SoC): Commissioned Direct Device Sample Application
  dir=commissioned-direct-device/
  isc=commissioned-direct-device/commissioned-direct-device.isc
  architecture=efr32,ezr32,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on EZR32 and EFR32.
}

sensor {
  name=Connect (SoC): Sensor Sample Application
  dir=sensor-sink/sensor
  isc=sensor-sink/sensor/sensor.isc
  architecture=efr32,ezr32~LG330,ezr32~WG330,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on EZR32 (except HG) and EFR32.
}

sink {
  name=Connect (SoC): Sink Sample Application
  dir=sensor-sink/sink
  isc=sensor-sink/sink/sink.isc
  architecture=efr32,ezr32~LG330,ezr32~WG330,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on EZR32 (except HG) and EFR32.
}

wire-replacement {
  name=Connect (SoC): Wire-Replacement Sample Application
  dir=wire-replacement/
  isc=wire-replacement/wire-replacement.isc
  architecture=efr32,ezr32,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on EZR32 and EFR32.
}


# Host Applications

commissioned-direct-device-host {
  name=Connect (Host): Commissioned Direct Device Sample Application
  dir=commissioned-direct-device/
  isc=commissioned-direct-device/commissioned-direct-device-host.isc
  architecture=unix,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on Unix UART Host, with EFR32 NCP.
}

sensor-host {
  name=Connect (Host): Sensor Sample Application
  dir=sensor-sink/sensor
  isc=sensor-sink/sensor/sensor-host.isc
  architecture=unix,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on Unix UART Host, with EFR32 NCP.
}

sink-host {
  name=Connect (Host): Sink Sample Application
  dir=sensor-sink/sink
  isc=sensor-sink/sink/sink-host.isc
  architecture=unix,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on Unix UART Host, with EFR32 NCP.
}

wire-replacement-host {
  name=Connect (Host): Wire-Replacement Sample Application
  dir=wire-replacement/
  isc=wire-replacement/wire-replacement-host.isc
  architecture=unix,simulation
  include=flex-callbacks.c
  Flex: This is a Silicon Labs Connect application demo.
  It runs on Unix UART Host, with EFR32 NCP.
}


# NCP Applications

ncp-uart-hw {
  name=Connect (NCP): UART HW (Hardware Flow Control)
  dir=ncp/ncp-uart-hw
  isc=ncp/ncp-uart-hw/ncp-uart-hw.isc
  architecture=efr32,simulation
  include=
  Flex: This network coprocessor (NCP) application supports communication with a host 
  application over a UART interface with hardware flow control.
  It runs on EFR32.
}

ncp-uart-sw {
  name=Connect (NCP): UART SW (Software Flow Control)
  dir=ncp/ncp-uart-sw
  isc=ncp/ncp-uart-sw/ncp-uart-sw.isc
  architecture=efr32,simulation
  include=
  Flex: This network coprocessor (NCP) application supports communication with a host 
  application over a UART interface with software flow control.
  It runs on EFR32.
}
