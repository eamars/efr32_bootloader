-DEMBER_AF_API_EMBER_TYPES="stack/include/ember-types.h"
-DEMBER_STACK_CONNECT

# Common macros
architecture(ezr32,efr32) {
  -DHAL_MICRO
  -DCORTEXM3
  -DCORTEXM3_EFM32_MICRO
  -DCONFIGURATION_HEADER="flex-configuration.h"
}

architecture(ezr32) {
  -DENABLE_EXT_DEVICE
  -DCORTEXM3_EZR32_MICRO
  -DPRO2_RADIO_BOOT_MODE=1
  -DDEBUG_LEVEL=0
  -DBOARD_EZR32
  -DMAP_MAC_PG0_CHANNELS=0
}

architecture(efr32) {
  -DCORTEXM3_EFR32
  -DPHY_EFR32
  -DCORTEXM3_EFR32_MICRO
  -DDEBUG_EFR
  -DAESDRV_HWACCEL_DMA_ENABLED=false
  -DEMBER_SERIAL0_DEBUG
  -DCMU_CTRL_HFRADIOCLK
  -DDEBUG_LEVEL=NO_DEBUG
  # Mimic serial.properties.
  # Note, this is temporary until serial setup can properly
  # support chip variants.
  # Further stuff is in serial/serial.h
  APP_SERIAL=1
  APP_BAUD_RATE=BAUD_115200
  EMBER_ASSERT_SERIAL_PORT=1
  EMBER_AF_BAUD_RATE=115200
  EMBER_SERIAL1_MODE=EMBER_SERIAL_FIFO
  EMBER_SERIAL1_RX_QUEUE_SIZE=128
  EMBER_SERIAL1_TX_QUEUE_SIZE=128
  EMBER_SERIAL1_BLOCKING
}

architecture(efr32~series[1]~device_configuration[1]) {
  -DEFR32_SERIES1_CONFIG1_MICRO
}

architecture(efr32~series[1]~device_configuration[2]) {
  -DEFR32_SERIES1_CONFIG2_MICRO
}

architecture(efr32~series[1]~device_configuration[3]) {
  -DEFR32_SERIES1_CONFIG3_MICRO
}

architecture(efr32+iar,ezr32+iar) {
  -DPLATFORM_HEADER="micro/cortexm3/compiler/iar.h"
}

architecture(efr32+gcc,ezr32+gcc) {
  -DPLATFORM_HEADER="micro/cortexm3/compiler/gcc.h"
}

# EFR32 - Mighty parts Jumbo
architecture(efr32~family[M]~series[1]~device_configuration[2]~performance[P]) {
  -DRETARGET_VCOM
}

# EFR32 Dumbo boards

architecture(efr32+BRD4100A) {
  -DBOARD_HEADER="brd4100a.h"
}

architecture(efr32+BRD4103A) {
  -DBOARD_HEADER="brd4103a.h"
}

architecture(efr32+BRD4150B) {
  -DBOARD_HEADER="brd4150b.h"
}

architecture(efr32+BRD4250A) {
  -DBOARD_HEADER="brd4250a.h"
}

architecture(efr32+BRD4150A) {
  -DBOARD_HEADER="brd4150a.h"
}

architecture(efr32+BRD4250B) {
  -DBOARD_HEADER="brd4250b.h"
}

architecture(efr32+BRD4251A) {
  -DBOARD_HEADER="brd4251a.h"
}

architecture(efr32+BRD4152A) {
  -DBOARD_HEADER="brd4152a.h"
}

architecture(efr32+BRD4251B) {
  -DBOARD_HEADER="brd4251b.h"
}

architecture(efr32+BRD4251D) {
  -DBOARD_HEADER="brd4251d.h"
}

architecture(efr32+BRD4252A) {
  -DBOARD_HEADER="brd4252a.h"
}

architecture(efr32+BRD4253A) {
  -DBOARD_HEADER="brd4253a.h"
}

architecture(efr32+BRD4254A) {
  -DBOARD_HEADER="brd4254a.h"
}

architecture(efr32+BRD4151A) {
  -DBOARD_HEADER="brd4151a.h"
}

architecture(efr32+BRD4153A) {
  -DBOARD_HEADER="brd4153a.h"
}

# EFR32 Jumbo boards
architecture(efr32+BRD4161A) {
  -DBOARD_HEADER="brd4161a.h"
}

architecture(efr32+BRD4162A) {
  -DBOARD_HEADER="brd4162a.h"
}

architecture(efr32+BRD4163A) {
  -DBOARD_HEADER="brd4163a.h"
}

architecture(efr32+BRD4164A) {
  -DBOARD_HEADER="brd4164a.h"
}

# EFR32 Nerio boards
architecture(efr32+BRD4158A) {
  -DBOARD_HEADER="brd4158a.h"
}

# TODO: base does not have brd4160a.h file yet.
#architecture(efr32+BRD4160A) {
#  -DBOARD_HEADER="brd4160a.h"
#}

#architecture(efr32+HWCONF) { (removing hardware conf from connect 2.0)
#  -DBOARD_HEADER="micro/cortexm3/efm32/board/hwconf.h"
#}

# EZR32 parts 

architecture(ezr32~LG230,ezr32~LG330,ezr32~WG230,ezr32~WG330) {
  # Mimic serial.properties.
  # Note, this is temporary until serial setup can properly
  # support chip variants.
  # Further stuff is in serial/serial.h
  APP_SERIAL=3
  APP_BAUD_RATE=BAUD_19200
  EMBER_ASSERT_SERIAL_PORT=3
  EMBER_AF_BAUD_RATE=19200
  EMBER_SERIAL3_MODE=EMBER_SERIAL_FIFO
  EMBER_SERIAL3_RX_QUEUE_SIZE=128
  EMBER_SERIAL3_TX_QUEUE_SIZE=128
  EMBER_SERIAL3_BLOCKING
}

architecture(ezr32~HG320) {
  # Mimic serial.properties.
  # Note, this is temporary until serial setup can properly
  # support chip variants.
  # Further stuff is in serial/serial.h
  APP_SERIAL=5
  APP_BAUD_RATE=BAUD_19200
  EMBER_ASSERT_SERIAL_PORT=5
  EMBER_AF_BAUD_RATE=19200
  EMBER_SERIAL5_MODE=EMBER_SERIAL_FIFO
  EMBER_SERIAL5_RX_QUEUE_SIZE=128
  EMBER_SERIAL5_TX_QUEUE_SIZE=128
  EMBER_SERIAL5_BLOCKING
}

architecture(ezr32~LG230) {
  -DEZR32LG230F256
  -DCORTEXM3_EZR32LG
  -DCORTEXM3_EZR32LG230F256
}

architecture(ezr32~LG330) {
  -DEZR32LG330F256
  -DCORTEXM3_EZR32LG
  -DCORTEXM3_EZR32LG330F256
}

architecture(ezr32~WG230) {
  -DEZR32WG230F256
  -DCORTEXM3_EZR32WG
  -DCORTEXM3_EZR32WG230F256
}

architecture(ezr32~WG330) {
  -DEZR32WG330F256
  -DCORTEXM3_EZR32WG
  -DCORTEXM3_EZR32WG330F256
}

architecture(ezr32~HG320) {
  -DEZR32HG320F64
  -DCORTEXM3_EZR32HG
  -DCORTEXM3_EZR32HG320F64
}

# EZR32 boards

architecture(ezr32+BRD4502A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4502a.h"
  -DEZR32LG330F256R60
}

architecture(ezr32+BRD4502B) {
  -DPHY_EZR2
  -DBOARD_HEADER="brd4502b.h"
  -DEZR32LG330F256R63
}

architecture(ezr32+BRD4502C) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4502c.h"
  -DEZR32WG330F256R60
}

architecture(ezr32+BRD4502D) {
  -DPHY_EZR2
  -DBOARD_HEADER="brd4502d.h"
  -DEZR32WG330F256R55
}

architecture(ezr32+BRD4502E) {
  -DSIMPLE_FRAME_PENDING_INTERFACE
  -DPHY_PRO2PLUS
  -DBOARD_HEADER="brd4502e.h"
  -DEZR32WG330F256R67
}

architecture(ezr32+BRD4503A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4503a.h"
  -DEZR32LG330F256R63
}

architecture(ezr32+BRD4503B) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4503b.h"
  -DEZR32WG330F256R63
}

architecture(ezr32+BRD4503C) {
  -DSIMPLE_FRAME_PENDING_INTERFACE
  -DPHY_PRO2PLUS
  -DBOARD_HEADER="brd4503c.h"
  -DEZR32WG330F256R68
}

architecture(ezr32+BRD4504A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4504a.h"
  -DEZR32LG330F256R63
}

architecture(ezr32+BRD4504B) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4504b.h"
  -DEZR32WG330F256R63
}

architecture(ezr32+BRD4505A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4505a.h"
  -DEZR32LG330F256R63
}

architecture(ezr32+BRD4505B) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4505b.h"
  -DEZR32WG330F256R63
}

architecture(ezr32+BRD4506A) {
  -DSIMPLE_FRAME_PENDING_INTERFACE
  -DPHY_PRO2PLUS
  -DBOARD_HEADER="brd4506a.h"
  -DEZR32WG330F256R68
}

architecture(ezr32+BRD4542B) {
  -DPHY_EZR2
  -DBOARD_HEADER="brd4542b.h"
  -DEZR32HG320F64R55
}

architecture(ezr32+BRD4543B) {
  -DSIMPLE_FRAME_PENDING_INTERFACE
  -DPHY_PRO2PLUS
  -DBOARD_HEADER="brd4543b.h"
  -DEZR32HG320F64R68
}

architecture(ezr32+BRD4544A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4544a.h"
  -DEZR32HG320F64R63
}

architecture(ezr32+BRD4545A) {
  -DPHY_PRO2
  -DBOARD_HEADER="brd4545a.h"
  -DEZR32HG320F64R63
}

architecture(ezr32+BRD4546A) {
  -DSIMPLE_FRAME_PENDING_INTERFACE
  -DPHY_PRO2PLUS
  -DBOARD_HEADER="brd4546a.h"
  -DEZR32HG320F64R68
}

#architecture(pc) {
#  -DEMBER_SERIAL_TX_QUEUE_SIZE=128
#}
