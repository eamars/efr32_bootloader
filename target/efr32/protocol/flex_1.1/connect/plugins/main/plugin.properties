name=Main
description=This plugin performs initialization and then repeatedly runs the application loop for Connect applications.  Depending on the configuration, it initializes the HAL, stack, serial ports, event system, plugins, and the application itself.  After initialization, it executes a loop that runs the stack, plugins, and the application itself in a loop.
includedByDefault=true
category=Connect Common
architecture=efr32,ezr32,unix,simulation
quality=production

requiredApis=stack-common,hal

setup(bookkeeping) {
  provides=init, tick, stackStatus, stackIsr, incomingMessage, messageSent, childJoin, incomingBeacon, activeScanComplete, energyScanComplete, markApplicationBuffers 
  provides.init=void emberAfInit(void)
  provides.tick=void emberAfTick(void)
  provides.stackStatus=void emberAfStackStatus(EmberStatus status)
  provides.incomingMessage=void emberAfIncomingMessage(EmberIncomingMessage* message)
  provides.messageSent=void emberAfMessageSent(EmberStatus status, EmberOutgoingMessage* message)
  provides.childJoin=void emberAfChildJoin(EmberNodeType nodeType, EmberNodeId nodeId)
  provides.activeScanComplete=void emberAfActiveScanComplete(void)
  provides.incomingBeacon=void emberAfIncomingBeacon(EmberPanId panId, EmberNodeId nodeId, uint8_t payloadLength, uint8_t* payload)
  provides.energyScanComplete=void emberAfEnergyScanComplete(int8_t mean, int8_t min, int8_t max, uint16_t variance)
  provides.stackIsr=void emberAfStackIsr(void)
  provides.markApplicationBuffers=void emberMarkApplicationBuffersHandler(void)
  provides.markApplicationBuffers.0=emberAfMarkApplicationBuffersCallback
}

main.c (efr32,ezr32)
../host-ncp/host-main.c (unix)

implementedCallbacks=main,emberStackStatusHandler,emberStackIsrHandler,emberIncomingMessageHandler,emberIncomingBeaconHandler,emberMessageSentHandler,emberChildJoinHandler,emberActiveScanCompleteHandler,emberEnergyScanCompleteHandler,emberMarkApplicationBuffersHandler
callbacks=callbacks.info