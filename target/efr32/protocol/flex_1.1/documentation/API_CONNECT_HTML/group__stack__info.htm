<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__stack__info.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">Stack Information</div>  </div>
<div class="ingroups"><a class="el" href="group__silabs__connect__stack.htm">Silicon Labs Connect Stack API Reference</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga695b0d37d01ce47623309d4629059324"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga695b0d37d01ce47623309d4629059324">EMBER_HIGH_PRIORITY_TASKS</a></td></tr>
<tr class="separator:ga695b0d37d01ce47623309d4629059324"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Handlers</h2></td></tr>
<tr class="memitem:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaac4a45063264fe1b8de41b02f6c3570f">emberStackStatusHandler</a> (<a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> status)</td></tr>
<tr class="separator:gaac4a45063264fe1b8de41b02f6c3570f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga910d3c7e0a12d07a91a5427469979b7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga910d3c7e0a12d07a91a5427469979b7e">emberChildJoinHandler</a> (<a class="el" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a> nodeType, <a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> nodeId)</td></tr>
<tr class="separator:ga910d3c7e0a12d07a91a5427469979b7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdf78d599970c04828c71278b936bbac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gafdf78d599970c04828c71278b936bbac">emberStackIsrHandler</a> (void)</td></tr>
<tr class="separator:gafdf78d599970c04828c71278b936bbac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
APIs</h2></td></tr>
<tr class="memitem:ga69bcb9675634542087715b23bb171536"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga69bcb9675634542087715b23bb171536">emberStackPowerDown</a> (void)</td></tr>
<tr class="separator:ga69bcb9675634542087715b23bb171536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2a36231590e2bb0ada408e24ed0d3f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad2a36231590e2bb0ada408e24ed0d3f9">emberStackPowerUp</a> (void)</td></tr>
<tr class="separator:gad2a36231590e2bb0ada408e24ed0d3f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79b3b8e6f806d28cb8232f87970796c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga46491008c24c4c89c2b6c8d28d20b88a">EmberNetworkStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga79b3b8e6f806d28cb8232f87970796c4">emberNetworkState</a> (void)</td></tr>
<tr class="separator:ga79b3b8e6f806d28cb8232f87970796c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99be01cc2a17d218fe4979cbcf0ea9a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga99be01cc2a17d218fe4979cbcf0ea9a6">emberStackIsUp</a> (void)</td></tr>
<tr class="separator:ga99be01cc2a17d218fe4979cbcf0ea9a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90da760f71e7b50c5b0edbda6a97d2bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga90da760f71e7b50c5b0edbda6a97d2bc">emberSetSecurityKey</a> (<a class="el" href="structEmberKeyData.htm">EmberKeyData</a> *key)</td></tr>
<tr class="separator:ga90da760f71e7b50c5b0edbda6a97d2bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9116827f1676c74db8c6071c640f769"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gad9116827f1676c74db8c6071c640f769">emberGetCounter</a> (<a class="el" href="group__ember__types.htm#ga9f972a77387b604c47eda6a63188aa3b">EmberCounterType</a> counterType, uint32_t *count)</td></tr>
<tr class="separator:gad9116827f1676c74db8c6071c640f769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0b4f2d07170321aace9b7e3397bf5f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gac0b4f2d07170321aace9b7e3397bf5f3">emberSetRadioChannel</a> (uint8_t channel)</td></tr>
<tr class="separator:gac0b4f2d07170321aace9b7e3397bf5f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga704a7af18cf000d5c76287acf226bdbb"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga704a7af18cf000d5c76287acf226bdbb">emberGetRadioChannel</a> (void)</td></tr>
<tr class="separator:ga704a7af18cf000d5c76287acf226bdbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3522b6c55e505708085de92d36dcc90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaf3522b6c55e505708085de92d36dcc90">emberSetRadioPower</a> (int8_t power)</td></tr>
<tr class="separator:gaf3522b6c55e505708085de92d36dcc90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd1e4636a9ebc47b4920d93d9147c81f"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gacd1e4636a9ebc47b4920d93d9147c81f">emberGetRadioPower</a> (void)</td></tr>
<tr class="separator:gacd1e4636a9ebc47b4920d93d9147c81f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga095c3fed5dfd2209db17313c26a75778"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga095c3fed5dfd2209db17313c26a75778">emberSetRadioPowerMode</a> (bool radioOn)</td></tr>
<tr class="separator:ga095c3fed5dfd2209db17313c26a75778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea58352a21c1f1f87d33cb61099d4176"><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaea58352a21c1f1f87d33cb61099d4176">emberSetMacParams</a> (bool checkCca, uint8_t maxCcaAttempts, uint8_t minBackoffExp, uint8_t maxBackoffExp, uint8_t maxRetries)</td></tr>
<tr class="separator:gaea58352a21c1f1f87d33cb61099d4176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada2efe397b0ebb1aaf932d739449a8e3"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gada2efe397b0ebb1aaf932d739449a8e3">emberCurrentStackTasks</a> (void)</td></tr>
<tr class="separator:gada2efe397b0ebb1aaf932d739449a8e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a2c2ebcc639fdd5bcde98aa11a98907"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga7a2c2ebcc639fdd5bcde98aa11a98907">emberOkToNap</a> (void)</td></tr>
<tr class="separator:ga7a2c2ebcc639fdd5bcde98aa11a98907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f3e0259fcebb4c2cf611d3e9d22db89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3f3e0259fcebb4c2cf611d3e9d22db89">emberOkToHibernate</a> (void)</td></tr>
<tr class="separator:ga3f3e0259fcebb4c2cf611d3e9d22db89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaddede602404ede006c2e7a2315662973"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gaddede602404ede006c2e7a2315662973">emberGetEui64</a> (void)</td></tr>
<tr class="separator:gaddede602404ede006c2e7a2315662973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fbbf2e1908fdc715b10af33d86bb955"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3fbbf2e1908fdc715b10af33d86bb955">emberIsLocalEui64</a> (<a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> eui64)</td></tr>
<tr class="separator:ga3fbbf2e1908fdc715b10af33d86bb955"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0070e7ae7c9f1f5642fdf2c8596c2b45"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga0070e7ae7c9f1f5642fdf2c8596c2b45">emberGetNodeId</a> (void)</td></tr>
<tr class="separator:ga0070e7ae7c9f1f5642fdf2c8596c2b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3eb87e0c3d904c2d077aaacde1b60844"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga5d4c51573517c485740b1a0cc43427cf">EmberPanId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga3eb87e0c3d904c2d077aaacde1b60844">emberGetPanId</a> (void)</td></tr>
<tr class="separator:ga3eb87e0c3d904c2d077aaacde1b60844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64f966fda83791c012c350550d5d16ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#ga64f966fda83791c012c350550d5d16ee">emberGetParentId</a> (void)</td></tr>
<tr class="separator:ga64f966fda83791c012c350550d5d16ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4d9835526250dfdbabc5792b7e935b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stack__info.htm#gae4d9835526250dfdbabc5792b7e935b0">emberGetNodeType</a> (void)</td></tr>
<tr class="separator:gae4d9835526250dfdbabc5792b7e935b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>See <a class="el" href="stack-info_8h.htm" title="Ember Connect API for accessing and setting stack information. See Stack Information for documentatio...">stack-info.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga695b0d37d01ce47623309d4629059324"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_HIGH_PRIORITY_TASKS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A mask of the tasks that prevent a device from sleeping. </p>

<p>Definition at line <a class="el" href="stack-info_8h_source.htm#l00018">18</a> of file <a class="el" href="stack-info_8h_source.htm">stack-info.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaac4a45063264fe1b8de41b02f6c3570f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackStatusHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked when the status of the stack changes. </p>
<p>The application is free to begin messaging once it receives the <a class="el" href="group__status__codes.htm#gae94efecd4265d484f7b01e56cce08356" title="The stack software has completed initialization and is ready to send and receive packets over the air...">EMBER_NETWORK_UP</a> status.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">status</td><td>Stack status. One of the following:<ul>
<li><a class="el" href="group__status__codes.htm#gae94efecd4265d484f7b01e56cce08356" title="The stack software has completed initialization and is ready to send and receive packets over the air...">EMBER_NETWORK_UP</a></li>
<li><a class="el" href="group__status__codes.htm#gadf8c20e0884530dcb19bd659378efd79" title="The network is not operating.">EMBER_NETWORK_DOWN</a></li>
<li><a class="el" href="group__status__codes.htm#ga3a511447012fdbdac45699fb9d1297b1" title="An attempt to join or rejoin the network failed because no valid beacons could be heard by the joinin...">EMBER_NO_VALID_BEACONS</a></li>
<li><a class="el" href="group__status__codes.htm#gafea10ca380c4dc73bd0f925375f954be" title="The node failed to initiate the scanning process during the joining process.">EMBER_JOIN_SCAN_FAILED</a></li>
<li><a class="el" href="group__status__codes.htm#ga32e6f68e6013827c3f426a17d92e2015" title="An attempt to join a network failed.">EMBER_JOIN_FAILED</a></li>
<li><a class="el" href="group__status__codes.htm#gac3d26e75e978238a5b7ccde6efd34848" title="An attempt to join a network was rejected.">EMBER_JOIN_DENIED</a></li>
<li><a class="el" href="group__status__codes.htm#ga9de991a74f8214eb0f938dd423eccc53" title="The node timed out waiting for a response during the joining process.">EMBER_JOIN_TIMEOUT</a></li>
<li><a class="el" href="group__status__codes.htm#ga6515f8c623ebff66d2343f1047e5be67" title="The frequency hopping client failed the frequency hopping synchronization procedure, it timed out trying to reach the frequency hopping server.">EMBER_MAC_SYNC_TIMEOUT</a> </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga910d3c7e0a12d07a91a5427469979b7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberChildJoinHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a>&#160;</td>
          <td class="paramname"><em>nodeType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>nodeId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This handler is invoked at coordinator or range extender nodes when a new child has joined the device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nodeType</td><td>The role of the joining device (<a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0a2ec7ed8a79468a3dc9b54bea3a48aa">EMBER_STAR_RANGE_EXTENDER</a>, <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca6daecc08ab5e3a4de806fbbd2c5efdb1">EMBER_STAR_END_DEVICE</a> or <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0eaebd6852e29c190f39206d7125025c">EMBER_STAR_SLEEPY_END_DEVICE</a>).</td></tr>
    <tr><td class="paramname">nodeId</td><td>The node ID of the joining device. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafdf78d599970c04828c71278b936bbac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackIsrHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This handler is invoked in ISR context whenever a stack-related ISR routine fires. </p>

</div>
</div>
<a class="anchor" id="ga69bcb9675634542087715b23bb171536"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackPowerDown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Immediately turns the radio power completely off. </p>
<p>After calling this function, you must not call any other stack function except <a class="el" href="group__stack__info.htm#gad2a36231590e2bb0ada408e24ed0d3f9" title="Powers up the radio. Typically called coming out of sleep.">emberStackPowerUp()</a>. This is because all other stack functions require that the radio is powered on for their proper operation. </p>

</div>
</div>
<a class="anchor" id="gad2a36231590e2bb0ada408e24ed0d3f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackPowerUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Powers up the radio. Typically called coming out of sleep. </p>
<p>For non-sleepy devices, also turns the radio on and leaves it in rx mode. </p>

</div>
</div>
<a class="anchor" id="ga79b3b8e6f806d28cb8232f87970796c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga46491008c24c4c89c2b6c8d28d20b88a">EmberNetworkStatus</a> emberNetworkState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current join status. </p>
<p>Returns a value indicating whether the node is joining, joined to, or leaving a network.</p>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ember__types.htm#ga46491008c24c4c89c2b6c8d28d20b88a" title="Defines the possible join states for a node.">EmberNetworkStatus</a> value indicating the current join status. </dd></dl>

</div>
</div>
<a class="anchor" id="ga99be01cc2a17d218fe4979cbcf0ea9a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberStackIsUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack is currently up. </p>
<p>Returns true if the stack is joined to a network and ready to send and receive messages. This reflects only the state of the local node; it does not indicate whether or not other nodes are able to communicate with this node.</p>
<dl class="section return"><dt>Returns</dt><dd>TRUE if the stack is up, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga90da760f71e7b50c5b0edbda6a97d2bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetSecurityKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberKeyData.htm">EmberKeyData</a> *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the security key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>An <a class="el" href="structEmberKeyData.htm" title="This data structure contains the key data that is passed into various other functions.">EmberKeyData</a> value containing the security key to be set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An EmberStatus value of <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if the key was successfully set. Otherwise it returns an EmberStatus value of <a class="el" href="group__status__codes.htm#ga20f497445170399070473added9fb3e3" title="The API call is not allowed given the current state of the stack.">EMBER_INVALID_CALL</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="gad9116827f1676c74db8c6071c640f769"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetCounter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga9f972a77387b604c47eda6a63188aa3b">EmberCounterType</a>&#160;</td>
          <td class="paramname"><em>counterType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the stack counter corresponding to the passed counter type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">counterType</td><td>An <a class="el" href="group__ember__types.htm#ga9f972a77387b604c47eda6a63188aa3b" title="Defines the events reported to the application by the ::emberCounterHandler().">EmberCounterType</a> value indicating the stack counter to be retrieved.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An EmberStatus value of <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if the stack counter was successfully retrieved. An EmberStatus value of <a class="el" href="group__status__codes.htm#ga20f497445170399070473added9fb3e3" title="The API call is not allowed given the current state of the stack.">EMBER_INVALID_CALL</a> if the passed counterType is invalid. An EmberStatus value of <a class="el" href="group__status__codes.htm#gac925464739b8c5e0a921dcf956d1154b" title="The requested function cannot be executed because the library that contains the necessary functionali...">EMBER_LIBRARY_NOT_PRESENT</a> if the stack counter library is not present. </dd></dl>

</div>
</div>
<a class="anchor" id="gac0b4f2d07170321aace9b7e3397bf5f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetRadioChannel </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>channel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the channel to use for sending and receiving messages on the current logical network. For a list of available radio channels, see the technical specification for the RF communication module in your Developer Kit. </p>
<p>Note: Care should be taken when using this API, as all devices on a network must use the same channel.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">channel</td><td>Desired radio channel.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> value of:<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if the stack accepted the channel change.</li>
<li><a class="el" href="group__status__codes.htm#ga20f497445170399070473added9fb3e3" title="The API call is not allowed given the current state of the stack.">EMBER_INVALID_CALL</a> if the node is currently performing frequency hopping.</li>
<li><a class="el" href="group__status__codes.htm#ga033b46b66aaa068567b32d6b63a23f69" title="An unsupported channel setting was specified.">EMBER_PHY_INVALID_CHANNEL</a> if the passed channel is invalid.</li>
<li><a class="el" href="group__status__codes.htm#gac94e4d989fb20b4644555957135a3d35" title="The requested operation cannot be completed because the MAC is currently busy performing some high pr...">EMBER_MAC_BUSY</a> if the MAC is currently performing some high priority task. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga704a7af18cf000d5c76287acf226bdbb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberGetRadioChannel </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the radio channel to which a node is set on the current logical network. The possible return values depend on the radio in use. For a list of available radio channels, see the technical specification for the RF communication module in your Developer Kit. </p>
<dl class="section return"><dt>Returns</dt><dd>Current radio channel. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf3522b6c55e505708085de92d36dcc90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetRadioPower </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the radio output power at which a node is to operate for the current logical network. Ember radios have discrete power settings. For a list of available power settings, see the technical specification for the RF communication module in your Developer Kit. Note: Care should be taken when using this API on a running network, as it will directly impact the established link qualities neighboring nodes have with the node on which it is called. This can lead to disruption of existing routes and erratic network behavior. Note: If the requested power level is not available on a given radio, this function will use the next higher available power level. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">power</td><td>Desired radio output power, in dBm.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating the success or failure of the command. Failure indicates that the requested power level is out of range. </dd></dl>

</div>
</div>
<a class="anchor" id="gacd1e4636a9ebc47b4920d93d9147c81f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8_t emberGetRadioPower </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the radio output power of the current logical network at which a node is operating. Ember radios have discrete power settings. For a list of available power settings, see the technical specification for the RF communication module in your Developer Kit. </p>
<dl class="section return"><dt>Returns</dt><dd>Current radio output power, in dBm. </dd></dl>

</div>
</div>
<a class="anchor" id="ga095c3fed5dfd2209db17313c26a75778"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetRadioPowerMode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>radioOn</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This API allows the application to turn the radio on/off. This API is intended to be used with direct devices only. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">radioOn</td><td>If this parameter is true, the radio shall be turned on, otherwise it shall be turned off.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating the success or failure of the command. Failure indicates that the node type is a type other than <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca3fa9b71dee0ccb04481b5f82e02df6e1">EMBER_DIRECT_DEVICE</a> or <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca7d3a606b69f1d358020d64ef5a6bc5c3">EMBER_MAC_MODE_DEVICE</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="gaea58352a21c1f1f87d33cb61099d4176"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetMacParams </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>checkCca</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>maxCcaAttempts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>minBackoffExp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>maxBackoffExp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>maxRetries</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the MAC layer transmission parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">checkCca</td><td>If this is set to TRUE, the node will perform a clear channel assessment prior to transmit a packet. If the channel is not clear, a random backoff shall be performed. If this is set to FALSE, no clear channel assessment is performed and the packet shall be transmitted right away. This parameter is set by default to TRUE.</td></tr>
    <tr><td class="paramname">maxCcaAttempts</td><td>The maximum number of clear channel assessment attempts that shall be performed prior to fail to transmit a packet with <a class="el" href="group__status__codes.htm#ga505ac74b6b3b233e2657af794ca1da82" title="The transmit attempt failed because all CCA attempts indicated that the channel was busy...">EMBER_PHY_TX_CCA_FAIL</a> status. This parameter is set by default to 4. Note: this is meaningful only if the checkCca parameter is set to TRUE.</td></tr>
    <tr><td class="paramname">minBackoffExp</td><td>The backoff exponent to be used if the initial channel clear assessment fails. This parameter is set by default to 3. Note: this is meaningful only if the checkCca parameter is set to TRUE.</td></tr>
    <tr><td class="paramname">maxBackoffExp</td><td>The backoff exponent to be used if the final channel clear assessment fails. This parameter is set by default to 5. Note: this is meaningful only if the checkCca parameter is set to TRUE.</td></tr>
    <tr><td class="paramname">maxRetries</td><td>The number of transmission retries that shall be performed in case no acknowledgement was received. This parameter is set by default to 3 (which means that a total of 4 transmission attempts shall per performed).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> value indicating whether the MAC parameters were successfully set or the reason of failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gada2efe397b0ebb1aaf932d739449a8e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t emberCurrentStackTasks </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a bitmask indicating the stack's current tasks. </p>
<p>The mask <a class="el" href="group__stack__info.htm#ga695b0d37d01ce47623309d4629059324" title="A mask of the tasks that prevent a device from sleeping.">EMBER_HIGH_PRIORITY_TASKS</a> defines which tasks are high priority. Devices should not sleep if any high priority tasks are active. Active tasks that are not high priority are waiting for messages to arrive from other devices. If there are active tasks, but no high priority ones, the device may sleep but should periodically wake up and call <a class="el" href="group__message.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf" title="Sends a data request command to the parent node.">emberPollForData()</a> in order to receive messages. Parents will hold messages for <a class="el" href="group__configuration.htm#ga82a76b2ef437338a3e09e55dc99c754c" title="The maximum amount of time (in milliseconds) that the MAC will hold a message for indirect transmissi...">EMBER_INDIRECT_TRANSMISSION_TIMEOUT_MS</a> milliseconds before discarding them.</p>
<dl class="section return"><dt>Returns</dt><dd>A bitmask of the stack's active tasks. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7a2c2ebcc639fdd5bcde98aa11a98907"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToNap </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack is currently in a state where there are no high priority tasks and may sleep. </p>
<p>There may be tasks expecting incoming messages, in which case the device should periodically wake up and call <a class="el" href="group__message.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf" title="Sends a data request command to the parent node.">emberPollForData()</a> in order to receive messages. This function can only be called when the node type is <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0eaebd6852e29c190f39206d7125025c">EMBER_STAR_SLEEPY_END_DEVICE</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>TRUE if the application may sleep but the stack may be expecting incoming messages. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3f3e0259fcebb4c2cf611d3e9d22db89"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToHibernate </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack currently has any tasks pending. </p>
<p>If there are no pending tasks then <a class="el" href="group__network__management.htm#gaaf3d7cad7b0f03d28eea981561db64d8" title="A periodic tick routine that should be called:">emberTick()</a> does not need to be called until the next time a stack API function is called. This function can only be called when the node type is <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0eaebd6852e29c190f39206d7125025c">EMBER_STAR_SLEEPY_END_DEVICE</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>TRUE if the application may sleep for as long as it wishes. </dd></dl>

</div>
</div>
<a class="anchor" id="gaddede602404ede006c2e7a2315662973"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> emberGetEui64 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the EUI64 ID of the local node. </p>
<dl class="section return"><dt>Returns</dt><dd>The 64-bit ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3fbbf2e1908fdc715b10af33d86bb955"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberIsLocalEui64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td>
          <td class="paramname"><em>eui64</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines whether <code>eui64</code> is the local node's EUI64 ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eui64</td><td>An EUI64 ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TRUE if <code>eui64</code> is the local node's ID, otherwise FALSE. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0070e7ae7c9f1f5642fdf2c8596c2b45"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> emberGetNodeId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the 16-bit node ID of local node on the current logical network. </p>
<dl class="section return"><dt>Returns</dt><dd>The 16-bit ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3eb87e0c3d904c2d077aaacde1b60844"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga5d4c51573517c485740b1a0cc43427cf">EmberPanId</a> emberGetPanId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the local node's PAN ID of the current logical network. </p>
<dl class="section return"><dt>Returns</dt><dd>A PAN ID. </dd></dl>

</div>
</div>
<a class="anchor" id="ga64f966fda83791c012c350550d5d16ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> emberGetParentId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the parent's node ID. </p>
<dl class="section return"><dt>Returns</dt><dd>The parent's node ID. </dd></dl>

</div>
</div>
<a class="anchor" id="gae4d9835526250dfdbabc5792b7e935b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a> emberGetNodeType </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an <a class="el" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac" title="Defines the possible types of nodes and the roles that a node might play in a network.">EmberNodeType</a> value indicating the type of the node. </p>
<dl class="section return"><dt>Returns</dt><dd>A PAN ID. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
