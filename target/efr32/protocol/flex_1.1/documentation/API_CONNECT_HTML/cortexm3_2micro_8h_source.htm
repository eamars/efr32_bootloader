<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cortexm3_2micro_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">cortexm3/micro.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cortexm3_2micro_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifndef __EM3XX_MICRO_H__</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __EM3XX_MICRO_H__</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifndef __MICRO_H__</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#error do not include this file directly - include micro/micro.h</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifndef __EMBERSTATUS_TYPE__</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __EMBERSTATUS_TYPE__</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span>  <span class="comment">//This is necessary here because halSetRadioHoldOff returns an</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">//EmberStatus and not adding this typedef to this file breaks a</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="comment">//whole lot of builds due to include mis-ordering</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">typedef</span> uint8_t <a class="code" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif //__EMBERSTATUS_TYPE__</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif // DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">// Micro specific serial defines</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#define EM_NUM_SERIAL_PORTS 4</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define EMBER_SPI_MASTER 4</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define EMBER_SPI_SLAVE 5</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define EMBER_I2C 6</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">// Define the priority registers of system handlers and interrupts.</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">// This example shows how to save the current ADC interrupt priority and</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">// then set it to 24:</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">//    uint8_t oldAdcPriority = INTERRUPT_PRIORITY_REGISTER(ADC);</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">//    INTERRUPT_PRIORITY_REGISTER(ADC) = 24;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">// For Cortex-M3 faults and exceptions</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#define HANDLER_PRIORITY_REGISTER(handler) \</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">  (*( ((uint8_t *)SCS_SHPR_7to4_ADDR) + handler##_VECTOR_INDEX - 4) )</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">// For EM3XX-specific interrupts</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#define INTERRUPT_PRIORITY_REGISTER(interrupt) \</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">  (* ( ((uint8_t *)NVIC_IPR_3to0_ADDR) + interrupt##_VECTOR_INDEX - 16) )</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">// The reset types of the EM300 series have both a base type and an</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">//  extended type.  The extended type is a 16-bit value which has the base</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">//  type in the upper 8-bits, and the extended classification in the</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">//  lower 8-bits</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">// For backwards compatibility with other platforms, only the base type is</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">//  returned by the halGetResetInfo() API.  For the full extended type, the</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">//  halGetExtendedResetInfo() API should be called.</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#define RESET_BASE_TYPE(extendedType)   ((uint8_t)(((extendedType) &gt;&gt; 8) &amp; 0xFF))</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_EXTENDED_FIELD(extendedType) ((uint8_t)(extendedType &amp; 0xFF))</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_VALID_SIGNATURE           (0xF00F)</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_INVALID_SIGNATURE         (0xC33C)</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">// Define the base reset cause types</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#define RESET_BASE_DEF(basename, value, string)  RESET_##basename = value,</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_EXT_DEF(basename, extname, extvalue, string)  </span><span class="comment">/*nothing*/</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"></span><span class="keyword">enum</span> {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="reset-def_8h.htm" title="Definitions for all the reset cause types.">reset-def.h</a>&quot;</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  NUM_RESET_BASE_TYPES</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#undef RESET_BASE_DEF</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#undef RESET_EXT_DEF</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">// Define the extended reset cause types</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#define RESET_EXT_VALUE(basename, extvalue)  \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">  (((RESET_##basename)&lt;&lt;8) + extvalue)</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_BASE_DEF(basename, value, string)  </span><span class="comment">/*nothing*/</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_EXT_DEF(basename, extname, extvalue, string)  \</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">  RESET_##basename##_##extname = RESET_EXT_VALUE(basename, extvalue),</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor"></span><span class="keyword">enum</span> {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="reset-def_8h.htm" title="Definitions for all the reset cause types.">reset-def.h</a>&quot;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#undef RESET_EXT_VALUE</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#undef RESET_BASE_DEF</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#undef RESET_EXT_DEF</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">// These define the size of the GUARD region configured in the MPU that</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">// sits between the heap and the stack</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#define HEAP_GUARD_REGION_SIZE       (SIZE_32B)</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define HEAP_GUARD_REGION_SIZE_BYTES (1&lt;&lt;(HEAP_GUARD_REGION_SIZE+1))</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">// Define a value to fill the guard region between the heap and stack.</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#define HEAP_GUARD_FILL_VALUE (0xE2E2E2E2)</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">// Resize the CSTACK to add space to the &#39;heap&#39; that exists below it</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;uint32_t halStackModifyCStackSize(int32_t stackSizeDeltaWords);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">// Initialize the CSTACK/Heap region and the guard page in between them</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">void</span> halInternalInitCStackRegion(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">// Helper functions to get the location of the stack/heap</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;uint32_t halInternalGetCStackBottom(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;uint32_t halInternalGetHeapTop(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;uint32_t halInternalGetHeapBottom(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">#endif // DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="code" href="group__micro.htm#ga2d1a532a9c53dba7bdd7a9d8719e0636">  121</a></span>&#160;<span class="preprocessor">#define STACK_VECTOR_INDEX          0 // special case: stack pointer at reset</span></div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="code" href="group__micro.htm#ga4083fef7b9936c6b805731aa3b47d0e8">  122</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESET_VECTOR_INDEX          1</span></div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="group__micro.htm#ga7e3375d45839f2bd33f6216710159de1">  123</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define NMI_VECTOR_INDEX            2</span></div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="code" href="group__micro.htm#ga63cd24ec6cec755c67a6d7c548d01039">  124</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define HARD_FAULT_VECTOR_INDEX     3</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="code" href="group__micro.htm#ga364fec14d28173c3dc5400981172f9c8">  125</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MEMORY_FAULT_VECTOR_INDEX   4</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="group__micro.htm#gaa490210def9d40a46b0f662d86a197fe">  126</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BUS_FAULT_VECTOR_INDEX      5</span></div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="code" href="group__micro.htm#ga7a6f4aff67a923c826c04f96e1365044">  127</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define USAGE_FAULT_VECTOR_INDEX    6</span></div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="group__micro.htm#ga9dff9b1aa89d01f055f0dc0b470f7e49">  128</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESERVED07_VECTOR_INDEX     7</span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="group__micro.htm#gafa6ebbbde4842662dcf67f0da9eb5fc6">  129</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESERVED08_VECTOR_INDEX     8</span></div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="code" href="group__micro.htm#gae494ea796a6859c2dcac7be445d87efa">  130</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESERVED09_VECTOR_INDEX     9</span></div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="code" href="group__micro.htm#gaf81a7558bf5686e82da098f5605d691d">  131</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESERVED10_VECTOR_INDEX     10</span></div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="group__micro.htm#gaf8b4b7518c139f6fa9132bed4e1ec754">  132</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SVCALL_VECTOR_INDEX         11</span></div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="code" href="group__micro.htm#ga0635368c6734dcf5aa7b7b0797da9ae2">  133</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define DEBUG_MONITOR_VECTOR_INDEX  12</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="group__micro.htm#ga11bf007d2aeebca61337107e8ba3b9cd">  134</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define RESERVED13_VECTOR_INDEX     13</span></div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="code" href="group__micro.htm#ga601d6c6bf5aebaceddff84a3e56b12c8">  135</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PENDSV_VECTOR_INDEX         14</span></div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="group__micro.htm#gab5b1c8f3aad76bcf8718440930f1d4e4">  136</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SYSTICK_VECTOR_INDEX        15</span></div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="code" href="group__micro.htm#ga5d06296c8c798bd09d57a0858ac401f3">  137</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TIMER1_VECTOR_INDEX         16</span></div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="code" href="group__micro.htm#ga64fef60be24fc3892b4c31b205ef3190">  138</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TIMER2_VECTOR_INDEX         17</span></div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="code" href="group__micro.htm#gad98936ac97a8819a64cd88c459c8755b">  139</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MANAGEMENT_VECTOR_INDEX     18</span></div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="group__micro.htm#gaa52af743bf85252ecc39b19de8e4c2c5">  140</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BASEBAND_VECTOR_INDEX       19</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="group__micro.htm#ga001a87833822bc3ee57a4431c3d25390">  141</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SLEEP_TIMER_VECTOR_INDEX    20</span></div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="group__micro.htm#gab1419626ad81d23789299597baa617d1">  142</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SC1_VECTOR_INDEX            21</span></div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="group__micro.htm#ga009cf27efdf645f38a3a724bf4a7b329">  143</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SC2_VECTOR_INDEX            22</span></div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="code" href="group__micro.htm#gac05d27d9c85f2f58742eb5902bbeef8d">  144</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SECURITY_VECTOR_INDEX       23</span></div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="code" href="group__micro.htm#gaad4859427c612621ec0faf8b980418fb">  145</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MAC_TIMER_VECTOR_INDEX      24</span></div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="group__micro.htm#ga739e7bef65ca92091adace6c5b78dfa1">  146</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MAC_TX_VECTOR_INDEX         25</span></div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="group__micro.htm#gae5bfe3e05c737acc6655d50bf11dfc8d">  147</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define MAC_RX_VECTOR_INDEX         26</span></div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="code" href="group__micro.htm#ga6bda7aead066bd56c814954ea088b281">  148</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ADC_VECTOR_INDEX            27</span></div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="group__micro.htm#gaf39b6c022e1dda26af0ce606bffe9b2a">  149</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define IRQA_VECTOR_INDEX           28</span></div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="group__micro.htm#gae954e75b2989b7f568986fac1eb886d5">  150</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define IRQB_VECTOR_INDEX           29</span></div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="code" href="group__micro.htm#ga058c49431e4c80cd9ab986e315e61aa6">  151</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define IRQC_VECTOR_INDEX           30</span></div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="code" href="group__micro.htm#ga4d4567f2694781cddd228d735e6e9239">  152</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define IRQD_VECTOR_INDEX           31</span></div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="group__micro.htm#ga01d9f7cbf80e37b7b57235dcbb417700">  153</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define DEBUG_VECTOR_INDEX          32</span></div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="group__micro.htm#gabc76e5d99522a70c589ab6e3b4f16655">  154</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SC3_VECTOR_INDEX            33</span></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="group__micro.htm#ga99dd6bde3fbf640707c53c8aee0529fc">  155</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SC4_VECTOR_INDEX            34</span></div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="group__micro.htm#ga34a4cb988ab2bd078975ed05b30288ba">  156</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define USB_VECTOR_INDEX            35</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="group__micro.htm#ga1888f3e770c6dab0f048e205e7fa818a">  161</a></span>&#160;<span class="preprocessor">#define VECTOR_TABLE_LENGTH         36</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga18173f8f2caf8644be351de9950969b5" title="Records the specified reset cause then forces a reboot.">halInternalSysReset</a>(uint16_t extendedCause);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;uint16_t <a class="code" href="group__micro.htm#ga668f528b4e6a3a65b75b82e18ba5ec06" title="Returns the Extended Reset Cause information.">halGetExtendedResetInfo</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;PGM_P <a class="code" href="group__micro.htm#gaa5117a1a168bae18f701c70b8df9287d" title="Calls halGetExtendedResetInfo() and supplies a string describing the extended cause of the reset...">halGetExtendedResetString</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">//[[ ram vectors are not public</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;uint32_t halRegisterRamVector(uint8_t vectorNumber, uint32_t newVector);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;uint32_t halUnRegisterRamVector(uint8_t vectorNumber);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">#endif // DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor"></span><span class="comment">//]]</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<a class="code" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__micro.htm#gadd8e004ec902a5a4e2626a6043c55d1c" title="Enables or disables Radio HoldOff support.">halSetRadioHoldOff</a>(<span class="keywordtype">bool</span> enable);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__micro.htm#gac00f2de1012daab301edc8c456609901" title="Returns whether Radio HoldOff has been enabled or not.">halGetRadioHoldOff</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga69448178df8fbe4fa5eca0f2488fd9d0" title="To assist with saving power when the radio automatically powers down, this function allows the stack ...">halStackRadioPowerDownBoard</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#gae85b370a13e0775ed7d95098a02f52cb" title="To assist with saving power when radio2 automatically powers down, this function allows the stack to ...">halStackRadio2PowerDownBoard</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga80418d3f25bc0fc0708b6c25785984f9" title="To assist with saving power when the radio automatically powers up, this function allows the stack to...">halStackRadioPowerUpBoard</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga010be1855c6d1248080d4f12a3ac5626" title="To assist with saving power when radio2 automatically powers up, this function allows the stack to te...">halStackRadio2PowerUpBoard</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga13e383840836b81b22b825b3ec3f9c2a" title="This function is called automatically by the stack prior to Radio power-up and after Radio power-down...">halStackRadioPowerMainControl</a>(<span class="keywordtype">bool</span> powerUp);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga4086b8a6bc6e5e02db4cc511d99df94f" title="Handler called in main context prior to radio being powered on.">halRadioPowerUpHandler</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__micro.htm#ga9bdc7a9f123c8a61c18828cad7a70301" title="Handler called in main context after radio has been powered off.">halRadioPowerDownHandler</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="micro-common_8h.htm" title="Minimal Hal functions common across all microcontroller-specific files. See Common Microcontroller Fu...">micro-common.h</a>&quot;</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">// Enable PTA Support</span></div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="code" href="group__micro.htm#gaa27da562e4c6418c88adc3a051a66bb8">  315</a></span>&#160;<span class="preprocessor">#define PTA_SUPPORT</span></div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="code" href="group__micro.htm#ga77640a7db9badfbb4b80932354b89d61">  316</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PTA_GPIOCFG_INPUT     GPIOCFG_IN_PUD</span></div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="code" href="group__micro.htm#gadc21c1f9e567452e9519ac47a08ac075">  317</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PTA_GPIOCFG_OUTPUT    GPIOCFG_OUT</span></div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="code" href="group__micro.htm#gaf891ebaadc7d5da76213fe95580a9bd6">  318</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PTA_GPIOCFG_WIRED_OR  GPIOCFG_OUT_OD</span></div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="code" href="group__micro.htm#ga03fc511dd6dad06781ec4f2237dd71a0">  319</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PTA_GPIOCFG_WIRED_AND GPIOCFG_OUT_OD</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="preprocessor">#endif //__EM3XX_MICRO_H__</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
