<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cortexm3_2token_8h.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">cortexm3/token.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;mfg-token.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="token-stack_8h_source.htm">stack/config/token-stack.h</a>&quot;</code><br/>
</div>
<p><a href="cortexm3_2token_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a0ae7be91237ca50802b5753c7444e12d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a0ae7be91237ca50802b5753c7444e12d">DEFINETYPES</a></td></tr>
<tr class="separator:a0ae7be91237ca50802b5753c7444e12d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cda2ddfec00ccd90721cc1a1e4aad8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a04cda2ddfec00ccd90721cc1a1e4aad8">DEFINETOKENS</a></td></tr>
<tr class="separator:a04cda2ddfec00ccd90721cc1a1e4aad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5189a842b64a8355f6601f129b7edc05"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a5189a842b64a8355f6601f129b7edc05">TOKEN_DEF</a>(name, creator, iscnt, isidx, type, arraysize,...)</td></tr>
<tr class="separator:a5189a842b64a8355f6601f129b7edc05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5189a842b64a8355f6601f129b7edc05"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a5189a842b64a8355f6601f129b7edc05">TOKEN_DEF</a>(name, creator, iscnt, isidx, type, arraysize,...)</td></tr>
<tr class="separator:a5189a842b64a8355f6601f129b7edc05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c430e232fe185227dfb185602a1814"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a46c430e232fe185227dfb185602a1814">COUNTER_TOKEN_PAD</a></td></tr>
<tr class="separator:a46c430e232fe185227dfb185602a1814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5189a842b64a8355f6601f129b7edc05"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a5189a842b64a8355f6601f129b7edc05">TOKEN_DEF</a>(name, creator, iscnt, isidx, type, arraysize,...)</td></tr>
<tr class="separator:a5189a842b64a8355f6601f129b7edc05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cdf205aa0e67b9508ce927b52a6875a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a1cdf205aa0e67b9508ce927b52a6875a">halCommonGetToken</a>(data, token)</td></tr>
<tr class="separator:a1cdf205aa0e67b9508ce927b52a6875a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d7f03bfb03f29e528d36035ecbf4c23"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a8d7f03bfb03f29e528d36035ecbf4c23">halCommonGetIndexedToken</a>(data, token, index)</td></tr>
<tr class="separator:a8d7f03bfb03f29e528d36035ecbf4c23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5c51e10a8f589ec91fa4c840a52a7a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#adc5c51e10a8f589ec91fa4c840a52a7a">halStackGetIndexedToken</a>(data, token, index, size)</td></tr>
<tr class="separator:adc5c51e10a8f589ec91fa4c840a52a7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3140e8c6bd6fa7dfe9a6e5f921298672"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a3140e8c6bd6fa7dfe9a6e5f921298672">halStackGetIdxTokenPtrOrData</a>(ptr, token, index)</td></tr>
<tr class="separator:a3140e8c6bd6fa7dfe9a6e5f921298672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b75375d668ed0a061a3351e879a87e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#ab7b75375d668ed0a061a3351e879a87e">halCommonSetToken</a>(token, data)</td></tr>
<tr class="separator:ab7b75375d668ed0a061a3351e879a87e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632ff9591650d5721a447413a5d1505d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a632ff9591650d5721a447413a5d1505d">halCommonSetIndexedToken</a>(token, index, data)</td></tr>
<tr class="separator:a632ff9591650d5721a447413a5d1505d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c48de8d41201457e03c18a91c6e18b5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a4c48de8d41201457e03c18a91c6e18b5">halStackSetIndexedToken</a>(token, index, data, size)</td></tr>
<tr class="separator:a4c48de8d41201457e03c18a91c6e18b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93c5e6c239ea037dc42a368b9a875244"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a93c5e6c239ea037dc42a368b9a875244">halCommonIncrementCounterToken</a>(token)</td></tr>
<tr class="separator:a93c5e6c239ea037dc42a368b9a875244"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a06fc87d81c62e9abb8790b6e5713c55b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br/>
&#160;&#160;<a class="el" href="cortexm3_2token_8h.htm#adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299">DEFINE_BASIC_TOKEN</a>, 
<br/>
&#160;&#160;<a class="el" href="cortexm3_2token_8h.htm#adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299">DEFINE_BASIC_TOKEN</a>
<br/>
 }</td></tr>
<tr class="separator:a06fc87d81c62e9abb8790b6e5713c55b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf764cbdea00d65edcd07bb9953ad2b7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br/>
&#160;&#160;<a class="el" href="cortexm3_2token_8h.htm#adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299">DEFINE_BASIC_TOKEN</a>, 
<br/>
&#160;&#160;<a class="el" href="cortexm3_2token_8h.htm#adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299">DEFINE_BASIC_TOKEN</a>
<br/>
 }</td></tr>
<tr class="separator:adf764cbdea00d65edcd07bb9953ad2b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aaf4c149ac8fe23bf48ab142f79fea6b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#aaf4c149ac8fe23bf48ab142f79fea6b6">halInternalGetTokenData</a> (void *data, uint16_t token, uint8_t index, uint8_t len)</td></tr>
<tr class="separator:aaf4c149ac8fe23bf48ab142f79fea6b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40b7284c4a7276cf40371e57b5c8fc8c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a40b7284c4a7276cf40371e57b5c8fc8c">halInternalSetTokenData</a> (uint16_t token, uint8_t index, void *data, uint8_t len)</td></tr>
<tr class="separator:a40b7284c4a7276cf40371e57b5c8fc8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac06f01916c1c4e27cb4862921a4bd297"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#ac06f01916c1c4e27cb4862921a4bd297">halInternalIncrementCounterToken</a> (uint8_t token)</td></tr>
<tr class="separator:ac06f01916c1c4e27cb4862921a4bd297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9e6697f254212e610c6806b487d8098"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#af9e6697f254212e610c6806b487d8098">halInternalGetIdxTokenPtr</a> (void *ptr, uint16_t ID, uint8_t index, uint8_t len)</td></tr>
<tr class="separator:af9e6697f254212e610c6806b487d8098"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ab6e7f66a0d5ad0378c1c105a6063d33b"><td class="memItemLeft" align="right" valign="top">const uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#ab6e7f66a0d5ad0378c1c105a6063d33b">tokenCreators</a> []</td></tr>
<tr class="separator:ab6e7f66a0d5ad0378c1c105a6063d33b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0f313156e1d42db725466c5e0058a74"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#ab0f313156e1d42db725466c5e0058a74">tokenIsCnt</a> []</td></tr>
<tr class="separator:ab0f313156e1d42db725466c5e0058a74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a188fe9ebb67d5caca2cfa2313fe024ce"><td class="memItemLeft" align="right" valign="top">const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a188fe9ebb67d5caca2cfa2313fe024ce">tokenSize</a> []</td></tr>
<tr class="separator:a188fe9ebb67d5caca2cfa2313fe024ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ae57baa2c9c9a8aae4aae4322533fe"><td class="memItemLeft" align="right" valign="top">const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a71ae57baa2c9c9a8aae4aae4322533fe">tokenArraySize</a> []</td></tr>
<tr class="separator:a71ae57baa2c9c9a8aae4aae4322533fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c1a133e429101894552bb2fa67bfeef"><td class="memItemLeft" align="right" valign="top">const void *const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cortexm3_2token_8h.htm#a9c1a133e429101894552bb2fa67bfeef">tokenDefaults</a> []</td></tr>
<tr class="separator:a9c1a133e429101894552bb2fa67bfeef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Cortex-M3 Token system for storing non-volatile information. See <a class="el" href="group__token.htm">Tokens</a> for documentation. </p>
<p>DOXYGEN NOTE: This file contains definitions, functions, and information that are internal only and should not be accessed by appilications. This information is still documented, but should not be published in the generated doxygen. </p>

<p>Definition in file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a0ae7be91237ca50802b5753c7444e12d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFINETYPES</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Simple declarations of all of the token types so that they can be referenced from anywhere in the code base. </dd></dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00039">39</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a04cda2ddfec00ccd90721cc1a1e4aad8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFINETOKENS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00046">46</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5189a842b64a8355f6601f129b7edc05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TOKEN_DEF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">creator, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">iscnt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">isidx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">type, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arraysize, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Enum for translating token defs into a number. This number is used as an index into the cache of token information the token system and Simulated EEPROM hold.</dd></dl>
<p>The special entry TOKEN_COUNT is always at the top of the enum, allowing the token and sim-eeprom system to know how many tokens there are.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for translating token definitions into size variables. This provides a convenience for abstracting the 'sizeof(type)' anywhere.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for typedef'ing the CamelCase token type found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a> to a capitalized TOKEN style name that ends in _TYPE. This macro allows other macros below to use 'token##_TYPE' to declare a local copy of that token.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00163">163</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5189a842b64a8355f6601f129b7edc05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TOKEN_DEF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">creator, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">iscnt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">isidx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">type, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arraysize, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Enum for translating token defs into a number. This number is used as an index into the cache of token information the token system and Simulated EEPROM hold.</dd></dl>
<p>The special entry TOKEN_COUNT is always at the top of the enum, allowing the token and sim-eeprom system to know how many tokens there are.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for translating token definitions into size variables. This provides a convenience for abstracting the 'sizeof(type)' anywhere.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for typedef'ing the CamelCase token type found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a> to a capitalized TOKEN style name that ends in _TYPE. This macro allows other macros below to use 'token##_TYPE' to declare a local copy of that token.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00163">163</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a46c430e232fe185227dfb185602a1814"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COUNTER_TOKEN_PAD</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>A define for the token and Simulated EEPROM system that specifies, in bytes, the space allocated to a counter token for +1 marks. The number of +1 marks varies between chips based on the minimum write granularity for a chip's flash. EM35x chips can use 8bit per +1 while EFM32/EZM32/EZR32 chips use 16bit per +1. </dd></dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00149">149</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5189a842b64a8355f6601f129b7edc05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TOKEN_DEF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">creator, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">iscnt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">isidx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">type, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arraysize, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Enum for translating token defs into a number. This number is used as an index into the cache of token information the token system and Simulated EEPROM hold.</dd></dl>
<p>The special entry TOKEN_COUNT is always at the top of the enum, allowing the token and sim-eeprom system to know how many tokens there are.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for translating token definitions into size variables. This provides a convenience for abstracting the 'sizeof(type)' anywhere.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Description:</dt><dd>Macro for typedef'ing the CamelCase token type found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a> to a capitalized TOKEN style name that ends in _TYPE. This macro allows other macros below to use 'token##_TYPE' to declare a local copy of that token.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name,:</td><td>The name of the token.</td></tr>
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00163">163</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1cdf205aa0e67b9508ce927b52a6875a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halCommonGetToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00236">236</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8d7f03bfb03f29e528d36035ecbf4c23"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halCommonGetIndexedToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00239">239</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="adc5c51e10a8f589ec91fa4c840a52a7a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halStackGetIndexedToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">size&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00242">242</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3140e8c6bd6fa7dfe9a6e5f921298672"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halStackGetIdxTokenPtrOrData</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ptr, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00245">245</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab7b75375d668ed0a061a3351e879a87e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halCommonSetToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00249">249</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a632ff9591650d5721a447413a5d1505d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halCommonSetIndexedToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00252">252</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4c48de8d41201457e03c18a91c6e18b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halStackSetIndexedToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">data, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">size&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00255">255</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="a93c5e6c239ea037dc42a368b9a875244"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define halCommonIncrementCounterToken</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">token</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00258">258</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="a06fc87d81c62e9abb8790b6e5713c55b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299"></a>DEFINE_BASIC_TOKEN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299"></a>DEFINE_BASIC_TOKEN</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00062">62</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<a class="anchor" id="adf764cbdea00d65edcd07bb9953ad2b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299"></a>DEFINE_BASIC_TOKEN</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="adf764cbdea00d65edcd07bb9953ad2b7a9415edd3c93923af792c9a4a05c52299"></a>DEFINE_BASIC_TOKEN</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="cortexm3_2token_8h_source.htm#l00079">79</a> of file <a class="el" href="cortexm3_2token_8h_source.htm">cortexm3/token.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aaf4c149ac8fe23bf48ab142f79fea6b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalGetTokenData </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Copies the token value from non-volatile storage into a RAM location. This is the internal function that the two exposed APIs (halCommonGetToken and halCommonGetIndexedToken) expand out to. The API simplifies the access into this function by hiding the size parameter and hiding the value 0 used for the index parameter in scalar tokens.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Only the public function should be called since the public function provides the correct parameters.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data,:</td><td>A pointer to where the data being read should be placed.</td></tr>
    <tr><td class="paramname">token,:</td><td>The name of the token to get data from. On this platform that name is defined as an address.</td></tr>
    <tr><td class="paramname">index,:</td><td>The index to access. If the token being accessed is not an indexed token, this parameter is set by the API to be 0.</td></tr>
    <tr><td class="paramname">len,:</td><td>The length of the token being worked on. This value is automatically set by the API to be the size of the token. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a40b7284c4a7276cf40371e57b5c8fc8c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalSetTokenData </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Sets the value of a token in non-volatile storage. This is the internal function that the two exposed APIs (halCommonSetToken and halCommonSetIndexedToken) expand out to. The API simplifies the access into this function by hiding the size parameter and hiding the value 0 used for the index parameter in scalar tokens.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Only the public function should be called since the public function provides the correct parameters.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token,:</td><td>The name of the token to get data from. On this platform that name is defined as an address.</td></tr>
    <tr><td class="paramname">index,:</td><td>The index to access. If the token being accessed is not an indexed token, this parameter is set by the API to be 0.</td></tr>
    <tr><td class="paramname">data,:</td><td>A pointer to the data being written.</td></tr>
    <tr><td class="paramname">len,:</td><td>The length of the token being worked on. This value is automatically set by the API to be the size of the token. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac06f01916c1c4e27cb4862921a4bd297"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalIncrementCounterToken </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>token</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>Increments the value of a token that is a counter. This is the internal function that the exposed API (halCommonIncrementCounterToken) expand out to. This internal function is used as a level of simple redirection providing clean separation from the lower token handler code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Only the public function should be called since the public function provides the correct parameters.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token,:</td><td>The name of the token. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af9e6697f254212e610c6806b487d8098"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalGetIdxTokenPtr </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>ID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="ab6e7f66a0d5ad0378c1c105a6063d33b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint16_t tokenCreators[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>External declaration of an array of creator codes. Since the token and sim-eeprom systems identify tokens through an enum (see below for the enum) and these two systems need to link creator codes to their tokens, this array instantiates that link.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">creator,:</td><td>The creator code type. The codes are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab0f313156e1d42db725466c5e0058a74"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool tokenIsCnt[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>External declaration of an array of IsCnt flags. Since the token and sim-eeprom systems identify tokens through an enum (see below for the enum) and these two systems need to know which tokens are counter tokens, this array provides that information.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iscnt,:</td><td>The flag indicating if the token is a counter. The iscnt's are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a188fe9ebb67d5caca2cfa2313fe024ce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t tokenSize[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>External declaration of an array of sizes. Since the token and sim-eeprom systems identify tokens through an enum (see below for the enum) and these two systems need to know the size of each token, this array provides that information.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type,:</td><td>The token type. The types are found in <a class="el" href="token-stack_8h.htm" title="Definitions for stack tokens. See Stack Tokens for documentation.">token-stack.h</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a71ae57baa2c9c9a8aae4aae4322533fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t tokenArraySize[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>External declaration of an array of array sizes. Since the token and sim-eeprom systems identify tokens through an enum (see below for the enum) and these two systems need to know the array size of each token, this array provides that information.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arraysize,:</td><td>The array size. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9c1a133e429101894552bb2fa67bfeef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void* const tokenDefaults[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Description:</dt><dd>External declaration of an array of all token default values. This array is filled with pointers to the set of constant declarations of all of the token default values. Therefore, the index into this array chooses which token's defaults to access, and the address offset chooses the byte in the defaults to use.</dd></dl>
<p>For example, to get the n-th byte of the i-th token, use: uint8_t byte = *(((uint8_t *)tokenDefaults[i])+(n)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramtype">TOKEN_</td><td class="paramname">#name##_DEFAULTS,:</td><td>A constant declaration of the token default values, generated for all tokens. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
