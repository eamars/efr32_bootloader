<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('token-stack_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">token-stack.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="token-stack_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">// The basic TOKEN_DEF macro should not be used directly since the simplified</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">//  definitions are safer to use.  For completeness of information, the basic</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">//  macro has the following format:</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">//  TOKEN_DEF(name,creator,iscnt,isidx,type,arraysize,...)</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">//  name - The root name used for the token</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">//  creator - a &quot;creator code&quot; used to uniquely identify the token</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">//  iscnt - a boolean flag that is set to identify a counter token</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">//  isidx - a boolean flag that is set to identify an indexed token</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">//  type - the basic type or typdef of the token</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">//  arraysize - the number of elements making up an indexed token</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">//  ... - initializers used when reseting the tokens to default values</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">// The following convenience macros are used to simplify the definition</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">//  process for commonly specified parameters to the basic TOKEN_DEF macro</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">//  DEFINE_BASIC_TOKEN(name, type, ...)</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">//  DEFINE_INDEXED_TOKEN(name, type, arraysize, ...)</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">//  DEFINE_COUNTER_TOKEN(name, type, ...)</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">//  DEFINE_FIXED_BASIC_TOKEN(name, type, address, ...)</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">//  DEFINE_FIXED_INDEXED_TOKEN(name, type, arraysize, address, ...)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">//  DEFINE_FIXED_COUNTER_TOKEN(name, type, address, ...)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">//  DEFINE_MFG_TOKEN(name, type, address, ...)</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">   77</a></span>&#160;<span class="preprocessor">#define DEFINE_BASIC_TOKEN(name, type, ...)  \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 0, 0, type, 1,  __VA_ARGS__)</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga78dfccd49bb96022a5c38303c172d8b7">   80</a></span>&#160;<span class="preprocessor">#define DEFINE_COUNTER_TOKEN(name, type, ...)  \</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 1, 0, type, 1,  __VA_ARGS__)</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="code" href="group__token__stack.htm#gaf9abd8d0c4ff19e503e3477e4b6a863c">   83</a></span>&#160;<span class="preprocessor">#define DEFINE_INDEXED_TOKEN(name, type, arraysize, ...)  \</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 0, 1, type, (arraysize),  __VA_ARGS__)</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga5a23ccdc591883ffc8d353ba7174cc75">   86</a></span>&#160;<span class="preprocessor">#define DEFINE_FIXED_BASIC_TOKEN(name, type, address, ...)  \</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">  TOKEN_NEXT_ADDRESS(name,(address))                          \</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 0, 0, type, 1,  __VA_ARGS__)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga914748000eddbfea0368f9df56165034">   90</a></span>&#160;<span class="preprocessor">#define DEFINE_FIXED_COUNTER_TOKEN(name, type, address, ...)  \</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">  TOKEN_NEXT_ADDRESS(name,(address))                            \</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 1, 0, type, 1,  __VA_ARGS__)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga24a2fc370062385989045a1bd74324af">   94</a></span>&#160;<span class="preprocessor">#define DEFINE_FIXED_INDEXED_TOKEN(name, type, arraysize, address, ...)  \</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">  TOKEN_NEXT_ADDRESS(name,(address))                                       \</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">  TOKEN_DEF(name, CREATOR_##name, 0, 1, type, (arraysize),  __VA_ARGS__)</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga006255fff5ca38bbdfdb2989a565b178">   98</a></span>&#160;<span class="preprocessor">#define DEFINE_MFG_TOKEN(name, type, address, ...)  \</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">  TOKEN_NEXT_ADDRESS(name,(address))                  \</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">  TOKEN_MFG(name, CREATOR_##name, 0, 0, type, 1,  __VA_ARGS__)</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">// The Simulated EEPROM unit tests define all of their own tokens.</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">#ifndef SIM_EEPROM_TEST</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">// The creator codes are here in one list instead of next to their token</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">// definitions so comparision of the codes is easier.  The only requirement</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">// on these creator definitions is that they all must be unique.  A favorite</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">// method for picking creator codes is to use two ASCII characters inorder</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">// to make the codes more memorable.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">// STACK CREATORS</span></div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga022fc57c48683ed95b65884daa186bf2">  127</a></span>&#160;<span class="preprocessor">#define CREATOR_STACK_NVDATA_VERSION                         0x0001</span></div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga4f540e9b535cca476639b672ab336bdf">  128</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_ANALYSIS_REBOOT                        0x0002</span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga27d70e009527f1c0f65470c45ec1e347">  129</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_NODE_DATA                              0x0003</span></div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="code" href="group__token__stack.htm#gaf18376fc56451e4f430e5c9396326888">  130</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_SECURITY_KEY                           0x0004</span></div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="code" href="group__token__stack.htm#gaeb9bc13c387e34deb35e981dd9c1a276">  131</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_NONCE_COUNTER                          0x0005</span></div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="group__token__stack.htm#gab7c82e53b800c272d92157381cfb84f7">  132</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_CHILD_TABLE                            0x0006</span></div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga7aa8b9e2e23e71f9b5c41e84c98b8f58">  133</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_LAST_ASSIGNED_ID                       0x0007</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga748055bb8e63111b0f8cb39a1996128b">  134</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define CREATOR_STACK_BOOT_COUNTER                           0x0008</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">// MANUFACTURING DATA</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">// Since the manufacturing data is platform specific, we pull in the proper</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">// file here.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">#if defined(CORTEXM3)</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor"></span>  <span class="comment">// cortexm3 handles mfg tokens seperately via mfg-token.h</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">#elif defined(EMBER_TEST)</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #include &quot;hal/micro/cortexm3/efm32/token-manufacturing.h&quot;</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #error no platform defined</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">// STACK DATA</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">// *the addresses of these tokens must not change*</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="code" href="group__token__stack.htm#ga92b45fff6c2f0b6f2645c278d52893b3">  162</a></span>&#160;<span class="preprocessor">#define CURRENT_STACK_TOKEN_VERSION 0x03FC //MSB is version, LSB is complement</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#ifdef DEFINETYPES</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">typedef</span> uint16_t tokTypeStackNvdataVersion;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">typedef</span> uint16_t tokTypeStackAnalysisReboot;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">typedef</span> uint32_t tokTypeStackNonceCounter;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  uint8_t networkKey[16];</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;} tokTypeStackKey;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  uint16_t panId;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  int8_t radioTxPower;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  uint8_t radioFreqChannel;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  uint8_t nodeType;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  uint16_t nodeId;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  uint16_t parentId;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;} tokTypeStackNodeData;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <a class="code" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> longId;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <a class="code" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce" title="802.15.4 node ID.">EmberNodeId</a> shortId;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  uint8_t flags;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;} tokTypeStackChildTableEntry;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">typedef</span> uint16_t tokTypeStackLastAllocatedId;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">typedef</span> uint16_t tokTypeStackBootCounter;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor">#endif //DEFINETYPES</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#ifdef DEFINETOKENS</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">DEFINE_BASIC_TOKEN</a>(STACK_NVDATA_VERSION,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                   tokTypeStackNvdataVersion,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                   <a class="code" href="group__token__stack.htm#ga92b45fff6c2f0b6f2645c278d52893b3" title="The current version number of the stack tokens. MSB is the version, LSB is a complement.">CURRENT_STACK_TOKEN_VERSION</a>)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">DEFINE_BASIC_TOKEN</a>(STACK_ANALYSIS_REBOOT,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                   tokTypeStackAnalysisReboot,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                   0x0000)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">DEFINE_BASIC_TOKEN</a>(STACK_SECURITY_KEY,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                   tokTypeStackKey,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                   {0,})</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">DEFINE_BASIC_TOKEN</a>(STACK_NODE_DATA,</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                   tokTypeStackNodeData,</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                   {0xFFFF, 0, 0xFF, 0xFF, 0xFFFF, 0xFFFF})</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<a class="code" href="group__token__stack.htm#ga3e10c86994d2a8e0e712683d60797e20">DEFINE_BASIC_TOKEN</a>(STACK_LAST_ASSIGNED_ID,</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                   tokTypeStackLastAllocatedId,</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                   0x0000)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<a class="code" href="group__token__stack.htm#gaf9abd8d0c4ff19e503e3477e4b6a863c">DEFINE_INDEXED_TOKEN</a>(STACK_CHILD_TABLE,</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                     tokTypeStackChildTableEntry,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                     <a class="code" href="group__configuration.htm#gae94a603f06f88013d4af47d8802cff71">EMBER_CHILD_TABLE_TOKEN_SIZE</a>,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                     {0,})</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<a class="code" href="group__token__stack.htm#ga78dfccd49bb96022a5c38303c172d8b7">DEFINE_COUNTER_TOKEN</a>(STACK_NONCE_COUNTER,</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                     tokTypeStackNonceCounter,</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                     0x00000000)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<a class="code" href="group__token__stack.htm#ga78dfccd49bb96022a5c38303c172d8b7">DEFINE_COUNTER_TOKEN</a>(STACK_BOOT_COUNTER,</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                     tokTypeStackBootCounter,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                     0x0000)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#endif //DEFINETOKENS</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#ifdef PHY_EM3XX</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">// PHY DATA</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#include &quot;token-phy.h&quot;</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">#ifdef MAC_DEBUG_TOKEN</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">// MAC DEBUG DATA</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#include &quot;stack/mac/token-mac-debug.h&quot;</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">// APPLICATION DATA</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#ifdef APPLICATION_TOKEN_HEADER</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #include APPLICATION_TOKEN_HEADER</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#else //SIM_EEPROM_TEST</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="comment">//The Simulated EEPROM unit tests define all of their tokens via the</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="comment">//APPLICATION_TOKEN_HEADER macro.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">  #ifdef APPLICATION_TOKEN_HEADER</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor"></span><span class="preprocessor">    #include APPLICATION_TOKEN_HEADER</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #endif</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#endif //SIM_EEPROM_TEST</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
