<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__ota__bootloader__client.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Ota Bootloader Client Plugin</div>  </div>
<div class="ingroups"><a class="el" href="group__silabs__connect__af.htm">Silicon Labs Connect Application Framework API Reference</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga68ba6527073a49e83576ba324dc21452"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b">EmberAfOtaBootloaderStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#ga68ba6527073a49e83576ba324dc21452">emberAfPluginOtaBootloaderClientAbortImageDownload</a> (uint8_t imageTag, uint8_t applicationErrorStatus)</td></tr>
<tr class="separator:ga68ba6527073a49e83576ba324dc21452"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c0b81ec98d6fbf98c772c265ea3ab14"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#ga6c0b81ec98d6fbf98c772c265ea3ab14">emberAfPluginOtaBootloaderClientNewIncomingImageCallback</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> serverId, <a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> *alternateServerId, uint8_t imageTag)</td></tr>
<tr class="separator:ga6c0b81ec98d6fbf98c772c265ea3ab14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa44c14e7de8726258142eb8dfbe8d3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#gaaa44c14e7de8726258142eb8dfbe8d3e">emberAfPluginOtaBootloaderClientIncomingImageSegmentCallback</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> serverId, uint32_t startIndex, uint32_t endIndex, uint8_t imageTag, uint8_t *imageSegment)</td></tr>
<tr class="separator:gaaa44c14e7de8726258142eb8dfbe8d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a8bac6cfa774aa85840dc444eb78e65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#ga9a8bac6cfa774aa85840dc444eb78e65">emberAfPluginOtaBootloaderClientImageDownloadCompleteCallback</a> (<a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b">EmberAfOtaBootloaderStatus</a> status, uint8_t imageTag, uint32_t imageSize)</td></tr>
<tr class="separator:ga9a8bac6cfa774aa85840dc444eb78e65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30aeb975c38bc1c9ff05110c59afe896"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#ga30aeb975c38bc1c9ff05110c59afe896">emberAfPluginOtaBootloaderClientIncomingRequestStatusCallback</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> serverId, uint8_t applicationServerStatus, uint8_t *applicationStatus)</td></tr>
<tr class="separator:ga30aeb975c38bc1c9ff05110c59afe896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd08010ca8d9c070955cac3179457309"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ota__bootloader__client.htm#gabd08010ca8d9c070955cac3179457309">emberAfPluginOtaBootloaderClientIncomingRequestBootloadCallback</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> serverId, uint8_t imageTag, uint32_t bootloadDelayMs, uint8_t *applicationStatus)</td></tr>
<tr class="separator:gabd08010ca8d9c070955cac3179457309"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>See <a class="el" href="ota-bootloader-client_8h.htm">ota-bootloader-client.h</a> for source code. </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga68ba6527073a49e83576ba324dc21452"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b">EmberAfOtaBootloaderStatus</a> emberAfPluginOtaBootloaderClientAbortImageDownload </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>imageTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>applicationErrorStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>An API for aborting an ongoing image download process. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">imageTag</td><td>A 1-byte tag that identifies the image the client should no longer download.</td></tr>
    <tr><td class="paramname">applicationErrorStatus</td><td>A 1-byte error code that shall be reported to the server.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b" title="Ota Bootloader return status codes.">EmberAfOtaBootloaderStatus</a> value of:<ul>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9ba01f128f6147cdeb41e2fb5457a4de9dd">EMBER_OTA_BOOTLOADER_STATUS_SUCCESS</a> If the ongoing image download process was successfully aborted.</li>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9ba59a1bd070bd8d66c3b7f8654f699bcc1">EMBER_OTA_BOOTLOADER_STATUS_INVALID_CALL</a> If the client was not currently involved in an image download process or it was currently downloading an image with a different tag. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga6c0b81ec98d6fbf98c772c265ea3ab14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberAfPluginOtaBootloaderClientNewIncomingImageCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> *&#160;</td>
          <td class="paramname"><em>alternateServerId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>imageTag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked by the OTA Client plugin when the client starts receiving a new image. The application can choose to start receiving the image or ignore it. If the application chooses to receive the image, other images sent out by other server shall be ignored until the client completes this download. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serverId</td><td>The node ID of the server that initiated the new image distribution process.</td></tr>
    <tr><td class="paramname">alternateServerId</td><td>This node ID can be set by the application to include a well-known alternate server. If this is set to a valid address, the client will be allowing segments also from this alternate server. If this is set to <a class="el" href="group__ember__types.htm#gaead827acd39e0bbba3d6e6090c6d83f8">EMBER_BROADCAST_ADDRESS</a>, the client shall accept segments with the same image tag from any server.</td></tr>
    <tr><td class="paramname">imageTag</td><td>A 1-byte tag that identifies the incoming image. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaaa44c14e7de8726258142eb8dfbe8d3e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberAfPluginOtaBootloaderClientIncomingImageSegmentCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>startIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>endIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>imageTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>imageSegment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked by the OTA Bootloader Client plugin when an image segment that is part of an image that the application elected to download was received. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serverId</td><td>The node ID of the server that initiated the new image distribution process.</td></tr>
    <tr><td class="paramname">startIndex</td><td>The index of first byte of the passed segment.</td></tr>
    <tr><td class="paramname">endIndex</td><td>The index of the last byte of the passed segment.</td></tr>
    <tr><td class="paramname">imageTag</td><td>A 1-byte tag of the image the passed segment belongs to.</td></tr>
    <tr><td class="paramname">imageSegment</td><td>An array containing the image segment. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga9a8bac6cfa774aa85840dc444eb78e65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberAfPluginOtaBootloaderClientImageDownloadCompleteCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b">EmberAfOtaBootloaderStatus</a>&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>imageTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>imageSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked by the OTA Bootloader Client plugin to indicate that an image downlaod has completed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">status</td><td>An <a class="el" href="group__ota__bootloader__common.htm#gac36608b8807aaef08394730728c12a9b" title="Ota Bootloader return status codes.">EmberAfOtaBootloaderStatus</a> value of:<ul>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9ba01f128f6147cdeb41e2fb5457a4de9dd">EMBER_OTA_BOOTLOADER_STATUS_SUCCESS</a> indicating that the full image corresponding to the passed tag has been received. If this is the case, the client previously handed all the image segments to the application using the <a class="el" href="group__ota__bootloader__client.htm#gaaa44c14e7de8726258142eb8dfbe8d3e" title="A callback invoked by the OTA Bootloader Client plugin when an image segment that is part of an image...">emberAfPluginOtaBootloaderClientIncomingImageSegmentCallback()</a> callback.</li>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9ba843cf9471865eed06a3f3a535a301256">EMBER_OTA_BOOTLOADER_STATUS_FAILED</a> indicating that the client failed to fully download the image and the download process was terminated.</li>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9baea25d80aaf64dafca72e5b04fb95ff28">EMBER_OTA_BOOTLOADER_STATUS_TIMEOUT</a> indicating that the client timed out waiting for a message from the server.</li>
<li><a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9bac00a0b70d8b4a3e91715b4f3a86b6e96">EMBER_OTA_BOOTLOADER_STATUS_ABORTED</a> indicating that the application aborted the ongoing image download process as result of calling the API <a class="el" href="group__ota__bootloader__client.htm#ga68ba6527073a49e83576ba324dc21452" title="An API for aborting an ongoing image download process.">emberAfPluginOtaBootloaderClientAbortImageDownload()</a>.</li>
</ul>
</td></tr>
    <tr><td class="paramname">imageTag</td><td>A 1-byte tag of the image this callback refers to.</td></tr>
    <tr><td class="paramname">imageSize</td><td>The total size of the downloaded image in bytes. This parameter is meaningful only in case the status parameter is set to <a class="el" href="group__ota__bootloader__common.htm#ggac36608b8807aaef08394730728c12a9ba01f128f6147cdeb41e2fb5457a4de9dd">EMBER_OTA_BOOTLOADER_STATUS_SUCCESS</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga30aeb975c38bc1c9ff05110c59afe896"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberAfPluginOtaBootloaderClientIncomingRequestStatusCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>applicationServerStatus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>applicationStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked by the OTA Bootloader Client plugin to indicate that an OTA Bootloader Server has requested the status of the client device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serverId</td><td>The ID of the server the request came from.</td></tr>
    <tr><td class="paramname">applicationServerStatus</td><td>The server application status.</td></tr>
    <tr><td class="paramname">applicationStatus</td><td>A 1-byte status set by the client application that shall be reported to the server. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gabd08010ca8d9c070955cac3179457309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberAfPluginOtaBootloaderClientIncomingRequestBootloadCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>serverId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>imageTag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bootloadDelayMs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>applicationStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback invoked by the OTA Bootloader Client plugin to indicate that an OTA Bootloader Server has requested to perform a bootload operation at a certain point in time in the future. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serverId</td><td>The ID of the server the request came from.</td></tr>
    <tr><td class="paramname">imageTag</td><td>A 1-byte tag of the image this callback refers to.</td></tr>
    <tr><td class="paramname">bootloadDelayMs</td><td>The delay in milliseconds after which the client has been requested to perform a bootload operation.</td></tr>
    <tr><td class="paramname">applicationStatus</td><td>A 1-byte status set by the client application that shall be reported to the server.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TRUE if the application accepted the request of bootloading the specified image at the requested time, FALSE otherwise. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
