<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__command__interpreter.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Command Interpreter Plugin</div>  </div>
<div class="ingroups"><a class="el" href="group__silabs__connect__af.htm">Silicon Labs Connect Application Framework API Reference</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Command entry for a command table.  <a href="structEmberCommandEntry.htm#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structEmberCommandState.htm">EmberCommandState</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">For use when declaring a separate command streams. The fields are not accessed directly by the application.  <a href="structEmberCommandState.htm#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga8c2b776cce16ba8e6fff75b2c721b8ac"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga8c2b776cce16ba8e6fff75b2c721b8ac">MAX_TOKEN_COUNT</a></td></tr>
<tr class="separator:ga8c2b776cce16ba8e6fff75b2c721b8ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8af7852e5e52482639685714bbbb6cd1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga8af7852e5e52482639685714bbbb6cd1">emberCommandEntryAction</a>(name, command, arguments, description)</td></tr>
<tr class="separator:ga8af7852e5e52482639685714bbbb6cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f9ba979e96c0b5dfe12245fe6be28a7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga1f9ba979e96c0b5dfe12245fe6be28a7">emberCommandEntrySubMenu</a>(name, nestedCommands, description)</td></tr>
<tr class="separator:ga1f9ba979e96c0b5dfe12245fe6be28a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91da3f179f4f296b2145cef846a22f0e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga91da3f179f4f296b2145cef846a22f0e">emberCommandEntryTerminator</a>()</td></tr>
<tr class="separator:ga91da3f179f4f296b2145cef846a22f0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabed9662321d94b991681f52176f40715"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gabed9662321d94b991681f52176f40715">emberCommand</a></td></tr>
<tr class="separator:gabed9662321d94b991681f52176f40715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafaf945af7177fec6ebcf1638de796853"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gafaf945af7177fec6ebcf1638de796853">emberNestedCommand</a></td></tr>
<tr class="separator:gafaf945af7177fec6ebcf1638de796853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf585803ef1c923293184bbd24ac3b3cf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaf585803ef1c923293184bbd24ac3b3cf">emberProcessCommandInput</a>(port)</td></tr>
<tr class="separator:gaf585803ef1c923293184bbd24ac3b3cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gaae6a685e03bf1193816de6fdfc156888"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaae6a685e03bf1193816de6fdfc156888">CommandAction</a> )(void)</td></tr>
<tr class="separator:gaae6a685e03bf1193816de6fdfc156888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a3296b99558f03b7153fab210fedd7d"><td class="memItemLeft" align="right" valign="top">typedef void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga3a3296b99558f03b7153fab210fedd7d">EmberCommandErrorHandler</a> (<a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> status, <a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *command)</td></tr>
<tr class="separator:ga3a3296b99558f03b7153fab210fedd7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gaaec7c86cf5b8f36193f372591927d2ba"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> { <br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baa10052845164b30f4eed50406eef87def">EMBER_CMD_SUCCESS</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baa99b9df2353ec96c77291397d8c075a72">EMBER_CMD_ERR_PORT_PROBLEM</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baa952f77b5cab93244bc5f5c387db225cf">EMBER_CMD_ERR_NO_SUCH_COMMAND</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baab5c5f663912090d75a1f4dbf47872c42">EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baaac57a3355c346de0a70f4fadae1bc589">EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baab22b7db23789c28a8f5e2b8d8f42a78e">EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baa6797b75854b506dc77895ff570858ecf">EMBER_CMD_ERR_STRING_TOO_LONG</a>, 
<br/>
&#160;&#160;<a class="el" href="group__command__interpreter.htm#ggaaec7c86cf5b8f36193f372591927d2baa5c39e7c3003579e05726c0238a8665b0">EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE</a>
<br/>
 }</td></tr>
<tr class="separator:gaaec7c86cf5b8f36193f372591927d2ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga16f955d3a20f21df91d3d79d0ceda53b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga16f955d3a20f21df91d3d79d0ceda53b">emberCommandErrorHandler</a> (<a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> status, <a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *command)</td></tr>
<tr class="separator:ga16f955d3a20f21df91d3d79d0ceda53b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4fe6025e2cdcb2b7ea02c951f56dc12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaf4fe6025e2cdcb2b7ea02c951f56dc12">emberPrintCommandUsage</a> (<a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *entry)</td></tr>
<tr class="separator:gaf4fe6025e2cdcb2b7ea02c951f56dc12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a8be4910cc0ec1e8340ff958dee9c5d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga3a8be4910cc0ec1e8340ff958dee9c5d">emberPrintCommandUsageNotes</a> (void)</td></tr>
<tr class="separator:ga3a8be4910cc0ec1e8340ff958dee9c5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga743d5d0400ec49a46afed6ba7d37eb9e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga743d5d0400ec49a46afed6ba7d37eb9e">emberPrintCommandTable</a> (void)</td></tr>
<tr class="separator:ga743d5d0400ec49a46afed6ba7d37eb9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga609141e78edf969adfdfd4aebf0813a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga609141e78edf969adfdfd4aebf0813a8">emberCommandClearBuffer</a> (void)</td></tr>
<tr class="separator:ga609141e78edf969adfdfd4aebf0813a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5d855e4379e58bc176df18743c134ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gab5d855e4379e58bc176df18743c134ae">emberCommandReaderInit</a> (void)</td></tr>
<tr class="separator:gab5d855e4379e58bc176df18743c134ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ab6fa93ca5735ee78b298bd6ef4ae56"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga0ab6fa93ca5735ee78b298bd6ef4ae56">emberProcessCommandString</a> (const uint8_t *input, uint16_t sizeOrPort)</td></tr>
<tr class="separator:ga0ab6fa93ca5735ee78b298bd6ef4ae56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52fe44781fc46d1ea5871ad19764ce1e"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga52fe44781fc46d1ea5871ad19764ce1e">emberHexToInt</a> (uint8_t ch)</td></tr>
<tr class="separator:ga52fe44781fc46d1ea5871ad19764ce1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga623a6a81771b9fabb65a6ebe7e652cd2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga623a6a81771b9fabb65a6ebe7e652cd2">emberStringToIpAddress</a> (const uint8_t *string, uint8_t stringLength, uint8_t *target)</td></tr>
<tr class="separator:ga623a6a81771b9fabb65a6ebe7e652cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60f46433b6c9911b386c21a5f7636f6b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga60f46433b6c9911b386c21a5f7636f6b">emberStringToIpPrefix</a> (const uint8_t *string, uint8_t stringLength, uint8_t *target)</td></tr>
<tr class="separator:ga60f46433b6c9911b386c21a5f7636f6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac20c30a7c71986ff0272e69255db3fee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gac20c30a7c71986ff0272e69255db3fee">emberInitializeCommandState</a> (<a class="el" href="structEmberCommandState.htm">EmberCommandState</a> *state)</td></tr>
<tr class="separator:gac20c30a7c71986ff0272e69255db3fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcee20391cea23750285e509893f5130"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gadcee20391cea23750285e509893f5130">emberRunCommandInterpreter</a> (bool commandIsBinary, <a class="el" href="structEmberCommandState.htm">EmberCommandState</a> *state, <a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *commands, <a class="el" href="group__command__interpreter.htm#ga3a3296b99558f03b7153fab210fedd7d">EmberCommandErrorHandler</a> *errorHandler, const uint8_t *input, uint16_t sizeOrPort)</td></tr>
<tr class="separator:gadcee20391cea23750285e509893f5130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7dbe36724fc3ae2eded185f4c449d9ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga7dbe36724fc3ae2eded185f4c449d9ed">emberCommandReaderSetDefaultBase</a> (uint8_t base)</td></tr>
<tr class="separator:ga7dbe36724fc3ae2eded185f4c449d9ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga748280e6231635371871e48bfc1be50b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga748280e6231635371871e48bfc1be50b">emberCommandTable</a> []</td></tr>
<tr class="separator:ga748280e6231635371871e48bfc1be50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Command Table Settings</h2></td></tr>
<tr class="memitem:gaee5bfb2bfa05c6537d2264b317ef770a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaee5bfb2bfa05c6537d2264b317ef770a">EMBER_MAX_COMMAND_ARGUMENTS</a></td></tr>
<tr class="separator:gaee5bfb2bfa05c6537d2264b317ef770a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3bd86d137f069cefa4aed35b58f1c71"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaa3bd86d137f069cefa4aed35b58f1c71">EMBER_COMMAND_BUFFER_LENGTH</a></td></tr>
<tr class="separator:gaa3bd86d137f069cefa4aed35b58f1c71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30735b0e4c844c5842c4fdb42d25a4e5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga30735b0e4c844c5842c4fdb42d25a4e5">EMBER_CUSTOM_COMMAND_BUFFER_LENGTH</a></td></tr>
<tr class="separator:ga30735b0e4c844c5842c4fdb42d25a4e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1874fa9a683db1623ffc51051c9c158e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga1874fa9a683db1623ffc51051c9c158e">EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD</a></td></tr>
<tr class="separator:ga1874fa9a683db1623ffc51051c9c158e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Functions to Retrieve Arguments</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp6699fdf1901bd023acf41b42bcc17f12"></a> Use the following functions in your functions that process commands to retrieve arguments from the command interpreter. These functions pull out unsigned integers, signed integers, and strings, and hex strings. Index 0 is the first command argument. </p>
</td></tr>
<tr class="memitem:ga02f729892568779c19ce1ff19c56ecbe"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga02f729892568779c19ce1ff19c56ecbe">emberCommandArgumentCount</a> (void)</td></tr>
<tr class="separator:ga02f729892568779c19ce1ff19c56ecbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90aa1784bf094e3a7fa57110b8a954fa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga90aa1784bf094e3a7fa57110b8a954fa">emberUnsignedCommandArgument</a> (uint8_t argNum)</td></tr>
<tr class="separator:ga90aa1784bf094e3a7fa57110b8a954fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f48b0620efe81a7274f1de8859f79b0"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga1f48b0620efe81a7274f1de8859f79b0">emberSignedCommandArgument</a> (uint8_t argNum)</td></tr>
<tr class="separator:ga1f48b0620efe81a7274f1de8859f79b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ab108d51a9fc5e554d5f18cd976bc02"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga1ab108d51a9fc5e554d5f18cd976bc02">emberStringCommandArgument</a> (int8_t argNum, uint8_t *length)</td></tr>
<tr class="separator:ga1ab108d51a9fc5e554d5f18cd976bc02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9d6b402164398dd71997e3769d3c91b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaa9d6b402164398dd71997e3769d3c91b">emberCommandName</a> (void)</td></tr>
<tr class="separator:gaa9d6b402164398dd71997e3769d3c91b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga12beaeaff9420a9dd10370f2dbead604"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga12beaeaff9420a9dd10370f2dbead604">emberGetStringArgument</a> (int8_t argNum, uint8_t *destination, uint8_t maxLength, bool leftPad)</td></tr>
<tr class="separator:ga12beaeaff9420a9dd10370f2dbead604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec8f87bab614c072f56fb542eeb1dbf1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gaec8f87bab614c072f56fb542eeb1dbf1">emberGetIpArgument</a> (uint8_t index, uint8_t *target)</td></tr>
<tr class="separator:gaec8f87bab614c072f56fb542eeb1dbf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e2a6fa947e1b97cd8d8cf7bd705a16b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga8e2a6fa947e1b97cd8d8cf7bd705a16b">emberGetIpPrefixArgument</a> (uint8_t index, uint8_t *target)</td></tr>
<tr class="separator:ga8e2a6fa947e1b97cd8d8cf7bd705a16b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad05cf0af65cc68d92dff0146fb1687a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gad05cf0af65cc68d92dff0146fb1687a2">emberGetExtendedPanIdArgument</a> (int8_t index, uint8_t *extendedPanId)</td></tr>
<tr class="separator:gad05cf0af65cc68d92dff0146fb1687a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab82a974479052624a3d2657e5bcf6dc1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gab82a974479052624a3d2657e5bcf6dc1">emberCopyKeyArgument</a>(index, keyDataPointer)</td></tr>
<tr class="separator:gab82a974479052624a3d2657e5bcf6dc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d97b3a2fbcfc70c7e224c7b302ee76c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga1d97b3a2fbcfc70c7e224c7b302ee76c">emberCopyEui64Argument</a>(index, eui64)</td></tr>
<tr class="separator:ga1d97b3a2fbcfc70c7e224c7b302ee76c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7660dd913e72caa61b0a42a7f0cd7cc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#gab7660dd913e72caa61b0a42a7f0cd7cc">emberGetKeyArgument</a>(index, keyDataPointer)</td></tr>
<tr class="separator:gab7660dd913e72caa61b0a42a7f0cd7cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d71ab7f20caa5205f64bfe8c2e03bdb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__command__interpreter.htm#ga7d71ab7f20caa5205f64bfe8c2e03bdb">emberGetEui64Argument</a>(index, eui64)</td></tr>
<tr class="separator:ga7d71ab7f20caa5205f64bfe8c2e03bdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Processes commands coming from the serial port. </p>
<p>Interpret serial port commands. See command-interpreter2.c for source code.</p>
<p>See the following application usage example followed by a brief explanation. </p>
<div class="fragment"><div class="line"><span class="comment">// Usage: network form 22 0xAB12 -3 { 00 01 02 A3 A4 A5 A6 A7 }</span></div>
<div class="line"><span class="keywordtype">void</span> formCommand(<span class="keywordtype">void</span>)</div>
<div class="line">{</div>
<div class="line">  uint8_t channel = <a class="code" href="group__command__interpreter.htm#ga90aa1784bf094e3a7fa57110b8a954fa">emberUnsignedCommandArgument</a>(0);</div>
<div class="line">  uint16_t panId  = <a class="code" href="group__command__interpreter.htm#ga90aa1784bf094e3a7fa57110b8a954fa">emberUnsignedCommandArgument</a>(1);</div>
<div class="line">  int8_t power   = <a class="code" href="group__command__interpreter.htm#ga1f48b0620efe81a7274f1de8859f79b0">emberSignedCommandArgument</a>(2);</div>
<div class="line">  uint8_t length;</div>
<div class="line">  uint8_t *eui64  = <a class="code" href="group__command__interpreter.htm#ga1ab108d51a9fc5e554d5f18cd976bc02">emberStringCommandArgument</a>(3, &amp;length);</div>
<div class="line">  ...</div>
<div class="line">  ... call <a class="code" href="group__network__management.htm#gaf3465df55d552f0c751f338c7c57fc03" title="Forms a new network by becoming the coordinator.">emberFormNetwork</a>() etc</div>
<div class="line">  ...</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="comment">// The main command table.</span></div>
<div class="line"><a class="code" href="structEmberCommandEntry.htm" title="Command entry for a command table.">EmberCommandEntry</a> <a class="code" href="group__command__interpreter.htm#ga748280e6231635371871e48bfc1be50b">emberCommandTable</a>[] = {</div>
<div class="line">  <a class="code" href="group__command__interpreter.htm#ga1f9ba979e96c0b5dfe12245fe6be28a7">emberCommandEntrySubMenu</a>(<span class="stringliteral">&quot;network&quot;</span>,  networkCommands, <span class="stringliteral">&quot;Network form/join commands&quot;</span>),</div>
<div class="line">  <a class="code" href="group__command__interpreter.htm#ga8af7852e5e52482639685714bbbb6cd1">emberCommandEntryAction</a>(<span class="stringliteral">&quot;status&quot;</span>,    statusCommand,   <span class="stringliteral">&quot;Prints application status),</span></div>
<div class="line"><span class="stringliteral">  ...</span></div>
<div class="line"><span class="stringliteral">  emberCommandEntryTerminator()</span></div>
<div class="line"><span class="stringliteral">};</span></div>
<div class="line"><span class="stringliteral"></span></div>
<div class="line"><span class="stringliteral">// The table of network commands.</span></div>
<div class="line"><span class="stringliteral">EmberCommandEntry networkCommands[] = {</span></div>
<div class="line"><span class="stringliteral">  emberCommandEntryAction(&quot;</span>form<span class="stringliteral">&quot;, formCommand, &quot;</span>uvsh<span class="stringliteral">&quot;, &quot;</span>Form a network<span class="stringliteral">&quot;),</span></div>
<div class="line"><span class="stringliteral">  { &quot;</span>join<span class="stringliteral">&quot;,       joinCommand, &quot;</span>uvsh<span class="stringliteral">&quot; },</span></div>
<div class="line"><span class="stringliteral">  ...</span></div>
<div class="line"><span class="stringliteral">  emberCommandEntryTerminator()</span></div>
<div class="line"><span class="stringliteral">};</span></div>
<div class="line"><span class="stringliteral"></span></div>
<div class="line"><span class="stringliteral">void main(void)</span></div>
<div class="line"><span class="stringliteral">{</span></div>
<div class="line"><span class="stringliteral">   emberCommandReaderInit();</span></div>
<div class="line"><span class="stringliteral">   while(0) {</span></div>
<div class="line"><span class="stringliteral">     ...</span></div>
<div class="line"><span class="stringliteral">     // Process input and print prompt if it returns true.</span></div>
<div class="line"><span class="stringliteral">     if (emberProcessCommandInput(serialPort)) {</span></div>
<div class="line"><span class="stringliteral">        emberSerialPrintf(1, &quot;</span>%p&gt;<span class="stringliteral">&quot;, PROMPT);</span></div>
<div class="line"><span class="stringliteral">     }</span></div>
<div class="line"><span class="stringliteral">     ...</span></div>
<div class="line"><span class="stringliteral">   }</span></div>
<div class="line"><span class="stringliteral">}</span></div>
</div><!-- fragment --><ol type="1">
<li>Applications specify the commands that can be interpreted by defining the emberCommandTable array of type <a class="el" href="structEmberCommandEntry.htm" title="Command entry for a command table.">EmberCommandEntry</a>. The table includes the following information for each command:<ol type="a">
<li>The full command name.</li>
<li>Your application's function name that implements the command.</li>
<li>An <a class="el" href="structEmberCommandEntry.htm#aefb9505b320fd93aadc007936d23225a">EmberCommandEntry::argumentTypes</a> string specifies the number and types of arguments the command accepts. See ::argumentTypes for details.</li>
<li>A description string explains the command.</li>
</ol>
</li>
<li>A default error handler <a class="el" href="group__command__interpreter.htm#ga16f955d3a20f21df91d3d79d0ceda53b">emberCommandErrorHandler()</a> is provided to deal with incorrect command input. Applications may override it.</li>
<li>The application calls <a class="el" href="group__command__interpreter.htm#gab5d855e4379e58bc176df18743c134ae" title="Initialize the command interpreter.">emberCommandReaderInit()</a> to initalize, and <a class="el" href="group__command__interpreter.htm#gaf585803ef1c923293184bbd24ac3b3cf" title="Process input coming in on the given serial port.">emberProcessCommandInput()</a> in its main loop.</li>
<li>Within the application's command functions, use emberXXXCommandArgument() functions to retrieve command arguments.</li>
</ol>
<p>The command interpreter does extensive processing and validation of the command input before calling the function that implements the command. It checks that the number, type, syntax, and range of all arguments are correct. It performs any conversions necessary (for example, converting integers and strings input in hexadecimal notation into the corresponding bytes), so that no additional parsing is necessary within command functions. If there is an error in the command input, <a class="el" href="group__command__interpreter.htm#ga16f955d3a20f21df91d3d79d0ceda53b">emberCommandErrorHandler()</a> is called rather than a command function.</p>
<p>The command interpreter allows inexact matches of command names. The input command may be either shorter or longer than the actual command. However, if more than one inexact match is found and there is no exact match, an error of type EMBER_CMD_ERR_NO_SUCH_COMMAND will be generated. To disable this feature, define EMBER_REQUIRE_EXACT_COMMAND_NAME in the application configuration header. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="gaee5bfb2bfa05c6537d2264b317ef770a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_MAX_COMMAND_ARGUMENTS</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The maximum number of arguments a command can have. A nested command counts as an argument. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00104">104</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaa3bd86d137f069cefa4aed35b58f1c71"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_COMMAND_BUFFER_LENGTH</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The maximum number of arguments a command can have. A nested command counts as an argument. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00108">108</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga30735b0e4c844c5842c4fdb42d25a4e5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_CUSTOM_COMMAND_BUFFER_LENGTH</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The max message size for custom commands reserves three bytes for the length (1 bytes) and the custom command identifier (2 bytes). </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00114">114</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga1874fa9a683db1623ffc51051c9c158e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Whether or not the command entry structure will include descriptions for the commands. This consumes additional CONST space, which is expensive on the XAP. By default descriptions are not included. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00121">121</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8c2b776cce16ba8e6fff75b2c721b8ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_TOKEN_COUNT</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00128">128</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8af7852e5e52482639685714bbbb6cd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandEntryAction</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">command, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arguments, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">description&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00206">206</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga1f9ba979e96c0b5dfe12245fe6be28a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandEntrySubMenu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">nestedCommands, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">description&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00208">208</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga91da3f179f4f296b2145cef846a22f0e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandEntryTerminator</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00210">210</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gabed9662321d94b991681f52176f40715"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommand</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00215">215</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gafaf945af7177fec6ebcf1638de796853"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberNestedCommand</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00216">216</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab82a974479052624a3d2657e5bcf6dc1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCopyKeyArgument</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">keyDataPointer&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A convenience macro for copying security key arguments to an <a class="el" href="structEmberKeyData.htm" title="This data structure contains the key data that is passed into various other functions.">EmberKeyData</a> pointer. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00285">285</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga1d97b3a2fbcfc70c7e224c7b302ee76c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCopyEui64Argument</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">eui64&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A convenience macro for copying eui64 arguments to an EmberEUI64. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00292">292</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab7660dd913e72caa61b0a42a7f0cd7cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberGetKeyArgument</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">keyDataPointer&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A convenience macro for copying security key arguments to an <a class="el" href="structEmberKeyData.htm" title="This data structure contains the key data that is passed into various other functions.">EmberKeyData</a> pointer. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00329">329</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga7d71ab7f20caa5205f64bfe8c2e03bdb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberGetEui64Argument</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">eui64&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the EUI64 argument to the given EmberEui64 destination, reversing the bytes. EUI64's are stored little endian so reversing the bytes means they are big endian in the input command string. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00339">339</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaf585803ef1c923293184bbd24ac3b3cf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberProcessCommandInput</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">port</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Process input coming in on the given serial port. </p>
<dl class="section return"><dt>Returns</dt><dd>true if an end of line character was read. If the application uses a command line prompt, this indicates it is time to print the prompt. <div class="fragment"><div class="line"><span class="keywordtype">void</span> <a class="code" href="group__command__interpreter.htm#gaf585803ef1c923293184bbd24ac3b3cf" title="Process input coming in on the given serial port.">emberProcessCommandInput</a>(uint8_t port);</div>
</div><!-- fragment --> </dd></dl>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00373">373</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="gaae6a685e03bf1193816de6fdfc156888"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* CommandAction)(void)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00130">130</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga3a3296b99558f03b7153fab210fedd7d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void EmberCommandErrorHandler(<a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> status, <a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *command)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of error handlers; the command argument is currently always NULL. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00448">448</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gaaec7c86cf5b8f36193f372591927d2ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Command error states. </p>
<p>If you change this list, ensure you also change the strings that describe these errors in the array emberCommandErrorNames[] in command-interpreter2-error.c. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa10052845164b30f4eed50406eef87def"></a>EMBER_CMD_SUCCESS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa99b9df2353ec96c77291397d8c075a72"></a>EMBER_CMD_ERR_PORT_PROBLEM</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa952f77b5cab93244bc5f5c387db225cf"></a>EMBER_CMD_ERR_NO_SUCH_COMMAND</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baab5c5f663912090d75a1f4dbf47872c42"></a>EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baaac57a3355c346de0a70f4fadae1bc589"></a>EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baab22b7db23789c28a8f5e2b8d8f42a78e"></a>EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa6797b75854b506dc77895ff570858ecf"></a>EMBER_CMD_ERR_STRING_TOO_LONG</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa5c39e7c3003579e05726c0238a8665b0"></a>EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00227">227</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga02f729892568779c19ce1ff19c56ecbe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberCommandArgumentCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the number of arguments for the current command. </p>

</div>
</div>
<a class="anchor" id="ga90aa1784bf094e3a7fa57110b8a954fa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t emberUnsignedCommandArgument </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>argNum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves unsigned integer arguments. </p>

</div>
</div>
<a class="anchor" id="ga1f48b0620efe81a7274f1de8859f79b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t emberSignedCommandArgument </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>argNum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves signed integer arguments. </p>

</div>
</div>
<a class="anchor" id="ga1ab108d51a9fc5e554d5f18cd976bc02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* emberStringCommandArgument </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>argNum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieve quoted string or hex string arguments. Hex strings have already been converted into binary. Ascii strings have been null terminated. The null terminator is not included in the returned length argument. To retrieve the name of the command itself, use an argNum of -1. For example, to retrieve the first character of the command, do: uint8_t firstChar = emberStringCommandArgument(-1, NULL)[0]. If the command is nested, an index of -2, -3, etc will work to retrieve the higher level command names. Note that [-1] only returns the text entered. If an abbreviated command name is entered only the text entered will be returned with [-1]. </p>

</div>
</div>
<a class="anchor" id="gaa9d6b402164398dd71997e3769d3c91b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* emberCommandName </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>A convenience macro for copying security key arguments to an <a class="el" href="structEmberKeyData.htm" title="This data structure contains the key data that is passed into various other functions.">EmberKeyData</a> pointer. </p>

</div>
</div>
<a class="anchor" id="ga12beaeaff9420a9dd10370f2dbead604"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberGetStringArgument </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>argNum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>destination</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>maxLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>leftPad</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the string argument to the given destination up to maxLength. If the argument length is nonzero but less than maxLength and leftPad is true, leading zeroes are prepended to bring the total length of the target up to maxLength. If the argument is longer than the maxLength, it is truncated to maxLength. Returns the minimum of the argument length and maxLength. Ascii strings are null terminated, but the null terminator is not included in the returned length.</p>
<p>This function is commonly used for reading in hex strings such as EUI64 or key data and left padding them with zeroes. See <a class="el" href="group__command__interpreter.htm#gab7660dd913e72caa61b0a42a7f0cd7cc">emberGetKeyArgument</a> and <a class="el" href="group__command__interpreter.htm#ga7d71ab7f20caa5205f64bfe8c2e03bdb">emberGetEui64Argument</a> for convenience macros for this purpose. </p>

</div>
</div>
<a class="anchor" id="gaec8f87bab614c072f56fb542eeb1dbf1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberGetIpArgument </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Parses and returns, via target, an IP address at the provided index Returns true if an IP address was successfully parsed Return false otherwise </p>

</div>
</div>
<a class="anchor" id="ga8e2a6fa947e1b97cd8d8cf7bd705a16b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberGetIpPrefixArgument </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Parses and returns, via target, an IP prefix at the provided index Returns true if an IP prefix was successfully parsed Return false otherwise </p>

</div>
</div>
<a class="anchor" id="gad05cf0af65cc68d92dff0146fb1687a2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberGetExtendedPanIdArgument </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>extendedPanId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copies the extended PAN id argument to the given destination, reversing the bytes. Extended PAN ids are stored little endian so reversing the bytes means they are big endian in the input command string. </p>

</div>
</div>
<a class="anchor" id="ga16f955d3a20f21df91d3d79d0ceda53b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandErrorHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__command__interpreter.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a>&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf4fe6025e2cdcb2b7ea02c951f56dc12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandUsage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *&#160;</td>
          <td class="paramname"><em>entry</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga3a8be4910cc0ec1e8340ff958dee9c5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandUsageNotes </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga743d5d0400ec49a46afed6ba7d37eb9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandTable </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga609141e78edf969adfdfd4aebf0813a8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandClearBuffer </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gab5d855e4379e58bc176df18743c134ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandReaderInit </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the command interpreter. </p>

</div>
</div>
<a class="anchor" id="ga0ab6fa93ca5735ee78b298bd6ef4ae56"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberProcessCommandString </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>sizeOrPort</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Process the given string as a command. </p>

</div>
</div>
<a class="anchor" id="ga52fe44781fc46d1ea5871ad19764ce1e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberHexToInt </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ch</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the value of hex digit ch (0 - 15). Returns a value &gt; 15 if ch is not a hex digit. </p>

</div>
</div>
<a class="anchor" id="ga623a6a81771b9fabb65a6ebe7e652cd2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberStringToIpAddress </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>stringLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses textual representations of IPv6 addresses as described in <a href="http://www.ietf.org/rfc/rfc4291.txt">http://www.ietf.org/rfc/rfc4291.txt</a>. </p>

</div>
</div>
<a class="anchor" id="ga60f46433b6c9911b386c21a5f7636f6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberStringToIpPrefix </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>stringLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses textual representations of IPv6 prefixes as described in <a href="http://www.ietf.org/rfc/rfc4291.txt">http://www.ietf.org/rfc/rfc4291.txt</a>. </p>

</div>
</div>
<a class="anchor" id="gac20c30a7c71986ff0272e69255db3fee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberInitializeCommandState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberCommandState.htm">EmberCommandState</a> *&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Must be called to initialize a command state before passing it to <a class="el" href="group__command__interpreter.htm#gadcee20391cea23750285e509893f5130" title="For use when additional different command streams are being used.">emberRunCommandInterpreter()</a>. </p>

</div>
</div>
<a class="anchor" id="gadcee20391cea23750285e509893f5130"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberRunCommandInterpreter </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>commandIsBinary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCommandState.htm">EmberCommandState</a> *&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *&#160;</td>
          <td class="paramname"><em>commands</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__command__interpreter.htm#ga3a3296b99558f03b7153fab210fedd7d">EmberCommandErrorHandler</a> *&#160;</td>
          <td class="paramname"><em>errorHandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>sizeOrPort</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For use when additional different command streams are being used. </p>

</div>
</div>
<a class="anchor" id="ga7dbe36724fc3ae2eded185f4c449d9ed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandReaderSetDefaultBase </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>base</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="ga748280e6231635371871e48bfc1be50b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> emberCommandTable[]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
