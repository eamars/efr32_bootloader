<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms
   &#160;<span id="projectnumber">Silicon Labs 1.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('symbol-timer_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">symbol-timer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="symbol-timer_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifndef __SYMBOL_TIMER_H__</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __SYMBOL_TIMER_H__</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__symbol__timer.htm#gabca9308bdee831f560027708f51459cf" title="Initializes the symbol timer. When a dedicated symbol timer peripheral exists (e.g. EM2xx, EM3xx) this initialization is generally performed directly by the PHY, so this routine may be a no-op.">halInternalStartSymbolTimer</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;uint32_t <a class="code" href="group__symbol__timer.htm#ga6b856e2c2db8910e382ad3febba3f617" title="Returns the current symbol time in symbol ticks (units are platform-dependent, but typically on the o...">halStackGetInt32uSymbolTick</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">// New API:</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__symbol__timer.htm#ga317ebc292158f820274ab8bb4837960e" title="Returns true if symbol tick time st1 is greater than symbol tick time st2, as determined by half the ...">halStackInt32uSymbolTickGTorEqual</a>(uint32_t st1, uint32_t st2);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;uint32_t <a class="code" href="group__symbol__timer.htm#ga93ba65ec4621ef94517dc07a100eb1fd" title="Obtains the number of symtol timer ticks in one second of real time. Can be used for conversion betwe...">halStackGetSymbolTicksPerSecond</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">// New API:</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="group__symbol__timer.htm#gabebe9ae06d9425342e3e75dbaf4a5842">   67</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842a5c1f38349a1b5db4814b5a1a63aaa1d1">   68</a></span>&#160;  <a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842a5c1f38349a1b5db4814b5a1a63aaa1d1">EM_HAL_SYMBOL_DELAY_CHANNEL_A</a>,  <span class="comment">// 0</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842acd222df8e3c2de057ffbbb122dd75c60">   69</a></span>&#160;  <a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842acd222df8e3c2de057ffbbb122dd75c60">EM_HAL_SYMBOL_DELAY_CHANNEL_B</a>,  <span class="comment">// 1</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842a32e09c84c0b2049c062799ff370019b0">   70</a></span>&#160;  <a class="code" href="group__symbol__timer.htm#ggabebe9ae06d9425342e3e75dbaf4a5842a32e09c84c0b2049c062799ff370019b0">EM_HAL_SYMBOL_DELAY_CHANNELS</a>    <span class="comment">// Must be last</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;} <a class="code" href="group__symbol__timer.htm#gabebe9ae06d9425342e3e75dbaf4a5842" title="Specifies two independent channels for symbol delay operations.">EmHalSymbolDelayChannel_t</a>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="group__symbol__timer.htm#gaa98340e0a0e22a75c974aaa3d4da8e36">   76</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="group__symbol__timer.htm#gaa98340e0a0e22a75c974aaa3d4da8e36" title="Specifies the callback API triggered when the symbol timer channel expires.">EmHalSymbolDelayCallback_t</a>)(<a class="code" href="group__symbol__timer.htm#gabebe9ae06d9425342e3e75dbaf4a5842" title="Specifies two independent channels for symbol delay operations.">EmHalSymbolDelayChannel_t</a> delayChan);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;uint32_t <a class="code" href="group__symbol__timer.htm#gad235db810b68ec6c69da43d4f7019762" title="Sets up a delay timer to call the indicated interrupt-context callback when it expires.">halStackOrderSymbolDelay</a>(<a class="code" href="group__symbol__timer.htm#gabebe9ae06d9425342e3e75dbaf4a5842" title="Specifies two independent channels for symbol delay operations.">EmHalSymbolDelayChannel_t</a> delayChan,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                  <a class="code" href="group__symbol__timer.htm#gaa98340e0a0e22a75c974aaa3d4da8e36" title="Specifies the callback API triggered when the symbol timer channel expires.">EmHalSymbolDelayCallback_t</a> callback,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                  uint32_t microseconds);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__symbol__timer.htm#gaa0b3fc002bce29aeea62ffa5fc8f4091" title="Cancels the delay set up by an earlier halStackOrderSymbolDelay() call.">halStackCancelSymbolDelay</a>(<a class="code" href="group__symbol__timer.htm#gabebe9ae06d9425342e3e75dbaf4a5842" title="Specifies two independent channels for symbol delay operations.">EmHalSymbolDelayChannel_t</a> delayChan,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                               <a class="code" href="group__symbol__timer.htm#gaa98340e0a0e22a75c974aaa3d4da8e36" title="Specifies the callback API triggered when the symbol timer channel expires.">EmHalSymbolDelayCallback_t</a> callback);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">// Old API below is deprecated; retained for backwards-compatibility only:</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__symbol__timer.htm#ga50fd8bfca405a6b1e72d08b28a1d3bb9" title="Sets up a timer and calls an interrupt-context callback when it expires.">halStackOrderInt16uSymbolDelayA</a>(uint16_t symbols);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__symbol__timer.htm#gab94fb7dcc682a22b1df86ffddcc45864" title="Cancels the timer set up by halStackOrderInt16uSymbolDelayA().">halStackCancelSymbolDelayA</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__symbol__timer.htm#ga86980dd4e5062f10de9ba59a1b164450" title="This is the interrupt level callback into the stack that is called when the timers set by halStackOrd...">halStackSymbolDelayAIsr</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#endif //__SYMBOL_TIMER_H__</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Silicon Labs Connect API Reference: For the EZR32 and EFR32 SoC Platforms. Silicon Labs 1.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
