# ======================= Find Compiler =======================
# TOOLCHAIN EXTENSION
IF(WIN32)
    SET(TOOLCHAIN_EXT ".exe")
ELSE()
    SET(TOOLCHAIN_EXT "")
ENDIF()

# CMAKE_BUILD_TYPE
IF(NOT CMAKE_BUILD_TYPE MATCHES Debug)
    SET (CMAKE_BUILD_TYPE Release)
ENDIF()

# TARGET_TRIPLET
SET(TARGET_TRIPLET "")

# set architecture for compiler
SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_PROCESSOR x86)

# configure compiler
SET(CMAKE_C_COMPILER ${TARGET_TRIPLET}gcc${TOOLCHAIN_EXT})
SET(CMAKE_CXX_COMPILER ${TARGET_TRIPLET}g++${TOOLCHAIN_EXT})
SET(CMAKE_ASM_COMPILER ${TARGET_TRIPLET}gcc${TOOLCHAIN_EXT})

SET (CMAKE_AR           "${TARGET_TRIPLET}ar${TOOLCHAIN_EXT}")
SET (CMAKE_RANLIB       "${TARGET_TRIPLET}ranlib${TOOLCHAIN_EXT}")

SET(CMAKE_OBJCOPY ${TARGET_TRIPLET}objcopy)
SET(CMAKE_OBJDUMP ${TARGET_TRIPLET}objdump)
SET(CMAKE_SIZE ${TARGET_TRIPLET}size)
SET(CMAKE_LINKER ${TARGET_TRIPLET}gcc${TOOLCHAIN_EXT})
SET(CMAKE_DEBUGER ${TARGET_TRIPLET}gdb{TOOLCHAIN_EXT})

SET(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <OBJECTS> <LINK_LIBRARIES> -o <TARGET> <LINK_FLAGS>")
SET(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <OBJECTS> <LINK_LIBRARIES> -o <TARGET> <LINK_FLAGS>")

# configure generic build flags for debug and release
SET(CMAKE_C_FLAGS_DEBUG "-O1 -std=gnu11 -DDEBUG")
SET(CMAKE_CXX_FLAGS_DEBUG "-O1 -std=c++14 -DDEBUG")
SET(CMAKE_ASM_FLAGS_DEBUG)
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG)

SET(CMAKE_C_FLAGS_RELEASE "-O3 -std=gnu11 ")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -std=c++14 ")
SET(CMAKE_ASM_FLAGS_RELEASE)
SET(CMAKE_EXE_LINKER_FLAGS_RELESE)

SET(CMAKE_FIND_ROOT_PATH ${TOOLCHAIN_DIR}/${TARGET_TRIPLET} ${EXTRA_FIND_PATH})
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

IF(CMAKE_BUILD_TYPE MATCHES Release)
    SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/release)
    SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/release)
ELSEIF(CMAKE_BUILD_TYPE MATCHES Debug)
    SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/debug)
    SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/debug)
ENDIF()
# ==================== Find Compiler Done =====================
