MESSAGE("ENTER ${CMAKE_CURRENT_SOURCE_DIR}")

# override linker flags
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -T${TARGET_ROOT_DIRECTORY}/scripts/efr32mg12p_bootloader.ld")

# override executable
SET(HATCH_EXECUTABLE "WG_BOOTLOADER")

# Collect all source file
FILE (GLOB BL_SRC *.c)

# add dependency
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/target ${CMAKE_CURRENT_BINARY_DIR}/__target)

# include device specific configurations
INCLUDE_DIRECTORIES(${TARGET_SPECIFIC_INCLUDE_DIRECTORY})

# include board specific configurations
INCLUDE_DIRECTORIES(${BOARD_SPECIFIC_INCLUDE_DIRECTORY})

# include cmsis definitions
INCLUDE_DIRECTORIES(${CMSIS_INCLUDE_DIRECTORY})

# build source code as library
ADD_EXECUTABLE (${HATCH_EXECUTABLE}.${ELF_EXTENSION} ${BL_SRC})

ADD_DEPENDENCIES(${HATCH_EXECUTABLE}.${ELF_EXTENSION} target)

TARGET_LINK_LIBRARIES(${HATCH_EXECUTABLE}.${ELF_EXTENSION} target)

# include size command
INCLUDE("${PROJECT_SOURCE_DIR}/cmake/size.cmake")

# strip debug info from executable
ADD_CUSTOM_COMMAND(
		TARGET
		${HATCH_EXECUTABLE}.${ELF_EXTENSION}
		POST_BUILD
		COMMAND ${CMAKE_OBJCOPY} -O binary "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${ELF_EXTENSION}" "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${BINARY_EXTENSION}"
)

ADD_CUSTOM_COMMAND(
		TARGET
		${HATCH_EXECUTABLE}.${ELF_EXTENSION}
		POST_BUILD
		COMMAND ${CMAKE_OBJCOPY} -O srec "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${ELF_EXTENSION}" "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${SREC_EXTENSION}"
)

ADD_CUSTOM_COMMAND(
		TARGET
		${HATCH_EXECUTABLE}.${ELF_EXTENSION}
		POST_BUILD
		COMMAND ${CMAKE_OBJCOPY} -O ihex "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${ELF_EXTENSION}" "${EXECUTABLE_OUTPUT_PATH}/${HATCH_EXECUTABLE}.${HEX_EXTENSION}"
)
